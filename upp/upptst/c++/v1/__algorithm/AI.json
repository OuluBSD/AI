{
	"saved_hash": "e9512cef850df7ffa99ab39f20bcf600412bd6c3",
	"files": [
		{
			"key": "c++/v1/__algorithm/copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COPY_H",
						"r": "_LIBCPP___ALGORITHM_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fea12fcac947b92297ba6805993e3521413ba561"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__copy",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::__copy(_InIter,_Sent,_OutIter)",
						"r": "template <class, class _InIter, class _Sent, class _OutIter> constexpr pair<_InIter, _OutIter> __copy(_InIter, _Sent, _OutIter) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "std::__1",
						"u": "__COPY",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d1d7359a8a5d3d6f18b9d943075b1a0ed97e8e6"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_loop",
						"t": "",
						"i": "std::__1::__copy_loop",
						"r": "template <class _AlgPolicy> __copy_loop",
						"s": "std::__1",
						"u": "__COPY_LOOP",
						"q": "std::__1::__copy_loop",
						"w": "STD::__1::__COPY_LOOP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96243a1806b1ee426dc734c26ac5c2a3c9c62235"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter) const",
						"i": "std::__1::__copy_loop::",
						"r": "template <class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> operator()(_InIter __first, _Sent __last, _OutIter __result) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9231d01d6ddf41843fe6c86e4fddb680b3fe95c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_CopySegment",
						"t": "",
						"i": "std::__1::__copy_loop::_CopySegment",
						"r": "template <class _InIter, class _OutIter> _CopySegment",
						"s": "std::__1",
						"u": "_COPYSEGMENT",
						"q": "std::__1::__copy_loop::_CopySegment",
						"w": "STD::__1::__COPY_LOOP::_COPYSEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a9f2422daf26dfb4867ac9777c9bf0100d3cdc5"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Traits",
						"t": "std::__copy_loop::_CopySegment::_Traits",
						"i": "std::__copy_loop::_CopySegment::_Traits",
						"r": "using _Traits",
						"s": "std::__1",
						"u": "_TRAITS",
						"q": "std::__copy_loop::_CopySegment",
						"w": "STD::__COPY_LOOP::_COPYSEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e9782f647f9729ecb16b44a171e225f2606d6d6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_",
						"t": "_OutIter &",
						"i": "std::__1::__copy_loop::_CopySegment::__result_",
						"r": "_OutIter& __result_",
						"s": "std::__1",
						"u": "__RESULT_",
						"q": "std::__1::__copy_loop::_CopySegment",
						"w": "STD::__1::__COPY_LOOP::_COPYSEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce5f3993eb3727a004f54ab4cd157ff6bfca7914"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_CopySegment<_InIter, _OutIter>",
						"t": "void (_OutIter &)",
						"i": "std::__1::__copy_loop::_CopySegment::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr explicit _CopySegment<_InIter, _OutIter>(_OutIter& __result)",
						"s": "std::__1",
						"u": "_COPYSEGMENT<_INITER, _OUTITER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4bab7d2bbcf03e077a658a8b34ce01f9d39f3f4f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (typename _Traits::__local_iterator, typename _Traits::__local_iterator)",
						"i": "std::__1::__copy_loop::_CopySegment::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void operator()(typename _Traits::__local_iterator __lfirst, typename _Traits::__local_iterator __llast)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28cafd9d1ba6c0f114b4796e84a2d3e499c830ca"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__copy_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__is_segmented_iterator<_InIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ecf1139388471d2510b183b5eb2f3f6042f925c4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__copy_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__has_random_access_iterator_category<_InIter>::value&& !__is_segmented_iterator<_InIter>::value&& __is_segmented_iterator<_OutIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05bba7ed0d0707b9b6f481bae6d5141fde17784e"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_trivial",
						"t": "std::__copy_trivial",
						"i": "std::__copy_trivial",
						"r": "__copy_trivial",
						"s": "std::__1",
						"u": "__COPY_TRIVIAL",
						"q": "std::__copy_trivial",
						"w": "STD::__COPY_TRIVIAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b9e22b102faa8769fa091670fb68842a81d8282"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *) const",
						"i": "std::__1::__copy_trivial::",
						"r": "template <class _In, class _Out, __enable_if_t<__can_lower_copy_assignment_to_memmove<_In, _Out>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9cc90f92226ed3a8f73877167fe389cd45e0e419"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> __copy(_InIter __first, _Sent __last, _OutIter __result)",
						"s": "std::__1",
						"u": "__COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84939f1bf57d524b722347928cd1145b4bb99190"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result)",
						"s": "std::__1",
						"u": "COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98fffe36ea3db465e3235fad3835a54f5762a838"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/copy_move_common.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COPY_MOVE_COMMON_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COPY_MOVE_COMMON_H",
						"r": "_LIBCPP___ALGORITHM_COPY_MOVE_COMMON_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COPY_MOVE_COMMON_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "964422f8d3caa3e3cca42fc60258d0478d3b3460"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__can_lower_copy_assignment_to_memmove",
						"t": "",
						"i": "std::__1::__can_lower_copy_assignment_to_memmove",
						"r": "template <class _From, class _To> __can_lower_copy_assignment_to_memmove",
						"s": "std::__1",
						"u": "__CAN_LOWER_COPY_ASSIGNMENT_TO_MEMMOVE",
						"q": "std::__1::__can_lower_copy_assignment_to_memmove",
						"w": "STD::__1::__CAN_LOWER_COPY_ASSIGNMENT_TO_MEMMOVE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d69c0dee0760a13fd76e20c8b8275878ae9b2fef"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__can_lower_copy_assignment_to_memmove::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__can_lower_copy_assignment_to_memmove",
						"w": "STD::__1::__CAN_LOWER_COPY_ASSIGNMENT_TO_MEMMOVE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56b08d8ec56e7726a6deaa980f831dd1a51817a1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__can_lower_move_assignment_to_memmove",
						"t": "",
						"i": "std::__1::__can_lower_move_assignment_to_memmove",
						"r": "template <class _From, class _To> __can_lower_move_assignment_to_memmove",
						"s": "std::__1",
						"u": "__CAN_LOWER_MOVE_ASSIGNMENT_TO_MEMMOVE",
						"q": "std::__1::__can_lower_move_assignment_to_memmove",
						"w": "STD::__1::__CAN_LOWER_MOVE_ASSIGNMENT_TO_MEMMOVE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3880e64bc39a7c05a33ae49ee6535096b274b5dc"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__can_lower_move_assignment_to_memmove::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__can_lower_move_assignment_to_memmove",
						"w": "STD::__1::__CAN_LOWER_MOVE_ASSIGNMENT_TO_MEMMOVE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bba75192a4a6e39a68e0ee55c51341d2f0042c94"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_trivial_impl",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *)",
						"i": "std::__1::",
						"r": "template <class _In, class _Out> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_In *, _Out *> __copy_trivial_impl(_In *__first, _In *__last, _Out *__result)",
						"s": "std::__1",
						"u": "__COPY_TRIVIAL_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10613e08d7ec3719059420e918fcc649d689a298"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_backward_trivial_impl",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *)",
						"i": "std::__1::",
						"r": "template <class _In, class _Out> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_In *, _Out *> __copy_backward_trivial_impl(_In *__first, _In *__last, _Out *__result)",
						"s": "std::__1",
						"u": "__COPY_BACKWARD_TRIVIAL_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9970989ca52554da9ba8c2adc6eae9a41c29a3d"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__overload",
						"t": "",
						"i": "std::__1::__overload",
						"r": "template <class _F1, class _F2> __overload : _F1, _F2",
						"s": "std::__1",
						"u": "__OVERLOAD",
						"q": "std::__1::__overload",
						"w": "STD::__1::__OVERLOAD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "032cde64a5430fe719586af50a856c3eb25e1814"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__can_rewrap",
						"t": "",
						"i": "std::__1::__can_rewrap",
						"r": "template <class _InIter, class _Sent, class _OutIter, class",
						"s": "std::__1",
						"u": "__CAN_REWRAP",
						"q": "std::__1::__can_rewrap",
						"w": "STD::__1::__CAN_REWRAP",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc3001ec54b672786b3ab6fd88e6136413c2ad7a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unwrap_and_dispatch",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::",
						"r": "template <class _Algorithm, class _InIter, class _Sent, class _OutIter, __enable_if_t<__can_rewrap<_InIter, _Sent, _OutIter>::value, int>",
						"s": "std::__1",
						"u": "__UNWRAP_AND_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3802805a68831530244fe818c49ceafec337cda"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unwrap_and_dispatch",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::",
						"r": "template <class _Algorithm, class _InIter, class _Sent, class _OutIter, __enable_if_t<!__can_rewrap<_InIter, _Sent, _OutIter>::value, int>",
						"s": "std::__1",
						"u": "__UNWRAP_AND_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8fc3590bd5a14720a40db289492cf6772533d13"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__dispatch_copy_or_move",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _NaiveAlgorithm, class _OptimizedAlgorithm, class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> __dispatch_copy_or_move(_InIter __first, _Sent __last, _OutIter __out_first)",
						"s": "std::__1",
						"u": "__DISPATCH_COPY_OR_MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c8646b4025e2ad8483f1c5c9527a267b20991f6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/iterator_operations.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ITERATOR_OPERATIONS_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ITERATOR_OPERATIONS_H",
						"r": "_LIBCPP___ALGORITHM_ITERATOR_OPERATIONS_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ITERATOR_OPERATIONS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c0d09f152ce07a42505e450d819aa8b73bd774f"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_IterOps",
						"t": "",
						"i": "std::__1::_IterOps",
						"r": "template <class _AlgPolicy> _IterOps",
						"s": "std::__1",
						"u": "_ITEROPS",
						"q": "std::__1::_IterOps",
						"w": "STD::__1::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e79cb046adf1fa1ea02fca71bc29b512a685ae3"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ClassicAlgPolicy",
						"t": "std::_ClassicAlgPolicy",
						"i": "std::_ClassicAlgPolicy",
						"r": "_ClassicAlgPolicy",
						"s": "std::__1",
						"u": "_CLASSICALGPOLICY",
						"q": "std::_ClassicAlgPolicy",
						"w": "STD::_CLASSICALGPOLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da995f21836c3839e6ff94689d8f07b7ad8b1046"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IterOps",
						"t": "std::_IterOps<_ClassicAlgPolicy>",
						"i": "std::_IterOps",
						"r": "template<> _IterOps<_ClassicAlgPolicy>",
						"s": "std::__1",
						"u": "_ITEROPS",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4bcd660e6a421d2c862ea106b1def68331b9971a"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__value_type",
						"t": "std::_IterOps<std::_ClassicAlgPolicy>::__value_type",
						"i": "std::_IterOps::__value_type",
						"r": "using __value_type",
						"s": "std::__1",
						"u": "__VALUE_TYPE",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60c0bfede0d2d7a006b4428272b343826102c0f3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__iterator_category",
						"t": "std::_IterOps<std::_ClassicAlgPolicy>::__iterator_category",
						"i": "std::_IterOps::__iterator_category",
						"r": "using __iterator_category",
						"s": "std::__1",
						"u": "__ITERATOR_CATEGORY",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c790f02a4f62c4d38ad9dece5fb32c65e43d94cd"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__difference_type",
						"t": "std::_IterOps<std::_ClassicAlgPolicy>::__difference_type",
						"i": "std::_IterOps::__difference_type",
						"r": "using __difference_type",
						"s": "std::__1",
						"u": "__DIFFERENCE_TYPE",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2411d1e6c33fdb6a1b8cc40685c148d88e94612"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "advance",
						"t": "void (_Iter &, _Distance)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter, class _Distance> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr void advance(_Iter& __iter, _Distance __count)",
						"s": "std::__1",
						"u": "ADVANCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f423fbca509738c5dd3a2e7c3e6966e36ef1c67"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "distance",
						"t": "typename iterator_traits<_Iter>::difference_type (_Iter, _Iter)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr typename iterator_traits<_Iter>::difference_type distance(_Iter __first, _Iter __last)",
						"s": "std::__1",
						"u": "DISTANCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "22fcb919385906ae77e44c6ced98ec368c90e3b8"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__deref_t",
						"t": "std::_IterOps<std::_ClassicAlgPolicy>::__deref_t",
						"i": "std::_IterOps::__deref_t",
						"r": "using __deref_t",
						"s": "std::__1",
						"u": "__DEREF_T",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c447a2031756d0b79849182d72973ecf24c7d94d"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move_t",
						"t": "std::_IterOps<std::_ClassicAlgPolicy>::__move_t",
						"i": "std::_IterOps::__move_t",
						"r": "using __move_t",
						"s": "std::__1",
						"u": "__MOVE_T",
						"q": "std::_IterOps",
						"w": "STD::_ITEROPS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0817d4a1d060193385cc77c4fd8cc2bc22dd1a51"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__validate_iter_reference",
						"t": "void ()",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr void __validate_iter_reference()",
						"s": "std::__1",
						"u": "__VALIDATE_ITER_REFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "820cccd17c4dcfa903c1484f2557f3654a104b0d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__iter_move",
						"t": "__move_t<_Iter> (_Iter &&)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter, __enable_if_t<is_reference<__deref_t<_Iter>>::value, int>",
						"s": "std::__1",
						"u": "__ITER_MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "791022a1474e74321de06442bbb24739438ab9eb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__iter_move",
						"t": "__deref_t<_Iter> (_Iter &&)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter, __enable_if_t<!is_reference<__deref_t<_Iter>>::value, int>",
						"s": "std::__1",
						"u": "__ITER_MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf3ae3f1f6218ab4f9d5f924cda7d5fb6802911d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "iter_swap",
						"t": "void (_Iter1 &&, _Iter2 &&)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter1, class _Iter2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr void iter_swap(_Iter1&& __a, _Iter2&& __b)",
						"s": "std::__1",
						"u": "ITER_SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d6ff5b3ff116e2bea8c3c28682e6a06fa298ddc1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "next",
						"t": "_Iterator (_Iterator, _Iterator)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr _Iterator next(_Iterator, _Iterator __last)",
						"s": "std::__1",
						"u": "NEXT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c31dd0c3d685ac0a0c0656cf5e6d2658f819dff3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "next",
						"t": "__remove_cvref_t<_Iter> (_Iter &&, typename iterator_traits<__remove_cvref_t<_Iter>>::difference_type)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr __remove_cvref_t<_Iter> next(_Iter&& __it, typename iterator_traits<__remove_cvref_t<_Iter>>::difference_type __n = 1)",
						"s": "std::__1",
						"u": "NEXT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d0ec8ccd6b371826d60f4f26522aea968c290b9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prev",
						"t": "__remove_cvref_t<_Iter> (_Iter &&, typename iterator_traits<__remove_cvref_t<_Iter>>::difference_type)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr __remove_cvref_t<_Iter> prev(_Iter&& __iter, typename iterator_traits<__remove_cvref_t<_Iter>>::difference_type __n = 1)",
						"s": "std::__1",
						"u": "PREV",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ce354e94463a4828e98f293f7be092844c9fb15"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__advance_to",
						"t": "void (_Iter &, _Iter)",
						"i": "std::__1::_IterOps::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr void __advance_to(_Iter& __first, _Iter __last)",
						"s": "std::__1",
						"u": "__ADVANCE_TO",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a22e6303426e4b20b487ad2582cbb1dfa0621e0"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/iter_swap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ITER_SWAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ITER_SWAP_H",
						"r": "_LIBCPP___ALGORITHM_ITER_SWAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ITER_SWAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c32b872eba9b23970d8618c4f21f3aa7999f9ce"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "iter_swap",
						"t": "void (_ForwardIterator1, _ForwardIterator2) noexcept(noexcept(swap(*std::declval<_ForwardIterator1>(), *std::declval<_ForwardIterator2>())))",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) ((swap(*std::declval<_ForwardIterator1>(), *std::declval<_ForwardIterator2>())))",
						"s": "std::__1",
						"u": "ITER_SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "688e90c6d22b54cccd8891c7628fedd3cd8dd24c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_iterator_concept.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ITERATOR_CONCEPT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ITERATOR_CONCEPT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ITERATOR_CONCEPT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ITERATOR_CONCEPT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1226809377ae5619aa153bc376e8aae1d9aaf9a9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/unwrap_iter.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_UNWRAP_ITER_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_UNWRAP_ITER_H",
						"r": "_LIBCPP___ALGORITHM_UNWRAP_ITER_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_UNWRAP_ITER_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dec06e7d994cd7434adc3f48072b767339f7e5c4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unwrap_iter_impl",
						"t": "",
						"i": "std::__1::__unwrap_iter_impl",
						"r": "template <class _Iter, bool",
						"s": "std::__1",
						"u": "__UNWRAP_ITER_IMPL",
						"q": "std::__1::__unwrap_iter_impl",
						"w": "STD::__1::__UNWRAP_ITER_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a824c43876c2034acac3b2958b14284892592322"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__rewrap",
						"t": "_Iter (_Iter, _Iter)",
						"i": "std::__1::__unwrap_iter_impl::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr _Iter __rewrap(_Iter, _Iter __iter)",
						"s": "std::__1",
						"u": "__REWRAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0101a752a0e88e19553d040f5fc3eb67f97fdbbe"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__unwrap",
						"t": "_Iter (_Iter) noexcept",
						"i": "std::__1::__unwrap_iter_impl::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr _Iter __unwrap(_Iter __i)",
						"s": "std::__1",
						"u": "__UNWRAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eed231e02905b3bbedeb69106b4d310268574a05"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ToAddressT",
						"t": "std::__unwrap_iter_impl<type-parameter-0-0, true>::_ToAddressT",
						"i": "std::__unwrap_iter_impl::_ToAddressT",
						"r": "using _ToAddressT",
						"s": "",
						"u": "_TOADDRESST",
						"q": "std::__unwrap_iter_impl",
						"w": "STD::__UNWRAP_ITER_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bddcef509699d84d0e14989d72d65cf80ea59c91"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unwrap_iter",
						"t": "decltype(_Impl::__unwrap(std::declval<_Iter>())) (_Iter) noexcept",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Impl",
						"s": "std::__1",
						"u": "__UNWRAP_ITER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de4d92e9e3253fda14f8fd1be91a5ab2ff8e461a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rewrap_iter",
						"t": "_OrigIter (_OrigIter, _Iter) noexcept",
						"i": "std::__1::",
						"r": "template <class _OrigIter, class _Iter, class _Impl",
						"s": "std::__1",
						"u": "__REWRAP_ITER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9439352cbfbe8be9e73d1a9275c05b95807cc6ad"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/unwrap_range.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_UNWRAP_RANGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_UNWRAP_RANGE_H",
						"r": "_LIBCPP___ALGORITHM_UNWRAP_RANGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_UNWRAP_RANGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "793bdd52b1b2f34b426918a0d5f963993a97cd02"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unwrap_range",
						"t": "pair<_Unwrapped, _Unwrapped> (_Iter, _Iter)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Unwrapped",
						"s": "std::__1",
						"u": "__UNWRAP_RANGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88857ae2e4a8ff5b7dc51c747300fe74af764acd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rewrap_range",
						"t": "_Iter (_Iter, _Unwrapped)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Unwrapped> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Iter __rewrap_range(_Iter __orig_iter, _Unwrapped __iter)",
						"s": "std::__1",
						"u": "__REWRAP_RANGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e28ad7ec97ba6e0154b41c068e29b1c048cb25b8"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/comp.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COMP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COMP_H",
						"r": "_LIBCPP___ALGORITHM_COMP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COMP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d293137533f70e6dae90fa355866b506bfae41a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_to",
						"t": "std::__equal_to",
						"i": "std::__equal_to",
						"r": "__equal_to",
						"s": "std::__1",
						"u": "__EQUAL_TO",
						"q": "std::__equal_to",
						"w": "STD::__EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15fab0403e4bc6e0030c3cf6a1d5aafe0def17ba"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &, const _T2 &) const",
						"i": "std::__1::__equal_to::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _T1& __x, const _T2& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "160ad5a8c9fbc5b4d4e5c4f30e0fd47f44890a25"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__less",
						"t": "",
						"i": "std::__1::__less",
						"r": "template <class _T1",
						"s": "std::__1",
						"u": "__LESS",
						"q": "std::__1::__less",
						"w": "STD::__1::__LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce9bcbbb35f716050558d52adb6e767c758e04f1"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__less",
						"t": "std::__less<void, void>",
						"i": "std::__less",
						"r": "template<> __less<void, void>",
						"s": "std::__1",
						"u": "__LESS",
						"q": "std::__less",
						"w": "STD::__LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a6da895a61985b9e316ae96cd8368927ae13877"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Up &) const",
						"i": "std::__1::__less::",
						"r": "template <class _Tp, class _Up> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __lhs, const _Up& __rhs) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "423cb61684945d0e4ace3c14a3b8d78fcd689f79"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/for_each_segment.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FOR_EACH_SEGMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FOR_EACH_SEGMENT_H",
						"r": "_LIBCPP___ALGORITHM_FOR_EACH_SEGMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FOR_EACH_SEGMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a1e9fad135c78cba430271af309683632e690f2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_segment",
						"t": "void (_SegmentedIterator, _SegmentedIterator, _Functor)",
						"i": "std::__1::",
						"r": "template <class _SegmentedIterator, class _Functor> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __for_each_segment(_SegmentedIterator __first, _SegmentedIterator __last, _Functor __func)",
						"s": "std::__1",
						"u": "__FOR_EACH_SEGMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af5bd0d434c471cb2b166c22a71bddf75140f5ab"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/min.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MIN_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MIN_H",
						"r": "_LIBCPP___ALGORITHM_MIN_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MIN_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a9b3da26877c4a924d68458cc9b4abe311c0b68"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "const _Tp &(const _Tp &, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& min(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]], _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "daadef09df1eed1ae92254073484c83171a1cbe9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "const _Tp &(const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& min(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]]) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b4aa33b9ffc63b1e0e8cb7030a58db00b734af6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "_Tp (initializer_list<_Tp>, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp min(initializer_list<_Tp> __t, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd016907fa6d292dddf274335c1774b4772f3932"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "_Tp (initializer_list<_Tp>)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp min(initializer_list<_Tp> __t) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "867e540c54a3ad92c81761e816797856e885f906"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/comp_ref_type.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COMP_REF_TYPE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COMP_REF_TYPE_H",
						"r": "_LIBCPP___ALGORITHM_COMP_REF_TYPE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COMP_REF_TYPE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "933d4956c8def09a21022428e72d2d475bb605b1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__debug_less",
						"t": "",
						"i": "std::__1::__debug_less",
						"r": "template <class _Compare> __debug_less",
						"s": "std::__1",
						"u": "__DEBUG_LESS",
						"q": "std::__1::__debug_less",
						"w": "STD::__1::__DEBUG_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edabda1fe09bf919e4072c3504a51d6778b13144"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp_",
						"t": "_Compare &",
						"i": "std::__1::__debug_less::__comp_",
						"r": "_Compare& __comp_",
						"s": "std::__1",
						"u": "__COMP_",
						"q": "std::__1::__debug_less",
						"w": "STD::__1::__DEBUG_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23746aad45fff6f10ba74f12e37d68e83a259c06"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__debug_less<_Compare>",
						"t": "void (_Compare &)",
						"i": "std::__1::__debug_less::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr __debug_less<_Compare>(_Compare& __c)",
						"s": "std::__1",
						"u": "__DEBUG_LESS<_COMPARE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3837e43610a824efe4223ad5c037cdba58162025"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Up &)",
						"i": "std::__1::__debug_less::",
						"r": "template <class _Tp, class _Up> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Up& __y)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6902ef4d2a9807b3884c3d57a6e5455ded45c056"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Tp &, _Up &)",
						"i": "std::__1::__debug_less::",
						"r": "template <class _Tp, class _Up> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(_Tp& __x, _Up& __y)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "431dbb64391bb500fc9c86eb00b70eb99634beff"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__do_compare_assert",
						"t": "decltype((void)std::declval<_Compare &>()(std::declval<_LHS &>(), std::declval<_RHS &>())) (int, _LHS &, _RHS &)",
						"i": "std::__1::__debug_less::",
						"r": "template <class _LHS, class _RHS> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr decltype((void)std::declval<_Compare&>()(std::declval<_LHS&>(), std::declval<_RHS&>())) __do_compare_assert(int, _LHS& __l, _RHS& __r)",
						"s": "std::__1",
						"u": "__DO_COMPARE_ASSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d2779c392d310ad16bcda0d4145d1625da0fc57"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__do_compare_assert",
						"t": "void (long, _LHS &, _RHS &)",
						"i": "std::__1::__debug_less::",
						"r": "template <class _LHS, class _RHS> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __do_compare_assert(long, _LHS&, _RHS&)",
						"s": "std::__1",
						"u": "__DO_COMPARE_ASSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05ed592bf1cb564195b22069d4210ad5a20452b1"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp_ref_type",
						"t": "std::__comp_ref_type",
						"i": "std::__comp_ref_type",
						"r": "using __comp_ref_type",
						"s": "std::__1",
						"u": "__COMP_REF_TYPE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a46f554378ee3e52aa907c30975fb9363a30053"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/min_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MIN_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MIN_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_MIN_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MIN_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0af527d500c93c25ab0795cc7ea02ad197579db4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element",
						"t": "_Iter (_Iter, _Sent, _Comp, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Comp, class _Iter, class _Sent, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Iter __min_element(_Iter __first, _Sent __last, _Comp __comp, _Proj& __proj)",
						"s": "std::__1",
						"u": "__MIN_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "599c379e217151652f8c69da0b14abd08b6a50cf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element",
						"t": "_Iter (_Iter, _Sent, _Comp)",
						"i": "std::__1::",
						"r": "template <class _Comp, class _Iter, class _Sent> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Iter __min_element(_Iter __first, _Sent __last, _Comp __comp)",
						"s": "std::__1",
						"u": "__MIN_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c88d28869ff487fd538a06a50b401359775c380"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator min_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6b95018fc93bf059eb6da1ed88d404bedc8182b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator min_element(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MIN_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c448274c245a576d4fa4f4ec6cc792d99cbd4b01"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/move.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MOVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MOVE_H",
						"r": "_LIBCPP___ALGORITHM_MOVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MOVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26e48b257b0555f908442f2ce20400c405b44d17"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__move",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::__move(_InIter,_Sent,_OutIter)",
						"r": "template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter> constexpr pair<_InIter, _OutIter> __move(_InIter __first, _Sent __last, _OutIter __result) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "std::__1",
						"u": "__MOVE",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fa8c5da231158d077c3252700956e8349a23b1c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move_loop",
						"t": "",
						"i": "std::__1::__move_loop",
						"r": "template <class _AlgPolicy> __move_loop",
						"s": "std::__1",
						"u": "__MOVE_LOOP",
						"q": "std::__1::__move_loop",
						"w": "STD::__1::__MOVE_LOOP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "993747a834c39f85a384cb2ba4a9e6cf9fae33ed"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter) const",
						"i": "std::__1::__move_loop::",
						"r": "template <class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> operator()(_InIter __first, _Sent __last, _OutIter __result) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6907134356d34307e260b11773ca95c9298400a9"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_MoveSegment",
						"t": "",
						"i": "std::__1::__move_loop::_MoveSegment",
						"r": "template <class _InIter, class _OutIter> _MoveSegment",
						"s": "std::__1",
						"u": "_MOVESEGMENT",
						"q": "std::__1::__move_loop::_MoveSegment",
						"w": "STD::__1::__MOVE_LOOP::_MOVESEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11cf632fbe295a5e5b7c41fa83e10cf7da7c7043"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Traits",
						"t": "std::__move_loop::_MoveSegment::_Traits",
						"i": "std::__move_loop::_MoveSegment::_Traits",
						"r": "using _Traits",
						"s": "std::__1",
						"u": "_TRAITS",
						"q": "std::__move_loop::_MoveSegment",
						"w": "STD::__MOVE_LOOP::_MOVESEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e9782f647f9729ecb16b44a171e225f2606d6d6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_",
						"t": "_OutIter &",
						"i": "std::__1::__move_loop::_MoveSegment::__result_",
						"r": "_OutIter& __result_",
						"s": "std::__1",
						"u": "__RESULT_",
						"q": "std::__1::__move_loop::_MoveSegment",
						"w": "STD::__1::__MOVE_LOOP::_MOVESEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce5f3993eb3727a004f54ab4cd157ff6bfca7914"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_MoveSegment<_InIter, _OutIter>",
						"t": "void (_OutIter &)",
						"i": "std::__1::__move_loop::_MoveSegment::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr explicit _MoveSegment<_InIter, _OutIter>(_OutIter& __result)",
						"s": "std::__1",
						"u": "_MOVESEGMENT<_INITER, _OUTITER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b277345fc518db6c6eb53002a11dbdeb333cfbb"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (typename _Traits::__local_iterator, typename _Traits::__local_iterator)",
						"i": "std::__1::__move_loop::_MoveSegment::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void operator()(typename _Traits::__local_iterator __lfirst, typename _Traits::__local_iterator __llast)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01ce085d948f8ddd7e76dc499eb5f7cce92665a0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__move_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__is_segmented_iterator<_InIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d61db5ab670afeb7219a6b6b0871e5df557f7075"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__move_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__has_random_access_iterator_category<_InIter>::value&& !__is_segmented_iterator<_InIter>::value&& __is_segmented_iterator<_OutIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "664369dfc7bb66c4cbf7e91fb1d40cb73152586b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move_trivial",
						"t": "std::__move_trivial",
						"i": "std::__move_trivial",
						"r": "__move_trivial",
						"s": "std::__1",
						"u": "__MOVE_TRIVIAL",
						"q": "std::__move_trivial",
						"w": "STD::__MOVE_TRIVIAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "949b046a11c1a5570533d28465af0ee5dba15ce2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *) const",
						"i": "std::__1::__move_trivial::",
						"r": "template <class _In, class _Out, __enable_if_t<__can_lower_move_assignment_to_memmove<_In, _Out>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43262028651c1f2a788a925c2b791a2e1e50963b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> __move(_InIter __first, _Sent __last, _OutIter __result)",
						"s": "std::__1",
						"u": "__MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "819b41d32f3b4f1b50a3f09c60810bc275cc7165"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "move",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator move(_InputIterator __first, _InputIterator __last, _OutputIterator __result)",
						"s": "std::__1",
						"u": "MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57773445eedd05431c8ca3726f0c3a4899bef78a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/max.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MAX_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MAX_H",
						"r": "_LIBCPP___ALGORITHM_MAX_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MAX_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ecb20a89234f5ae82b7cbe8df3e6354b963a8142"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "const _Tp &(const _Tp &, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& max(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]], _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10293a5537d9b15f6281b5a311c14497827ef3b8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "const _Tp &(const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& max(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]]) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18870b14d171d5a6c785f75918d0d8027dddee48"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "_Tp (initializer_list<_Tp>, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp max(initializer_list<_Tp> __t, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4a46155282889aa4e18ff8bda2773b137080ab1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "_Tp (initializer_list<_Tp>)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp max(initializer_list<_Tp> __t) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6d958d70927a2b509b70499daef921156d6d8ce"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/max_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MAX_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MAX_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_MAX_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MAX_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a843ab443e7c96ae5a2e77e6491c9e3ba0cda2c3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__max_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator __max_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__MAX_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4efcf0ba375a00df6ffac16a28cf22ed37bb148c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator max_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cb3c828593e691f96b75af783e784ec6eb1099b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator max_element(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MAX_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4bb8c9e44b5f70d5dee7e0d3d710d6f6925d88af"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/remove.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REMOVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REMOVE_H",
						"r": "_LIBCPP___ALGORITHM_REMOVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REMOVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e1761785d449bc15be225bb4750eb69eafa56c5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator remove(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "REMOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "204eaa02f1231895cc142bb5da2bbf5380b08d81"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_H",
						"r": "_LIBCPP___ALGORITHM_FIND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e7dd516f0acadfa8d6647593710261ba1ab8e553"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "_Iter (_Iter, _Sent, const _Tp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Sent, class _Tp, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Iter __find_impl(_Iter __first, _Sent __last, const _Tp& __value, _Proj& __proj)",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "faa1c53dff16fd1a5f0ac2f17c8f98767e10c621"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "_Tp *(_Tp *, _Tp *, const _Up &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Up, class _Proj, __enable_if_t<__is_identity<_Proj>::value&& __libcpp_is_trivially_equality_comparable<_Tp, _Up>::value&& sizeof(_Tp)",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8666d133cf18534f37e0cde5ea8e284d6995644e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "_Tp *(_Tp *, _Tp *, const _Up &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Up, class _Proj, __enable_if_t<__is_identity<_Proj>::value&& __libcpp_is_trivially_equality_comparable<_Tp, _Up>::value&& sizeof(_Tp)",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06b329f832269cb2669d0ee23154356f5a7eb34a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "_Tp *(_Tp *, _Tp *, const _Up &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Up, class _Proj, __enable_if_t<__is_identity<_Proj>::value&& !__libcpp_is_trivially_equality_comparable<_Tp, _Up>::value&& is_integral<_Tp>::value&& is_integral<_Up>::value&& is_signed<_Tp>::value",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "553da66f6d94db67c0d4df77557e28527ee917d5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_bool",
						"t": "__bit_iterator<_Cp, _IsConst> (__bit_iterator<_Cp, _IsConst>, typename _Cp::size_type)",
						"i": "std::__1::",
						"r": "template <bool _ToFind, class _Cp, bool _IsConst> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __bit_iterator<_Cp, _IsConst> __find_bool(__bit_iterator<_Cp, _IsConst> __first, typename _Cp::size_type __n)",
						"s": "std::__1",
						"u": "__FIND_BOOL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d95756174a6224212ba867fa0df682e35f4a22fe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "__bit_iterator<_Cp, _IsConst> (__bit_iterator<_Cp, _IsConst>, __bit_iterator<_Cp, _IsConst>, const _Tp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Cp, bool _IsConst, class _Tp, class _Proj, __enable_if_t<__is_identity<_Proj>::value, int>",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1d1c4fa39536163825b40e479d7067b55a5e945"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_segment",
						"t": "",
						"i": "std::__1::__find_segment",
						"r": "template <class> __find_segment",
						"s": "std::__1",
						"u": "__FIND_SEGMENT",
						"q": "std::__1::__find_segment",
						"w": "STD::__1::__FIND_SEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2fa29125c6f2596cbc11790c9d7252f2d4660369"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_impl",
						"t": "_SegmentedIterator (_SegmentedIterator, _SegmentedIterator, const _Tp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _SegmentedIterator, class _Tp, class _Proj, __enable_if_t<__is_segmented_iterator<_SegmentedIterator>::value, int>",
						"s": "std::__1",
						"u": "__FIND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "692eaaed6b6b26e746510945f7fb8de02f12709b"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_segment",
						"t": "",
						"i": "std::__1::__find_segment",
						"r": "template <class _Tp> __find_segment",
						"s": "std::__1",
						"u": "__FIND_SEGMENT",
						"q": "std::__1::__find_segment",
						"w": "STD::__1::__FIND_SEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c16e33e0bcdf2ad331fe92e9914c31cc040aec5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__value_",
						"t": "const _Tp &",
						"i": "std::__1::__find_segment::__value_",
						"r": "const _Tp& __value_",
						"s": "std::__1",
						"u": "__VALUE_",
						"q": "std::__1::__find_segment",
						"w": "STD::__1::__FIND_SEGMENT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2429354f68a81940e78262b2e76a9141343efe93"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_segment<type-parameter-0-0>",
						"t": "void (const _Tp &)",
						"i": "std::__1::__find_segment::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr __find_segment<type-parameter-0-0>(const _Tp& __value)",
						"s": "std::__1",
						"u": "__FIND_SEGMENT<TYPE-PARAMETER-0-0>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5b54d6a5d7df1f405f1b1762ce7f7eb2a4fc244"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_InputIterator (_InputIterator, _InputIterator, _Proj &) const",
						"i": "std::__1::__find_segment::",
						"r": "template <class _InputIterator, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _InputIterator operator()(_InputIterator __first, _InputIterator __last, _Proj& __proj) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "013ada1fc11e5e6b7cc16b05d7bafcc2c4ff2598"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "_InputIterator (_InputIterator, _InputIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _InputIterator find(_InputIterator __first, _InputIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fe0faad23f257206f658c68871ced0c84537566"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find_segment_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_SEGMENT_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_SEGMENT_IF_H",
						"r": "_LIBCPP___ALGORITHM_FIND_SEGMENT_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_SEGMENT_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd68067f5fcb2e1923c5b765073ab9403ea60e5b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_segment_if",
						"t": "_SegmentedIterator (_SegmentedIterator, _SegmentedIterator, _Pred, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _SegmentedIterator, class _Pred, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _SegmentedIterator __find_segment_if(_SegmentedIterator __first, _SegmentedIterator __last, _Pred __pred, _Proj& __proj)",
						"s": "std::__1",
						"u": "__FIND_SEGMENT_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad31545f4a3e6db5eef0a6ee9e4efae0617da724"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_IF_H",
						"r": "_LIBCPP___ALGORITHM_FIND_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7cfdaf2e5159f18647d2a22377409b27b60d3768"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "_InputIterator (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _InputIterator find_if(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25018a7ddc8304fb261799caa41375b38a062fe0"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/remove_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REMOVE_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REMOVE_IF_H",
						"r": "_LIBCPP___ALGORITHM_REMOVE_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REMOVE_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "788e0d7ef0b652472d022d4d9f73e9fdefde20dc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_if",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator remove_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "REMOVE_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4f11ea7dd22d5c58c1981e21e7d624c8922a258"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/copy_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COPY_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COPY_N_H",
						"r": "_LIBCPP___ALGORITHM_COPY_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COPY_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9b96334ef2d23b14d8bb0da65e8e3584ea708ee"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_n",
						"t": "_OutputIterator (_InputIterator, _Size, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, __enable_if_t<__has_input_iterator_category<_InputIterator>::value&& !__has_random_access_iterator_category<_InputIterator>::value, int>",
						"s": "std::__1",
						"u": "COPY_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c411755f81833acda10482f63e6aa16bc89deb99"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy_n",
						"t": "_OutputIterator (_InputIterator, _Size, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, __enable_if_t<__has_random_access_iterator_category<_InputIterator>::value, int>",
						"s": "std::__1",
						"u": "COPY_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "956e400085631e8ff137435219d460dfb0f876c0"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/fill_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FILL_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FILL_N_H",
						"r": "_LIBCPP___ALGORITHM_FILL_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FILL_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4602c26c832efad1595e1bc5ac49715ea9418f27"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _OutputIterator, class _Size, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator __fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)",
						"s": "std::__1",
						"u": "__FILL_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e4a3c472ed255cf1a9c28e3769b4abba00bfc16"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _OutputIterator, class _Size, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)",
						"s": "std::__1",
						"u": "FILL_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8f750b1bcdbebfc747dee8ba9deb6eb3e3d20f6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find_end.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_END_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_END_OF_H",
						"r": "_LIBCPP___ALGORITHM_FIND_END_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_END_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "759103b68c6226dfe3b78b7e8fc10c74ea34ea1e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_end_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, forward_iterator_tag, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __find_end_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, forward_iterator_tag, forward_iterator_tag)",
						"s": "std::__1",
						"u": "__FIND_END_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5abddfaa51689e2abc329dd891b472e5f778dc8b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_end",
						"t": "_Iter1 (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, bidirectional_iterator_tag, bidirectional_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _IterOps, class _Pred, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Iter1 __find_end(_Iter1 __first1, _Sent1 __sent1, _Iter2 __first2, _Sent2 __sent2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, bidirectional_iterator_tag, bidirectional_iterator_tag)",
						"s": "std::__1",
						"u": "__FIND_END",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7539c32c4393d8021e0f1580336c9f803c363881"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_end",
						"t": "_Iter1 (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Pred, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Iter1 __find_end(_Iter1 __first1, _Sent1 __sent1, _Iter2 __first2, _Sent2 __sent2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, random_access_iterator_tag, random_access_iterator_tag)",
						"s": "std::__1",
						"u": "__FIND_END",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2576eed807b821aed95204275c73415b8e381e0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_end_classic",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator1 __find_end_classic(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate& __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__FIND_END_CLASSIC",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "042ed4f834fc29f7452ce95a61f25c8707031947"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_END",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "134aa4eb6090aaee20b8522e6845b96a6b4a2cd1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_END",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc27975d5a8450ad69462f9a622d493d59bfe12e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/search.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SEARCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SEARCH_H",
						"r": "_LIBCPP___ALGORITHM_SEARCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SEARCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec69e3663b2c56e1e89ce6ccff273a8997bd879e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_forward_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __search_forward_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2)",
						"s": "std::__1",
						"u": "__SEARCH_FORWARD_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "739c75d98afb7e31d5ea9eae8db3885ca06d9fb7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_random_access_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, _DiffT1, _DiffT2)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2, class _DiffT1, class _DiffT2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __search_random_access_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, _DiffT1 __size1, _DiffT2 __size2)",
						"s": "std::__1",
						"u": "__SEARCH_RANDOM_ACCESS_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "946f016c371ad9453ad3139d5ab980834f5eeb4d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, __enable_if_t<__has_random_access_iterator_category<_Iter1>::value && __has_random_access_iterator_category<_Iter2>::value> *)",
						"i": "std::__1::",
						"r": "template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __search_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, __enable_if_t<__has_random_access_iterator_category<_Iter1>::value&& __has_random_access_iterator_category<_Iter2>::value> *= nullptr)",
						"s": "std::__1",
						"u": "__SEARCH_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b218096354848bc20266635657a5e2d8f820eb57"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &, __enable_if_t<__has_forward_iterator_category<_Iter1>::value && __has_forward_iterator_category<_Iter2>::value && !(__has_random_access_iterator_category<_Iter1>::value && __has_random_access_iterator_category<_Iter2>::value)> *)",
						"i": "std::__1::",
						"r": "template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __search_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __pred, _Proj1& __proj1, _Proj2& __proj2, __enable_if_t<__has_forward_iterator_category<_Iter1>::value&& __has_forward_iterator_category<_Iter2>::value&& !(__has_random_access_iterator_category<_Iter1>::value&& __has_random_access_iterator_category<_Iter2>::value)> *= nullptr)",
						"s": "std::__1",
						"u": "__SEARCH_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d84723e776653901f9153dd49dc96881406a016"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 search(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "010f0d552e8f370de11f078247f0b39bbef06dcb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 search(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6713669b18c76be7fa7da7ca966cc8842c4bb512"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Searcher &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Searcher> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator search(_ForwardIterator __f, _ForwardIterator __l, const _Searcher& __s) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "acaccb29abec5a194f75bd439884229730a7fcce"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find_first_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_FIRST_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_FIRST_OF_H",
						"r": "_LIBCPP___ALGORITHM_FIND_FIRST_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_FIRST_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72674a45505d7d8da76496148e260ec018b3e32d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_ce",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate &&)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator1 __find_first_of_ce(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate&& __pred)",
						"s": "std::__1",
						"u": "__FIND_FIRST_OF_CE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "182fd91ef436dad3170e6394c841fd100e5084fc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 find_first_of(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_FIRST_OF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90c79dea98d8b3746a2b1143738906d058eb411e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator1 find_first_of(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_FIRST_OF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f2d5fef08eebb29e97d422d9e944054b5a29e5b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/adjacent_find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ADJACENT_FIND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ADJACENT_FIND_H",
						"r": "_LIBCPP___ALGORITHM_ADJACENT_FIND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ADJACENT_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "237469644dd831f355f48890c97db15b84195ad0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_find",
						"t": "_Iter (_Iter, _Sent, _BinaryPredicate &&)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Sent, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Iter __adjacent_find(_Iter __first, _Sent __last, _BinaryPredicate&& __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__ADJACENT_FIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e54cb0aeb4c5cc6c1aa438fbcb9ec1543d16e314"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator adjacent_find(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "ADJACENT_FIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0cd05a5ee769c822ba9cc1862b7d9a2eabc59378"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator adjacent_find(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "ADJACENT_FIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f345e4b58e8be7315b0cfda51d4c453ccab53886"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/all_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ALL_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ALL_OF_H",
						"r": "_LIBCPP___ALGORITHM_ALL_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ALL_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8484c5a90471ae8f3008114c27a05c760dafa2d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "all_of",
						"t": "bool (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "ALL_OF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cfa62dba31c4451091b8e0a318a8991347a9582b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/any_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ANY_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ANY_OF_H",
						"r": "_LIBCPP___ALGORITHM_ANY_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ANY_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95fd8195f7dd0aa7f9b6ce54dd530fc51f10c239"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "any_of",
						"t": "bool (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "ANY_OF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe211c39939a9f955793c1d748d43d52aa273bc1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/binary_search.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_BINARY_SEARCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_BINARY_SEARCH_H",
						"r": "_LIBCPP___ALGORITHM_BINARY_SEARCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_BINARY_SEARCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f84b656ab8702b8e19176de28889aa28b47c562"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "binary_search",
						"t": "bool (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool binary_search(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "BINARY_SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed1501f54189aee342bee927548f13de1e5d8c8a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "binary_search",
						"t": "bool (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool binary_search(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "BINARY_SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9620b5340762fe81fdc4a4d4b6ee1186d6019e9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/lower_bound.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_LOWER_BOUND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_LOWER_BOUND_H",
						"r": "_LIBCPP___ALGORITHM_LOWER_BOUND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_LOWER_BOUND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a7d2bcccdcd7b9a05e11d61980123f35e872f07"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__lower_bound",
						"t": "_Iter (_Iter, _Sent, const _Type &, _Comp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter, class _Sent, class _Type, class _Proj, class _Comp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Iter __lower_bound(_Iter __first, _Sent __last, const _Type& __value, _Comp& __comp, _Proj& __proj)",
						"s": "std::__1",
						"u": "__LOWER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eacbaa1e476f12d998f4686ab975253a252b319a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lower_bound",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "LOWER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b7bd11a212c41ec31041fd1f08e7ed8e66cb676c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lower_bound",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "LOWER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8225f91a9bc204645755952399f1504a51722946"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/half_positive.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_HALF_POSITIVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_HALF_POSITIVE_H",
						"r": "_LIBCPP___ALGORITHM_HALF_POSITIVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_HALF_POSITIVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a98ad6143b40569ef493cf55c9fa922eb0368952"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__half_positive",
						"t": "_Integral (_Integral)",
						"i": "std::__1::",
						"r": "template <typename _Integral, __enable_if_t<is_integral<_Integral>::value, int>",
						"s": "std::__1",
						"u": "__HALF_POSITIVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "782a91d7b68a9ce34fd8a2bc65775a3bdac558ce"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__half_positive",
						"t": "_Tp (_Tp)",
						"i": "std::__1::",
						"r": "template <typename _Tp, __enable_if_t<!is_integral<_Tp>::value, int>",
						"s": "std::__1",
						"u": "__HALF_POSITIVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc0a7f041a9aef0833e2e30951a2aad76923afab"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/clamp.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_CLAMP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_CLAMP_H",
						"r": "_LIBCPP___ALGORITHM_CLAMP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_CLAMP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1637fd3cc1fe352d019b4b17f84b256b0b1daa69"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "clamp",
						"t": "const _Tp &(const _Tp &, const _Tp &, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& clamp(const _Tp& __v [[clang::lifetimebound]], const _Tp& __lo [[clang::lifetimebound]], const _Tp& __hi [[clang::lifetimebound]], _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "CLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ed7e9243ed08b7d5e92b3848c6920742e21af4b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "clamp",
						"t": "const _Tp &(const _Tp &, const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr const _Tp& clamp(const _Tp& __v [[clang::lifetimebound]], const _Tp& __lo [[clang::lifetimebound]], const _Tp& __hi [[clang::lifetimebound]]) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "CLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5273c66950291cf2e35a13a304772857cd60867"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/copy_backward.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COPY_BACKWARD_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COPY_BACKWARD_H",
						"r": "_LIBCPP___ALGORITHM_COPY_BACKWARD_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COPY_BACKWARD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edcee6dcfaa1d5a9df625381871d6b3dc4073dd6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__copy_backward",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter)",
						"i": "std::__1::__copy_backward(_InIter,_Sent,_OutIter)",
						"r": "template <class _AlgPolicy, class _InIter, class _Sent, class _OutIter> pair<_InIter, _OutIter> __copy_backward(_InIter __first, _Sent __last, _OutIter __result) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "std::__1",
						"u": "__COPY_BACKWARD",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "903c08377ab231942fe05ab60d9eefc8114f499c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_backward_loop",
						"t": "",
						"i": "std::__1::__copy_backward_loop",
						"r": "template <class _AlgPolicy> __copy_backward_loop",
						"s": "std::__1",
						"u": "__COPY_BACKWARD_LOOP",
						"q": "std::__1::__copy_backward_loop",
						"w": "STD::__1::__COPY_BACKWARD_LOOP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1785cbe9c81c1745aacd790c0df52928f53426a4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter) const",
						"i": "std::__1::__copy_backward_loop::",
						"r": "template <class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> operator()(_InIter __first, _Sent __last, _OutIter __result) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "799da5e4334bc02f5ac9cd8ccfa72ff0ffb43192"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__copy_backward_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__is_segmented_iterator<_InIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b52b48c0f36d3e3d6f75efd68dbc4825b069f4de"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__copy_backward_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__has_random_access_iterator_category<_InIter>::value&& !__is_segmented_iterator<_InIter>::value&& __is_segmented_iterator<_OutIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96c8bc96f5dd414cc327fc8c5db6437546bede8a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_backward_trivial",
						"t": "std::__copy_backward_trivial",
						"i": "std::__copy_backward_trivial",
						"r": "__copy_backward_trivial",
						"s": "std::__1",
						"u": "__COPY_BACKWARD_TRIVIAL",
						"q": "std::__copy_backward_trivial",
						"w": "STD::__COPY_BACKWARD_TRIVIAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3c8298590e0caaa48c83ea73dd841f8bf84accf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *) const",
						"i": "std::__1::__copy_backward_trivial::",
						"r": "template <class _In, class _Out, __enable_if_t<__can_lower_copy_assignment_to_memmove<_In, _Out>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b590ceb1c04c09fbefbf19d7df8f25c3f7a8d96"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__copy_backward",
						"t": "pair<_BidirectionalIterator1, _BidirectionalIterator2> (_BidirectionalIterator1, _Sentinel, _BidirectionalIterator2)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator1, class _Sentinel, class _BidirectionalIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_BidirectionalIterator1, _BidirectionalIterator2> __copy_backward(_BidirectionalIterator1 __first, _Sentinel __last, _BidirectionalIterator2 __result)",
						"s": "std::__1",
						"u": "__COPY_BACKWARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88b76b13e74b2fbf9f0cb82ebb2ddd603a0ed0fc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_backward",
						"t": "_BidirectionalIterator2 (_BidirectionalIterator1, _BidirectionalIterator1, _BidirectionalIterator2)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator1, class _BidirectionalIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _BidirectionalIterator2 copy_backward(_BidirectionalIterator1 __first, _BidirectionalIterator1 __last, _BidirectionalIterator2 __result)",
						"s": "std::__1",
						"u": "COPY_BACKWARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9295c19e27469bca67f36384fad24f2dbf9cec61"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "914f4e78cbcbbabaad3240f8296984a257b87c3a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_if",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred)",
						"s": "std::__1",
						"u": "COPY_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "776b3913d0ebbad7b5597c7f92d7c2beca7c15de"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/count.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COUNT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COUNT_H",
						"r": "_LIBCPP___ALGORITHM_COUNT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COUNT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c58e42db5687a2043f5ff4f25583270ace63a9f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "typename _IterOps<_AlgPolicy>::template __difference_type<_Iter> (_Iter, _Sent, const _Tp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter, class _Sent, class _Tp, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename _IterOps<_AlgPolicy>::template __difference_type<_Iter> __count(_Iter __first, _Sent __last, const _Tp& __value, _Proj& __proj)",
						"s": "std::__1",
						"u": "__COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "449bb406a86ddb2f9aea4f1bcf2bca3277217d49"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count_bool",
						"t": "typename __bit_iterator<_Cp, _IsConst>::difference_type (__bit_iterator<_Cp, _IsConst>, typename _Cp::size_type)",
						"i": "std::__1::",
						"r": "template <bool _ToCount, class _Cp, bool _IsConst> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __bit_iterator<_Cp, _IsConst>::difference_type __count_bool(__bit_iterator<_Cp, _IsConst> __first, typename _Cp::size_type __n)",
						"s": "std::__1",
						"u": "__COUNT_BOOL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42dccb39f7389e4d37fac3acaacc7a190cb5834a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "__iter_diff_t<__bit_iterator<_Cp, _IsConst>> (__bit_iterator<_Cp, _IsConst>, __bit_iterator<_Cp, _IsConst>, const _Tp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class, class _Cp, bool _IsConst, class _Tp, class _Proj, __enable_if_t<__is_identity<_Proj>::value, int>",
						"s": "std::__1",
						"u": "__COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "582e2a3153ec83114ef2ac670828f268f2224388"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "__iter_diff_t<_InputIterator> (_InputIterator, _InputIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __iter_diff_t<_InputIterator> count(_InputIterator __first, _InputIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b175cf3178a0040cff06261e2645875a315c679f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/count_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_COUNT_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_COUNT_IF_H",
						"r": "_LIBCPP___ALGORITHM_COUNT_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_COUNT_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98a09febd1600c1a91cb0b2bafc40fb64c282cb5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename iterator_traits<_InputIterator>::difference_type count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "COUNT_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ed819e5b6d7a87227f5d681802574c159031c28"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/equal.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_EQUAL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_EQUAL_H",
						"r": "_LIBCPP___ALGORITHM_EQUAL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_EQUAL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b374dec9c15890fc2e483f806504794bcc9b60af"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal_iter_impl",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __equal_iter_impl(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate& __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__EQUAL_ITER_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "955e22775126fe8e434c61cc2e824b63712ef930"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal_iter_impl",
						"t": "bool (_Tp *, _Tp *, _Up *, _BinaryPredicate &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Up, class _BinaryPredicate, __enable_if_t<__desugars_to<__equal_tag, _BinaryPredicate, _Tp, _Up>::value&& !is_volatile<_Tp>::value&& !is_volatile<_Up>::value&& __libcpp_is_trivially_equality_comparable<_Tp, _Up>::value, int>",
						"s": "std::__1",
						"u": "__EQUAL_ITER_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0571c061636cbeb0e413a70c79a8e9a9d0cd9dfb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99e95d19153ab2d0e80f33e655b329c1812e37b0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82ddbde86bfc1ee259270b3ebc7a901d5b44a783"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate, input_iterator_tag, input_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _BinaryPredicate, class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __pred, input_iterator_tag, input_iterator_tag)",
						"s": "std::__1",
						"u": "__EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b712fbe30bd1145dd1ff45c38a86b758316e86dc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal_impl",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &, _Proj1 &, _Proj2 &)",
						"i": "std::__1::",
						"r": "template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Pred, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __equal_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred& __comp, _Proj1& __proj1, _Proj2& __proj2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__EQUAL_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fc34c643d573482fd6101c7f670559dc6726973"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal_impl",
						"t": "bool (_Tp *, _Tp *, _Up *, _Up *, _Pred &, _Proj1 &, _Proj2 &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Up, class _Pred, class _Proj1, class _Proj2, __enable_if_t<__desugars_to<__equal_tag, _Pred, _Tp, _Up>::value&& __is_identity<_Proj1>::value&& __is_identity<_Proj2>::value&& !is_volatile<_Tp>::value&& !is_volatile<_Up>::value&& __libcpp_is_trivially_equality_comparable<_Tp, _Up>::value, int>",
						"s": "std::__1",
						"u": "__EQUAL_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc56ccc5b0cc93c9bcc7d7a6e057b786ebbf66a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal",
						"t": "bool (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _BinaryPredicate, class _RandomAccessIterator1, class _RandomAccessIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __equal(_RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _BinaryPredicate __pred, random_access_iterator_tag, random_access_iterator_tag)",
						"s": "std::__1",
						"u": "__EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "612d450022abf3b1375d62caa2e228d1e87f6d05"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c5aef52ad6367cb10ba9a4654ff2d564fa19a48f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f64040445b575c3f9858457652d34f24b6175fec"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/equal_range.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_EQUAL_RANGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_EQUAL_RANGE_H",
						"r": "_LIBCPP___ALGORITHM_EQUAL_RANGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_EQUAL_RANGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a10f0df619a54ca71d747b1083690ca04384c0c1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__equal_range",
						"t": "pair<_Iter, _Iter> (_Iter, _Sent, const _Tp &, _Compare &&, _Proj &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _Iter, class _Sent, class _Tp, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_Iter, _Iter> __equal_range(_Iter __first, _Sent __last, const _Tp& __value, _Compare&& __comp, _Proj&& __proj)",
						"s": "std::__1",
						"u": "__EQUAL_RANGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "abce12a81326c6d73f0b4e7d01f37483ca90b4a7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal_range",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator, _ForwardIterator> equal_range(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL_RANGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1660a1e76a40d76f60b890defbf5f2ac26af7739"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal_range",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator, _ForwardIterator> equal_range(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "EQUAL_RANGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01b0b8d7bccc4cc6e3f44b3033628a4245ac90cb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/upper_bound.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_UPPER_BOUND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_UPPER_BOUND_H",
						"r": "_LIBCPP___ALGORITHM_UPPER_BOUND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_UPPER_BOUND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7cfea306859ddafd85e12ff1ee42297e6cbe0b9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__upper_bound",
						"t": "_Iter (_Iter, _Sent, const _Tp &, _Compare &&, _Proj &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _Iter, class _Sent, class _Tp, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Iter __upper_bound(_Iter __first, _Sent __last, const _Tp& __value, _Compare&& __comp, _Proj&& __proj)",
						"s": "std::__1",
						"u": "__UPPER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9e895463a864531e0599661286596948e950369"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "upper_bound",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator upper_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "UPPER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d713a0dcd4871d66f62eea5f8366ca0c7db8694c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "upper_bound",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator upper_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "UPPER_BOUND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3dcbd242a1ddb582e69aedcbc0ef98da03da30f9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/fill.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FILL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FILL_H",
						"r": "_LIBCPP___ALGORITHM_FILL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FILL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fdbcbda661ce60b23406e25e3e72309119b54421"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, forward_iterator_tag)",
						"s": "std::__1",
						"u": "__FILL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef0cbe16f5f2e4b1f3e845098c9e7d2c4ce5909c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__fill",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, const _Tp &, random_access_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __fill(_RandomAccessIterator __first, _RandomAccessIterator __last, const _Tp& __value, random_access_iterator_tag)",
						"s": "std::__1",
						"u": "__FILL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b58985e8d4116e41acc1e225e3ee10dd24255985"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std::__1",
						"u": "FILL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af2afcf915f23e19141173cee783b2694f26728c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/find_if_not.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FIND_IF_NOT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FIND_IF_NOT_H",
						"r": "_LIBCPP___ALGORITHM_FIND_IF_NOT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FIND_IF_NOT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c84cf00ee71ae85d9a3c9f0d26e494f25ddb0ac5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if_not",
						"t": "_InputIterator (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _InputIterator find_if_not(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "FIND_IF_NOT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c43f4db37b7a722011efb925e993c6fefdc3100"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/fold.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FOLD_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FOLD_H",
						"r": "_LIBCPP___ALGORITHM_FOLD_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FOLD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0aaa95cc4c6ed73aef87c7391df29d653e876b15"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/for_each.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FOR_EACH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FOR_EACH_H",
						"r": "_LIBCPP___ALGORITHM_FOR_EACH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FOR_EACH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e3d94aaa4627d34ee1222d33191648b4d21cef2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_InputIterator, _InputIterator, _Function)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Function> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Function for_each(_InputIterator __first, _InputIterator __last, _Function __f)",
						"s": "std::__1",
						"u": "FOR_EACH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3dd1fc9e44f2d5c5a964863aa3fe0ebc7ec688bc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_out_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_OUT_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_OUT_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_OUT_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_OUT_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "648da8fa907c67b9261feccdfdf889541f50311f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/for_each_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_FOR_EACH_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_FOR_EACH_N_H",
						"r": "_LIBCPP___ALGORITHM_FOR_EACH_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_FOR_EACH_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "adea7b5710dec9cc6929118e79b0fa4dbea8d51b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each_n",
						"t": "_InputIterator (_InputIterator, _Size, _Function)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Size, class _Function> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _InputIterator for_each_n(_InputIterator __first, _Size __orig_n, _Function __f)",
						"s": "std::__1",
						"u": "FOR_EACH_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "871feb9c5914cdee00420437eb75298ae09214f8"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/generate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_GENERATE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_GENERATE_H",
						"r": "_LIBCPP___ALGORITHM_GENERATE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_GENERATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1827e9ce140c5af4c02d4b7ffd7a6ad4b8d75c49"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_ForwardIterator, _ForwardIterator, _Generator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Generator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void generate(_ForwardIterator __first, _ForwardIterator __last, _Generator __gen)",
						"s": "std::__1",
						"u": "GENERATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d19c9551740238303816c76da3ec9ec5391dc99e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/generate_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_GENERATE_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_GENERATE_N_H",
						"r": "_LIBCPP___ALGORITHM_GENERATE_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_GENERATE_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1149ff64f8c7234751361f5a8226a4fe7b2f0c50"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator)",
						"i": "std::__1::",
						"r": "template <class _OutputIterator, class _Size, class _Generator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator generate_n(_OutputIterator __first, _Size __orig_n, _Generator __gen)",
						"s": "std::__1",
						"u": "GENERATE_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d7ee7266726f013129d84ef3ed361a01ddb5856"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_found_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_FOUND_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_FOUND_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_FOUND_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_FOUND_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e96459b3def85f352bf3acdcdbb1642d1c2652b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_fun_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_FUN_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_FUN_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_FUN_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_FUN_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0af14c8632aa03c6295dd400ec36e3cce8f31c4e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_in_out_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_IN_OUT_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_IN_OUT_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_IN_OUT_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_IN_OUT_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d30116fe6b7ae844df2daff850d3bb435e01bcd6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_in_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_IN_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_IN_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_IN_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_IN_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c93d335c6a8b2c53859fa5e5d078ec443e7acdc1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/in_out_out_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IN_OUT_OUT_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IN_OUT_OUT_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_IN_OUT_OUT_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IN_OUT_OUT_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b5c5f65733d3a1853d71acd559b8ba0971af1509"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/includes.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_INCLUDES_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_INCLUDES_H",
						"r": "_LIBCPP___ALGORITHM_INCLUDES_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_INCLUDES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3994ad344b9c98b469a1f0aa6c04e3545bb11fa"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__includes",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Comp &&, _Proj1 &&, _Proj2 &&)",
						"i": "std::__1::",
						"r": "template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Comp, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __includes(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Comp&& __comp, _Proj1&& __proj1, _Proj2&& __proj2)",
						"s": "std::__1",
						"u": "__INCLUDES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e982b3d6015f87d4a52a6bc355b55fd80931622"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "INCLUDES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93f5d5b55c482758037fca8f4454e8a438e361af"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "INCLUDES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d784ee056df7568bc395a3fb9a34457a31e1e5c6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/inplace_merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_INPLACE_MERGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_INPLACE_MERGE_H",
						"r": "_LIBCPP___ALGORITHM_INPLACE_MERGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_INPLACE_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4d419bddac37b7aeb8fe72abb5b2a58e2c8418a"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invert",
						"t": "",
						"i": "std::__1::__invert",
						"r": "template <class _Predicate> __invert",
						"s": "std::__1",
						"u": "__INVERT",
						"q": "std::__1::__invert",
						"w": "STD::__1::__INVERT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "46c775822cbb004e7dd0e80ca28f4d9ffae682ca"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__p_",
						"t": "_Predicate",
						"i": "std::__1::__invert::__p_",
						"r": "_Predicate __p_",
						"s": "std::__1",
						"u": "__P_",
						"q": "std::__1::__invert",
						"w": "STD::__1::__INVERT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cb9cd53be59b9bde1b773f9f7a865b7ce2cba90"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__invert<_Predicate>",
						"t": "void ()",
						"i": "std::__1::__invert::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __invert<_Predicate>()",
						"s": "std::__1",
						"u": "__INVERT<_PREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbde7320b99d1e94699ca10ff88258a088aa8c37"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__invert<_Predicate>",
						"t": "void (_Predicate)",
						"i": "std::__1::__invert::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) explicit __invert<_Predicate>(_Predicate __p)",
						"s": "std::__1",
						"u": "__INVERT<_PREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "842f624fecea50e123e325758543416ae8229f06"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &)",
						"i": "std::__1::__invert::",
						"r": "template <class _T1> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator()(const _T1& __x)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cea25c74c7e4e1e5c09ee556aa462b318a5b6543"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &, const _T2 &)",
						"i": "std::__1::__invert::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator()(const _T1& __x, const _T2& __y)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c991398f113f5d415678b319fb96e2735a919e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__half_inplace_merge",
						"t": "void (_InputIterator1, _Sent1, _InputIterator2, _Sent2, _OutputIterator, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InputIterator1, class _Sent1, class _InputIterator2, class _Sent2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __half_inplace_merge(_InputIterator1 __first1, _Sent1 __last1, _InputIterator2 __first2, _Sent2 __last2, _OutputIterator __result, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__HALF_INPLACE_MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b36dbd804f980566727186a8cc99d4c4aaadb9ab"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__buffered_inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare &&, typename iterator_traits<_BidirectionalIterator>::difference_type, typename iterator_traits<_BidirectionalIterator>::difference_type, typename iterator_traits<_BidirectionalIterator>::value_type *)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __buffered_inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare&& __comp, typename iterator_traits<_BidirectionalIterator>::difference_type __len1, typename iterator_traits<_BidirectionalIterator>::difference_type __len2, typename iterator_traits<_BidirectionalIterator>::value_type *__buff)",
						"s": "std::__1",
						"u": "__BUFFERED_INPLACE_MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f6fd8f27c01fb1ddf2f1fad9853be3e42700a6e8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare &&, typename iterator_traits<_BidirectionalIterator>::difference_type, typename iterator_traits<_BidirectionalIterator>::difference_type, typename iterator_traits<_BidirectionalIterator>::value_type *, ptrdiff_t)",
						"i": "std::__1::__inplace_merge(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare&&,typename iterator_traits::difference_type,typename iterator_traits::difference_type,typename iterator_traits::value_type*,ptrdiff_t)",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator> void __inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare&& __comp, typename iterator_traits<_BidirectionalIterator>::difference_type __len1, typename iterator_traits<_BidirectionalIterator>::difference_type __len2, typename iterator_traits<_BidirectionalIterator>::value_type *__buff, ptrdiff_t __buff_size)",
						"s": "std::__1",
						"u": "__INPLACE_MERGE",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16068a0d384e0ff6b839a8bbd1103d05847edb41"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__INPLACE_MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aba4bdbe8989d1faae7c638c6d88a663ba5f1ff0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "INPLACE_MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44ecdf8321bf3f10aca7114ed303815a6e6a2d73"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last)",
						"s": "std::__1",
						"u": "INPLACE_MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c474ec00785f325a4ddfe0e5e9aaab4dfb0043a9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/rotate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ROTATE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ROTATE_H",
						"r": "_LIBCPP___ALGORITHM_ROTATE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ROTATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5825a5efb80dd08eff5b71b6f477ca392d39b7f0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_left",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator __rotate_left(_ForwardIterator __first, _ForwardIterator __last)",
						"s": "std::__1",
						"u": "__ROTATE_LEFT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3defe38eea2d9cb274c9266f6747689006235743"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_right",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _BidirectionalIterator __rotate_right(_BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std::__1",
						"u": "__ROTATE_RIGHT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d4732243c3a24760bde35175159a35a4bf78b6d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_forward",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator __rotate_forward(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)",
						"s": "std::__1",
						"u": "__ROTATE_FORWARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "caef234b7ddc4ba5098809edf546caeacc0e6a2d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__algo_gcd",
						"t": "_Integral (_Integral, _Integral)",
						"i": "std::__1::",
						"r": "template <typename _Integral> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Integral __algo_gcd(_Integral __x, _Integral __y)",
						"s": "std::__1",
						"u": "__ALGO_GCD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f634c6805e2fd6739414a74eb50e4234eb3bd80c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_gcd",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, typename _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _RandomAccessIterator __rotate_gcd(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "__ROTATE_GCD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f31d224d6ed22e21f6017be02fa1c6aa299a4bd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_impl",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ForwardIterator __rotate_impl(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, std::forward_iterator_tag)",
						"s": "std::__1",
						"u": "__ROTATE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad3d3b9281bce43fe5c27c745e34fcc6b1f8b89d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_impl",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, bidirectional_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _BidirectionalIterator __rotate_impl(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, bidirectional_iterator_tag)",
						"s": "std::__1",
						"u": "__ROTATE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b55f0a2e0e26ce1e3c6e645e64ec798f686363de"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate_impl",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, random_access_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _RandomAccessIterator __rotate_impl(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, random_access_iterator_tag)",
						"s": "std::__1",
						"u": "__ROTATE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8382fa70dc304dd45ef6e81266d0e3e37aaa930f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rotate",
						"t": "pair<_Iterator, _Iterator> (_Iterator, _Iterator, _Sentinel)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iterator, _Iterator> __rotate(_Iterator __first, _Iterator __middle, _Sentinel __last)",
						"s": "std::__1",
						"u": "__ROTATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "58582f87eec52acab803a02e74828751fee5c1a4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "rotate",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator rotate(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)",
						"s": "std::__1",
						"u": "ROTATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af62fcd264f7359d7d7336bc95b5a7248819098b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/move_backward.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MOVE_BACKWARD_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MOVE_BACKWARD_H",
						"r": "_LIBCPP___ALGORITHM_MOVE_BACKWARD_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MOVE_BACKWARD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d62ba977f71834fe616e6536559267c351fe317"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__move_backward",
						"t": "pair<_BidirectionalIterator1, _BidirectionalIterator2> (_BidirectionalIterator1, _Sentinel, _BidirectionalIterator2)",
						"i": "std::__1::__move_backward(_BidirectionalIterator1,_Sentinel,_BidirectionalIterator2)",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator1, class _Sentinel, class _BidirectionalIterator2> pair<_BidirectionalIterator1, _BidirectionalIterator2> __move_backward(_BidirectionalIterator1 __first, _Sentinel __last, _BidirectionalIterator2 __result) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "std::__1",
						"u": "__MOVE_BACKWARD",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63a9e434125e2f25b94d27dd2714354e1a4d324b"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move_backward_loop",
						"t": "",
						"i": "std::__1::__move_backward_loop",
						"r": "template <class _AlgPolicy> __move_backward_loop",
						"s": "std::__1",
						"u": "__MOVE_BACKWARD_LOOP",
						"q": "std::__1::__move_backward_loop",
						"w": "STD::__1::__MOVE_BACKWARD_LOOP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7c0b074b8dd7aa347b00df9fa9f2ad5878b1d25b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _Sent, _OutIter) const",
						"i": "std::__1::__move_backward_loop::",
						"r": "template <class _InIter, class _Sent, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_InIter, _OutIter> operator()(_InIter __first, _Sent __last, _OutIter __result) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d9906f164dc29bc4e2a6af3375f9cb83231ac98"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__move_backward_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__is_segmented_iterator<_InIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e3f0a3224b63f8fcf87daedab4e6f3f5326813e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_InIter, _OutIter> (_InIter, _InIter, _OutIter) const",
						"i": "std::__1::__move_backward_loop::",
						"r": "template <class _InIter, class _OutIter, __enable_if_t<__has_random_access_iterator_category<_InIter>::value&& !__is_segmented_iterator<_InIter>::value&& __is_segmented_iterator<_OutIter>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3110e6d778c7c1324a257c6fe484b7497589f1a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__move_backward_trivial",
						"t": "std::__move_backward_trivial",
						"i": "std::__move_backward_trivial",
						"r": "__move_backward_trivial",
						"s": "std::__1",
						"u": "__MOVE_BACKWARD_TRIVIAL",
						"q": "std::__move_backward_trivial",
						"w": "STD::__MOVE_BACKWARD_TRIVIAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db36f1fc820f492d203bf02bd8dfc1c7b4fae24f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_In *, _Out *> (_In *, _In *, _Out *) const",
						"i": "std::__1::__move_backward_trivial::",
						"r": "template <class _In, class _Out, __enable_if_t<__can_lower_move_assignment_to_memmove<_In, _Out>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06e1cdce920934580ebab25bcedda2628e632fb6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__move_backward",
						"t": "pair<_BidirectionalIterator1, _BidirectionalIterator2> (_BidirectionalIterator1, _Sentinel, _BidirectionalIterator2)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator1, class _Sentinel, class _BidirectionalIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_BidirectionalIterator1, _BidirectionalIterator2> __move_backward(_BidirectionalIterator1 __first, _Sentinel __last, _BidirectionalIterator2 __result)",
						"s": "std::__1",
						"u": "__MOVE_BACKWARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63a9e434125e2f25b94d27dd2714354e1a4d324b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "move_backward",
						"t": "_BidirectionalIterator2 (_BidirectionalIterator1, _BidirectionalIterator1, _BidirectionalIterator2)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator1, class _BidirectionalIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _BidirectionalIterator2 move_backward(_BidirectionalIterator1 __first, _BidirectionalIterator1 __last, _BidirectionalIterator2 __result)",
						"s": "std::__1",
						"u": "MOVE_BACKWARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51e1a9f04eeaf460fecfda1ccf89e9d3a3d8c242"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/swap_ranges.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SWAP_RANGES_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SWAP_RANGES_H",
						"r": "_LIBCPP___ALGORITHM_SWAP_RANGES_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SWAP_RANGES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dba9eaf0391f0abba574c19d3d07d208d6009c99"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__swap_ranges",
						"t": "pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _Sentinel1, _ForwardIterator2, _Sentinel2)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator1, class _Sentinel1, class _ForwardIterator2, class _Sentinel2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator1, _ForwardIterator2> __swap_ranges(_ForwardIterator1 __first1, _Sentinel1 __last1, _ForwardIterator2 __first2, _Sentinel2 __last2)",
						"s": "std::__1",
						"u": "__SWAP_RANGES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d618f46e6a2fb568e2c9fb11e71acf185f10e925"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__swap_ranges",
						"t": "pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _Sentinel1, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator1, class _Sentinel1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator1, _ForwardIterator2> __swap_ranges(_ForwardIterator1 __first1, _Sentinel1 __last1, _ForwardIterator2 __first2)",
						"s": "std::__1",
						"u": "__SWAP_RANGES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c5829b7adb469a64dcfa51a41d6433f0a55dbfc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "swap_ranges",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std::__1",
						"u": "SWAP_RANGES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ea6ad169d28bf62c7d6022e89ce71344477eaad"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_IS_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "256fb7decd7ed6c2ee5968bbb90bed78223e4a88"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "bool (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08399e8d8b7ee0dd51fa7baa8f2c1a5e009cc41a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "bool (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a381927504e9513d5f39cca2c76fbb349a7196c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_heap_until.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_HEAP_UNTIL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_HEAP_UNTIL_H",
						"r": "_LIBCPP___ALGORITHM_IS_HEAP_UNTIL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_HEAP_UNTIL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bafc840b1bca98d52d413fd2c6868742a046bb9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator __is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__IS_HEAP_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64395e8202cec252e05940a89a043e5df9a10fc6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_HEAP_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e842034db4bcef087c8fab027caa74817033a417"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_HEAP_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3005a154b4981d23bdb59c7c3315ba3a393a3839"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_partitioned.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_PARTITIONED_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_PARTITIONED_H",
						"r": "_LIBCPP___ALGORITHM_IS_PARTITIONED_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_PARTITIONED_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62c68bd80835f7580ba00344aaf071d82ba80704"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_partitioned",
						"t": "bool (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_partitioned(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_PARTITIONED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d89bf60b45b0a3f49831f518527687090a5d6e4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_IS_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b8bf63472a5b3c86214a53051c14bc958e68f30"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ConstTimeDistance",
						"t": "",
						"i": "std::__1::_ConstTimeDistance",
						"r": "template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class",
						"s": "std::__1",
						"u": "_CONSTTIMEDISTANCE",
						"q": "std::__1::_ConstTimeDistance",
						"w": "STD::__1::_CONSTTIMEDISTANCE",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9359b00445854d01ce5582691bbacddabdc46c5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_permutation_impl",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &&, _Proj1 &&, _Proj2 &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2, class _Pred> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __is_permutation_impl(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred&& __pred, _Proj1&& __proj1, _Proj2&& __proj2)",
						"s": "std::__1",
						"u": "__IS_PERMUTATION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bbf75b3eebf252ab49afe38d3034c7e04beb6ec6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_permutation",
						"t": "bool (_ForwardIterator1, _Sentinel1, _ForwardIterator2, _BinaryPredicate &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator1, class _Sentinel1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __is_permutation(_ForwardIterator1 __first1, _Sentinel1 __last1, _ForwardIterator2 __first2, _BinaryPredicate&& __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96b1a0cc599223bcce980188284e62d75d75683d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_permutation",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &&, _Proj1 &&, _Proj2 &&, false_type)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2, class _Pred> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __is_permutation(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred&& __pred, _Proj1&& __proj1, _Proj2&& __proj2, false_type)",
						"s": "std::__1",
						"u": "__IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c48327dc6fdb90408f9c64f9e228a29ccfd2ccbf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_permutation",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &&, _Proj1 &&, _Proj2 &&, true_type)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2, class _Pred> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __is_permutation(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred&& __pred, _Proj1&& __proj1, _Proj2&& __proj2, true_type)",
						"s": "std::__1",
						"u": "__IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50632fbcce579a870c0fabed1158f43dcacb7bf8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_permutation",
						"t": "bool (_Iter1, _Sent1, _Iter2, _Sent2, _Pred &&, _Proj1 &&, _Proj2 &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Proj1, class _Proj2, class _Pred> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __is_permutation(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Pred&& __pred, _Proj1&& __proj1, _Proj2&& __proj2)",
						"s": "std::__1",
						"u": "__IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ffbc236f372f7fbabec43e654b655409f052b1b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_permutation",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f279c9ce0cffc9cb7aff34d9be40b587f331d2e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_permutation",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0f3ec16163d1fd96695af42acb364157e252229"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_permutation",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3a3086323103a2fff5f605a872bb08691b5da41"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_permutation",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62550c5b8a70feed17907f90738ff92a8fad444b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_sorted.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_SORTED_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_SORTED_H",
						"r": "_LIBCPP___ALGORITHM_IS_SORTED_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_SORTED_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5dc541313147c4bc375ffd32f6628fb035752f97"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "bool (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_sorted(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_SORTED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4443f5e284abce9e6b1f81da652ada5c970d4194"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "bool (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool is_sorted(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_SORTED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41e3315cfb0944eb068c14be476a7fa605ed4dc6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/is_sorted_until.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_IS_SORTED_UNTIL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_IS_SORTED_UNTIL_H",
						"r": "_LIBCPP___ALGORITHM_IS_SORTED_UNTIL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_IS_SORTED_UNTIL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80dc542305a48def847e53d502a07fd82aeac6b2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__is_sorted_until",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__IS_SORTED_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a060de0f2d1488b4aecb58d3636cdd976715695"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator is_sorted_until(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_SORTED_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bca254d9483d54a011a8fcb8e15d1db3a133ae16"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator is_sorted_until(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "IS_SORTED_UNTIL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2b3116feef8ffba9165a4cf0589246ee7e6f003"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/lexicographical_compare.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H",
						"r": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5cd4ba063cca4a869b8fdd4836286aa4dd967ac"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__lexicographical_compare",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)",
						"s": "std::__1",
						"u": "__LEXICOGRAPHICAL_COMPARE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "510dd3b6b4032b9b5738a7cd15eb62b31ed94f0d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8dfd152eee2435c7a7db414e7fbde9965338469"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6e98fa55d59583930467cd2b8d1fe42489aecb1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/lexicographical_compare_three_way.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_THREE_WAY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_THREE_WAY_H",
						"r": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_THREE_WAY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_THREE_WAY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f42726c2a4b57d2ef3ea063716d31d611c59de7d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/three_way_comp_ref_type.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_THREE_WAY_COMP_REF_TYPE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_THREE_WAY_COMP_REF_TYPE_H",
						"r": "_LIBCPP___ALGORITHM_THREE_WAY_COMP_REF_TYPE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_THREE_WAY_COMP_REF_TYPE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8ac4cd8a6444a2566e9b886327d24c98d9784ff"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/make_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MAKE_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MAKE_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_MAKE_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MAKE_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2107cf82ae3269511adcf434ffccd9a3bc835f10"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__make_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__MAKE_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca62d7397c1beeab64d37e90de666accfa8ed89e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "make_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "MAKE_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84921016671c7f832943af93663a20c6a1c21afd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "make_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "MAKE_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2aea378de3f4b93ceb3d52a0db87de69ab4115d4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/sift_down.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SIFT_DOWN_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SIFT_DOWN_H",
						"r": "_LIBCPP___ALGORITHM_SIFT_DOWN_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SIFT_DOWN_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c498cd88c90eea68879241ca44ee8eccaf45e4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sift_down",
						"t": "void (_RandomAccessIterator, _Compare &&, typename iterator_traits<_RandomAccessIterator>::difference_type, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __sift_down(_RandomAccessIterator __first, _Compare&& __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len, _RandomAccessIterator __start)",
						"s": "std::__1",
						"u": "__SIFT_DOWN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01f239eda5e7d2d4522f258b122bd60fce6dad6e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__floyd_sift_down",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _Compare &&, typename iterator_traits<_RandomAccessIterator>::difference_type)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _RandomAccessIterator __floyd_sift_down(_RandomAccessIterator __first, _Compare&& __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len)",
						"s": "std::__1",
						"u": "__FLOYD_SIFT_DOWN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "564c18f2a990f7528a279d42ea8cbcef7fb2a243"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MERGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MERGE_H",
						"r": "_LIBCPP___ALGORITHM_MERGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f03c7b45381462d8d348cbd64ce8d5fd4da37144"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator __merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "__MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f157180008a66c7ce77cce6a3d24f8f7e9b1000"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "634c416077933e2c4594e71e52322bb5cab5c861"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)",
						"s": "std::__1",
						"u": "MERGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d431ef14fc621a723f285195018a88cb29fb8444"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/min_max_result.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MIN_MAX_RESULT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MIN_MAX_RESULT_H",
						"r": "_LIBCPP___ALGORITHM_MIN_MAX_RESULT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MIN_MAX_RESULT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9586c77a70f286fc86752abfd288dd97384aa65"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/minmax.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MINMAX_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MINMAX_H",
						"r": "_LIBCPP___ALGORITHM_MINMAX_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MINMAX_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41143f4f680c7ffd7c78f5b2021476e466b1f44b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax",
						"t": "pair<const _Tp &, const _Tp &> (const _Tp &, const _Tp &, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<const _Tp&, const _Tp&> minmax(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]], _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6e638dd62c5f7aeead0175061c4b50f19fab6c2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax",
						"t": "pair<const _Tp &, const _Tp &> (const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<const _Tp&, const _Tp&> minmax(const _Tp& __a [[clang::lifetimebound]], const _Tp& __b [[clang::lifetimebound]]) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea538694eee05c1d3c7627339e4d2dc6fa5c532e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax",
						"t": "pair<_Tp, _Tp> (initializer_list<_Tp>, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Tp, _Tp> minmax(initializer_list<_Tp> __t, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b404439bdb9dea7c277e213e83855c7d49394e07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax",
						"t": "pair<_Tp, _Tp> (initializer_list<_Tp>)",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Tp, _Tp> minmax(initializer_list<_Tp> __t) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c4ab9eb23ab0921f30e9838d700f20ecb03dc574"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/minmax_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MINMAX_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MINMAX_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_MINMAX_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MINMAX_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec7b58fd9606fc55c7d7095fc9539e9f5510c2d6"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_MinmaxElementLessFunc",
						"t": "",
						"i": "std::__1::_MinmaxElementLessFunc",
						"r": "template <class _Comp, class _Proj> _MinmaxElementLessFunc",
						"s": "std::__1",
						"u": "_MINMAXELEMENTLESSFUNC",
						"q": "std::__1::_MinmaxElementLessFunc",
						"w": "STD::__1::_MINMAXELEMENTLESSFUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1f23f57584357c58af751d2fbe9548ef23f68a2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp_",
						"t": "_Comp &",
						"i": "std::__1::_MinmaxElementLessFunc::__comp_",
						"r": "_Comp& __comp_",
						"s": "std::__1",
						"u": "__COMP_",
						"q": "std::__1::_MinmaxElementLessFunc",
						"w": "STD::__1::_MINMAXELEMENTLESSFUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f256761a46e21ae62dbacf62c660c62d86bbeccb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__proj_",
						"t": "_Proj &",
						"i": "std::__1::_MinmaxElementLessFunc::__proj_",
						"r": "_Proj& __proj_",
						"s": "std::__1",
						"u": "__PROJ_",
						"q": "std::__1::_MinmaxElementLessFunc",
						"w": "STD::__1::_MINMAXELEMENTLESSFUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be1055adecc4de648c5004c405c62f17352bc480"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_MinmaxElementLessFunc<_Comp, _Proj>",
						"t": "void (_Comp &, _Proj &)",
						"i": "std::__1::_MinmaxElementLessFunc::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _MinmaxElementLessFunc<_Comp, _Proj>(_Comp& __comp, _Proj& __proj)",
						"s": "std::__1",
						"u": "_MINMAXELEMENTLESSFUNC<_COMP, _PROJ>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c4ac9230647b31f6f29b1d3153821a6df48c0fb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Iter &, _Iter &)",
						"i": "std::__1::_MinmaxElementLessFunc::",
						"r": "template <class _Iter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(_Iter& __it1, _Iter& __it2)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c99cbf7f275d213d35f1bf4a6b1bf66c90ad54f6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__minmax_element_impl",
						"t": "pair<_Iter, _Iter> (_Iter, _Sent, _Comp &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Sent, class _Proj, class _Comp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter, _Iter> __minmax_element_impl(_Iter __first, _Sent __last, _Comp& __comp, _Proj& __proj)",
						"s": "std::__1",
						"u": "__MINMAX_ELEMENT_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "324cea3d30343f1740c15821215a180f36cef387"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_ForwardIterator, _ForwardIterator> minmax_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5411512a492ee576de69573260341c0e5e089e05"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_ForwardIterator, _ForwardIterator> minmax_element(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MINMAX_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d44babb70ea41b709ab08608300fcb04f220e0a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/mismatch.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MISMATCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MISMATCH_H",
						"r": "_LIBCPP___ALGORITHM_MISMATCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MISMATCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa40108dc1bcf2da3c14600410f5acecb4492761"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MISMATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4c1e5838a8fb5dfb69453175e1fb03cb6623898"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MISMATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1cb8b9b50bb805f3e226ded2838b83f5b9b0087"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MISMATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c7885eced1317004266d2a5f003523f5b57c7af"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "MISMATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f6fcf9029bdaf028d6cc3f6e897d4f6316df9b6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/next_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_NEXT_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_NEXT_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_NEXT_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_NEXT_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc06462d224acd35642d7bb40542625aa2e7abe2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__next_permutation",
						"t": "pair<_BidirectionalIterator, bool> (_BidirectionalIterator, _Sentinel, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_BidirectionalIterator, bool> __next_permutation(_BidirectionalIterator __first, _Sentinel __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__NEXT_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c659d27972fbf548239fc94a199d0b2eb9d0226"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "next_permutation",
						"t": "bool (_BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool next_permutation(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "NEXT_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d7333a8df6d786bc0fee80956926797192ff215"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "next_permutation",
						"t": "bool (_BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool next_permutation(_BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std::__1",
						"u": "NEXT_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8270342433d5cad0ba767a1d0783a0ed54cb5096"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/reverse.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REVERSE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REVERSE_H",
						"r": "_LIBCPP___ALGORITHM_REVERSE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REVERSE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb697f77f1e19ab6b16596f93853a45e84111433"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__reverse_impl",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, bidirectional_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __reverse_impl(_BidirectionalIterator __first, _BidirectionalIterator __last, bidirectional_iterator_tag)",
						"s": "std::__1",
						"u": "__REVERSE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "920b39feefb5a83a0659d8daf37bd2f55a362186"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__reverse_impl",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, random_access_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __reverse_impl(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)",
						"s": "std::__1",
						"u": "__REVERSE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d157be876e114c19e3003d0fd94f745e48117650"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__reverse",
						"t": "void (_BidirectionalIterator, _Sentinel)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BidirectionalIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __reverse(_BidirectionalIterator __first, _Sentinel __last)",
						"s": "std::__1",
						"u": "__REVERSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41e4df238489e9a109b46892ca2d4df953fd13e0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std::__1",
						"u": "REVERSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b1b54aa19a68f1bc13f89ca7d874104fa25b111"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/none_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_NONE_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_NONE_OF_H",
						"r": "_LIBCPP___ALGORITHM_NONE_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_NONE_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e8962a84513e86b88765afd6a120c01fe11c5b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "none_of",
						"t": "bool (_InputIterator, _InputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "NONE_OF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b345d1564adf24cf26b6155fb26c369de0dd9f5f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/nth_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_NTH_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_NTH_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_NTH_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_NTH_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4640c3604cf64ce8126c7045371cc040de6f5aec"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__nth_element_find_guard",
						"t": "bool (_RandomAccessIterator &, _RandomAccessIterator &, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool __nth_element_find_guard(_RandomAccessIterator& __i, _RandomAccessIterator& __j, _RandomAccessIterator __m, _Compare __comp)",
						"s": "std::__1",
						"u": "__NTH_ELEMENT_FIND_GUARD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd225f27fc72e7cff6701a7b38ed5449a21347eb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__nth_element",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__NTH_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3b47699e7164206c75f0ac32a00a77be9876eec"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__nth_element_impl",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __nth_element_impl(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare& __comp)",
						"s": "std::__1",
						"u": "__NTH_ELEMENT_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f47d1a608a23a794c91de7ca8e3a1fe418059efd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "NTH_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d4cee092e0fc907bf0914e275c1e6f4ff934288"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "NTH_ELEMENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5057acea5830f073947e614a79501e6dc44d266b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SORT_H",
						"r": "_LIBCPP___ALGORITHM_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85f3702b607e6a6275d7137de891573509fbb713"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sort3",
						"t": "unsigned int (_ForwardIterator, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr unsigned int __sort3(_ForwardIterator __x, _ForwardIterator __y, _ForwardIterator __z, _Compare __c)",
						"s": "std::__1",
						"u": "__SORT3",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cf6a3f94db8b15244f8a957b41281e25fa0ee94"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort4",
						"t": "void (_ForwardIterator, _ForwardIterator, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __sort4(_ForwardIterator __x1, _ForwardIterator __x2, _ForwardIterator __x3, _ForwardIterator __x4, _Compare __c)",
						"s": "std::__1",
						"u": "__SORT4",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "406b91c221d8a15a8c3da4761e4405f76fdd909f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort5",
						"t": "void (_ForwardIterator, _ForwardIterator, _ForwardIterator, _ForwardIterator, _ForwardIterator, _Comp)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Comp, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __sort5(_ForwardIterator __x1, _ForwardIterator __x2, _ForwardIterator __x3, _ForwardIterator __x4, _ForwardIterator __x5, _Comp __comp)",
						"s": "std::__1",
						"u": "__SORT5",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16060b099f2b93c0c2bc75790acfd9347026837f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_simple_comparator",
						"t": "",
						"i": "std::__1::__is_simple_comparator",
						"r": "template <class _Tp> __is_simple_comparator : false_type",
						"s": "std::__1",
						"u": "__IS_SIMPLE_COMPARATOR",
						"q": "std::__1::__is_simple_comparator",
						"w": "STD::__1::__IS_SIMPLE_COMPARATOR",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2ae0bb5abfdd80b689e1c3ca1eaadbc79429b33"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_simple_comparator",
						"t": "std::__is_simple_comparator<__less<> &>",
						"i": "std::__is_simple_comparator",
						"r": "template<> __is_simple_comparator<__less<>&> : true_type",
						"s": "std::__1",
						"u": "__IS_SIMPLE_COMPARATOR",
						"q": "std::__is_simple_comparator",
						"w": "STD::__IS_SIMPLE_COMPARATOR",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d49c528b5c10334d4659924fe448e85220066ec"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__use_branchless_sort",
						"t": "std::__use_branchless_sort",
						"i": "std::__use_branchless_sort",
						"r": "using __use_branchless_sort",
						"s": "std::__1",
						"u": "__USE_BRANCHLESS_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae88c44bdd4fd2c2a80f4b6305965deda101db67"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "(unnamed enum at C:\\Users\\sblo\\Dev\\upp\\bin\\clang\\include\\c++\\v1\\__algorithm\\sort.h:155:1)",
						"t": "std::__detail::(unnamed enum at C:\\Users\\sblo\\Dev\\upp\\bin\\clang\\include\\c++\\v1\\__algorithm\\sort.h:155:1)",
						"i": "std::__detail::(unnamed at C:\\Users\\sblo\\Dev\\upp\\bin\\clang\\include\\c++\\v1\\__algorithm\\sort.)",
						"r": "enum",
						"s": "std::__1::__detail",
						"u": "(UNNAMED ENUM AT C:\\USERS\\SBLO\\DEV\\UPP\\BIN\\CLANG\\INCLUDE\\C++\\V1\\__ALGORITHM\\SORT.H:155:1)",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c603ba6c6ddbdbb453978fc7b8e617610764b22"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__block_size",
						"t": "std::__detail::(unnamed enum at C:\\Users\\sblo\\Dev\\upp\\bin\\clang\\include\\c++\\v1\\__algorithm\\sort.h:155:1)",
						"i": "std::__1::__detail::__block_size",
						"r": "__block_size",
						"s": "std::__1::__detail",
						"u": "__BLOCK_SIZE",
						"q": "std::__1::__detail",
						"w": "STD::__1::__DETAIL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "410966462e1ae42c3eeb9c834e24acb775b2117b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__cond_swap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __cond_swap(_RandomAccessIterator __x, _RandomAccessIterator __y, _Compare __c)",
						"s": "std::__1",
						"u": "__COND_SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a6c2dd45e6af945d15fe1ed1430485927d15030"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partially_sorted_swap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __partially_sorted_swap(_RandomAccessIterator __x, _RandomAccessIterator __y, _RandomAccessIterator __z, _Compare __c)",
						"s": "std::__1",
						"u": "__PARTIALLY_SORTED_SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e85253a2b58334690d9435cc61b927aa447168f5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort3_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class, class _Compare, class _RandomAccessIterator, __enable_if_t<__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT3_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6251cd35e9abc612494858cb3fdbbbff326cf90c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort3_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, __enable_if_t<!__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT3_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d11f1f5675907f98ed311ee949bb968fda2c9871"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort4_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class, class _Compare, class _RandomAccessIterator, __enable_if_t<__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT4_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cacd6b7ceecc952b74ad0c539f5a9743670bc53e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort4_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, __enable_if_t<!__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT4_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7605ea3f902d9ebb974fdfc1f955975bf4de2fb4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort5_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, __enable_if_t<__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT5_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec4ea1648ba08bf6a8bf80280e49515b640b02bc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort5_maybe_branchless",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, __enable_if_t<!__use_branchless_sort<_Compare, _RandomAccessIterator>::value, int>",
						"s": "std::__1",
						"u": "__SORT5_MAYBE_BRANCHLESS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce2b309880e9c379f94a2616220eadd5083b0040"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__selection_sort",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __selection_sort(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__SELECTION_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5aa5ac58ccdcec5f7861741e71a7b5068390f10"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__insertion_sort",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __insertion_sort(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__INSERTION_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "647ff83525dd4b3f6d0c546f1663d70dac85c976"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__insertion_sort_unguarded",
						"t": "void (const _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __insertion_sort_unguarded(const _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__INSERTION_SORT_UNGUARDED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f5fd63441f953900646f1dc02138d14d91553e4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__insertion_sort_incomplete",
						"t": "bool (_RandomAccessIterator, _RandomAccessIterator, _Comp)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Comp, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __insertion_sort_incomplete(_RandomAccessIterator __first, _RandomAccessIterator __last, _Comp __comp)",
						"s": "std::__1",
						"u": "__INSERTION_SORT_INCOMPLETE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5d0696838f8be43c6b96fcc5e27a1c60ec9a764"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__swap_bitmap_pos",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, uint64_t &, uint64_t &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __swap_bitmap_pos(_RandomAccessIterator __first, _RandomAccessIterator __last, uint64_t& __left_bitset, uint64_t& __right_bitset)",
						"s": "std::__1",
						"u": "__SWAP_BITMAP_POS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e44c8f4d822e499a7c47e7d1b73136b6de6fd4f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__populate_left_bitset",
						"t": "void (_RandomAccessIterator, _Compare, _ValueType &, uint64_t &)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator, class _ValueType",
						"s": "std::__1",
						"u": "__POPULATE_LEFT_BITSET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76300f9224c32716f2f7fcc741ffd57aae98acb3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__populate_right_bitset",
						"t": "void (_RandomAccessIterator, _Compare, _ValueType &, uint64_t &)",
						"i": "std::__1::",
						"r": "template <class _Compare, class _RandomAccessIterator, class _ValueType",
						"s": "std::__1",
						"u": "__POPULATE_RIGHT_BITSET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93d93ad384a43474eee1e17b4c620d4e47d88662"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__bitset_partition_partial_blocks",
						"t": "void (_RandomAccessIterator &, _RandomAccessIterator &, _Compare, _ValueType &, uint64_t &, uint64_t &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, class _ValueType",
						"s": "std::__1",
						"u": "__BITSET_PARTITION_PARTIAL_BLOCKS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7bc74c2a2fe4e923c96d97fa1b0cdb4d02bd2018"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__swap_bitmap_pos_within",
						"t": "void (_RandomAccessIterator &, _RandomAccessIterator &, uint64_t &, uint64_t &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __swap_bitmap_pos_within(_RandomAccessIterator& __first, _RandomAccessIterator& __lm1, uint64_t& __left_bitset, uint64_t& __right_bitset)",
						"s": "std::__1",
						"u": "__SWAP_BITMAP_POS_WITHIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e0818832a9d460f707384826f709b9068a0d2d1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__bitset_partition",
						"t": "std::pair<_RandomAccessIterator, bool> (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) std::pair<_RandomAccessIterator, bool> __bitset_partition(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__BITSET_PARTITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "318b0cd37e86d8d7ce7c0c9594e10d17dede8065"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_with_equals_on_right",
						"t": "std::pair<_RandomAccessIterator, bool> (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) std::pair<_RandomAccessIterator, bool> __partition_with_equals_on_right(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__PARTITION_WITH_EQUALS_ON_RIGHT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "639112c2fcd9f45e42ab44c1cd2b781d43873ceb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_with_equals_on_left",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator __partition_with_equals_on_left(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "__PARTITION_WITH_EQUALS_ON_LEFT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb5cb61ff1d9e35202751a030a1cdb7ee6973a6e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__introsort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare, typename iterator_traits<_RandomAccessIterator>::difference_type, bool)",
						"i": "std::__1::__introsort(_RandomAccessIterator,_RandomAccessIterator,_Compare,typename iterator_traits::difference_type,bool)",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, bool _UseBitSetPartition> void __introsort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __depth, bool __leftmost = true)",
						"s": "std::__1",
						"u": "__INTROSORT",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "038eba41ce965d636bd2780f0c0ddf87a9e7b94f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__log2i",
						"t": "_Number (_Number)",
						"i": "std::__1::",
						"r": "template <typename _Number> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Number __log2i(_Number __n)",
						"s": "std::__1",
						"u": "__LOG2I",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b86d45a83ace5ef4bc90e7842081211f473813e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Comp)",
						"i": "std::__1::__sort(_RandomAccessIterator,_RandomAccessIterator,_Comp)",
						"r": "template <class _Comp, class _RandomAccessIterator> void __sort(_RandomAccessIterator, _RandomAccessIterator, _Comp)",
						"s": "std::__1",
						"u": "__SORT",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc12d3540facc400b4d6f73d0b2c72be8e34408d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort_dispatch",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Comp &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Comp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __sort_dispatch(_RandomAccessIterator __first, _RandomAccessIterator __last, _Comp& __comp)",
						"s": "std::__1",
						"u": "__SORT_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "832d9089d5493fa841bc75398df809a1385250aa"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_any_of",
						"t": "std::__is_any_of",
						"i": "std::__is_any_of",
						"r": "using __is_any_of",
						"s": "std::__1",
						"u": "__IS_ANY_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85313f9d1e41a552c29a918386844015a1e88233"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sort_is_specialized_in_library",
						"t": "std::__sort_is_specialized_in_library",
						"i": "std::__sort_is_specialized_in_library",
						"r": "using __sort_is_specialized_in_library",
						"s": "std::__1",
						"u": "__SORT_IS_SPECIALIZED_IN_LIBRARY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb871da3d9f6c253453846fc2da82cf780eb8007"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort_dispatch",
						"t": "void (_Type *, _Type *, __less<> &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Type, __enable_if_t<__sort_is_specialized_in_library<_Type>::value, int>",
						"s": "std::__1",
						"u": "__SORT_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "778ff0165b480e165f98a13db191df56091a9c95"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort_dispatch",
						"t": "void (_Type *, _Type *, less<_Type> &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Type, __enable_if_t<__sort_is_specialized_in_library<_Type>::value, int>",
						"s": "std::__1",
						"u": "__SORT_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae11356f16ba37dc5c5b41767d34d15f54b4b362"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort_dispatch",
						"t": "void (_Type *, _Type *, less<> &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Type, __enable_if_t<__sort_is_specialized_in_library<_Type>::value, int>",
						"s": "std::__1",
						"u": "__SORT_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8820246b5c533d223b2f6902129b27a605e254a0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sort_impl",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Comp &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Comp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __sort_impl(_RandomAccessIterator __first, _RandomAccessIterator __last, _Comp& __comp)",
						"s": "std::__1",
						"u": "__SORT_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "503764de4a4788417c4cb48027be635e1b84bc97"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Comp)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Comp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Comp __comp)",
						"s": "std::__1",
						"u": "SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2092b864cf71f2564b89533fa872f735904d05e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void sort(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c3096f4709f1adc0511ac8540657693c25faa33"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/partial_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PARTIAL_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PARTIAL_SORT_H",
						"r": "_LIBCPP___ALGORITHM_PARTIAL_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PARTIAL_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2fae49348db339d71bc6c5c846b4d4d19eb8bd65"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partial_sort_impl",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Sentinel, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator __partial_sort_impl(_RandomAccessIterator __first, _RandomAccessIterator __middle, _Sentinel __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__PARTIAL_SORT_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4dab35f9e3796b0f2ae71721e30e4d219280237"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partial_sort",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Sentinel, _Compare &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator __partial_sort(_RandomAccessIterator __first, _RandomAccessIterator __middle, _Sentinel __last, _Compare& __comp)",
						"s": "std::__1",
						"u": "__PARTIAL_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bab36cf7d78809aada4043ff2a27bc46959140ac"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void partial_sort(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "PARTIAL_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f06f4bd2ee9af26e9d92ae856ebe91e149867ee7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void partial_sort(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "PARTIAL_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea49feca20b64c127076651a81322f13e2ead7aa"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/sort_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SORT_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SORT_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_SORT_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SORT_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2fdd202a4de98a6f991ed0d0bb3f60a75fa6090d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sort_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__SORT_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6101f7f1dbb2f5ffa5ea0fd3176e77604496f39d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "SORT_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f05843a9d3d0bb6e88118e3d48cd0cec1cb00449"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "SORT_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db51c913b2150bf5aaed30a763c84d3c026a4cab"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pop_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_POP_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_POP_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_POP_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_POP_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1425713a648f5ddc29bcc48c3e041c7d82b8813e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pop_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &, typename iterator_traits<_RandomAccessIterator>::difference_type)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare& __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len)",
						"s": "std::__1",
						"u": "__POP_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23535a64b8abeb5c6929d2fa524b1c0309d7216a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "pop_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "POP_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf4dfa6918c76498856662a050487fc4feff4eaf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "pop_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "POP_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e44cfb17d36f296a585ff74a4b8241353559185e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/push_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PUSH_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PUSH_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_PUSH_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PUSH_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac844323d733cd7b33f200f3328502af510e63e4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sift_up",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &&, typename iterator_traits<_RandomAccessIterator>::difference_type)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __sift_up(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare&& __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len)",
						"s": "std::__1",
						"u": "__SIFT_UP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bec3ff1c66a3f4d754c893ce94a29f30531e4b1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__push_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr void __push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare& __comp)",
						"s": "std::__1",
						"u": "__PUSH_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e458a308ba558e24679c8f0f9eb1a407ab7f7d08"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "push_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "PUSH_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9ee1bc2513826d3e34d199380a72141d23914c2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "push_heap",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "PUSH_HEAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a74e3c83400aecccd681dcd3e288013106af714"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/partial_sort_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PARTIAL_SORT_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PARTIAL_SORT_COPY_H",
						"r": "_LIBCPP___ALGORITHM_PARTIAL_SORT_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PARTIAL_SORT_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c22e93cd129ee3bb82f7edec317f956fc9ada5ff"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partial_sort_copy",
						"t": "pair<_InputIterator, _RandomAccessIterator> (_InputIterator, _Sentinel1, _RandomAccessIterator, _Sentinel2, _Compare &&, _Proj1 &&, _Proj2 &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InputIterator, class _Sentinel1, class _RandomAccessIterator, class _Sentinel2, class _Proj1, class _Proj2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator, _RandomAccessIterator> __partial_sort_copy(_InputIterator __first, _Sentinel1 __last, _RandomAccessIterator __result_first, _Sentinel2 __result_last, _Compare&& __comp, _Proj1&& __proj1, _Proj2&& __proj2)",
						"s": "std::__1",
						"u": "__PARTIAL_SORT_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "258afffb833238b1b9250c538878926b82ecf0df"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "_RandomAccessIterator (_InputIterator, _InputIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator partial_sort_copy(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last, _Compare __comp)",
						"s": "std::__1",
						"u": "PARTIAL_SORT_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42d82c6b6a520dfc73c889ac106971a547572833"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "_RandomAccessIterator (_InputIterator, _InputIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator partial_sort_copy(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last)",
						"s": "std::__1",
						"u": "PARTIAL_SORT_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b976ef188f5ddd03525b96fd118abcf56656f028"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/make_projected.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_MAKE_PROJECTED_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_MAKE_PROJECTED_H",
						"r": "_LIBCPP___ALGORITHM_MAKE_PROJECTED_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_MAKE_PROJECTED_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5556eeef8f7e2820a1850a9048f4874290658a18"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ProjectedPred",
						"t": "",
						"i": "std::__1::_ProjectedPred",
						"r": "template <class _Pred, class _Proj> _ProjectedPred",
						"s": "std::__1",
						"u": "_PROJECTEDPRED",
						"q": "std::__1::_ProjectedPred",
						"w": "STD::__1::_PROJECTEDPRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "972821252ad41e0403e8d8c9540ef59eb2c01000"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred",
						"t": "_Pred &",
						"i": "std::__1::_ProjectedPred::__pred",
						"r": "_Pred& __pred",
						"s": "std::__1",
						"u": "__PRED",
						"q": "std::__1::_ProjectedPred",
						"w": "STD::__1::_PROJECTEDPRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a93413cb8b2a19f0f4062d59d1263b8ba907ee2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__proj",
						"t": "_Proj &",
						"i": "std::__1::_ProjectedPred::__proj",
						"r": "_Proj& __proj",
						"s": "std::__1",
						"u": "__PROJ",
						"q": "std::__1::_ProjectedPred",
						"w": "STD::__1::_PROJECTEDPRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f733938e54ec6a38d1759ec17a8c5eff705f8f44"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ProjectedPred<_Pred, _Proj>",
						"t": "void (_Pred &, _Proj &)",
						"i": "std::__1::_ProjectedPred::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _ProjectedPred<_Pred, _Proj>(_Pred& __pred_arg, _Proj& __proj_arg)",
						"s": "std::__1",
						"u": "_PROJECTEDPRED<_PRED, _PROJ>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "07ac1d63907ed5a1d65387c9fb97f4ddfd70ba3f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __invoke_of<_Pred &, decltype(std::__invoke(std::declval<_Proj &>(), std::declval<_Tp>()))>::type (_Tp &&) const",
						"i": "std::__1::_ProjectedPred::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr typename __invoke_of<_Pred&, decltype(std::__invoke(std::declval<_Proj&>(), std::declval<_Tp>()))>::type operator()(_Tp&& __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d987d22924a6376ee17b454d1a10ff69fa6522c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __invoke_of<_Pred &, decltype(std::__invoke(std::declval<_Proj &>(), std::declval<_T1>())), decltype(std::__invoke(std::declval<_Proj &>(), std::declval<_T2>()))>::type (_T1 &&, _T2 &&) const",
						"i": "std::__1::_ProjectedPred::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr typename __invoke_of<_Pred&, decltype(std::__invoke(std::declval<_Proj&>(), std::declval<_T1>())), decltype(std::__invoke(std::declval<_Proj&>(), std::declval<_T2>()))>::type operator()(_T1&& __lhs, _T2&& __rhs) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "829c7e8f7f9ad1c7e4f3817d039057eb7662cb17"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__make_projected",
						"t": "_ProjectedPred<_Pred, _Proj> (_Pred &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Pred, class _Proj, __enable_if_t<!(!is_member_pointer<__decay_t<_Pred>>::value&& __is_identity<__decay_t<_Proj>>::value), int>",
						"s": "std::__1",
						"u": "__MAKE_PROJECTED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd1456de314a7d2bbec026b394a3fa7554ea8cf0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__make_projected",
						"t": "_Pred &(_Pred &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _Pred, class _Proj, __enable_if_t<!is_member_pointer<__decay_t<_Pred>>::value&& __is_identity<__decay_t<_Proj>>::value, int>",
						"s": "std::__1",
						"u": "__MAKE_PROJECTED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c63ef30351a5125535c9186e1fe48e261fe23e5"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PARTITION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PARTITION_H",
						"r": "_LIBCPP___ALGORITHM_PARTITION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "283732947e55b89882af28df3a875900b96bd578"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_impl",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _Sentinel, _Predicate, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _Predicate, class _AlgPolicy, class _ForwardIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator, _ForwardIterator> __partition_impl(_ForwardIterator __first, _Sentinel __last, _Predicate __pred, forward_iterator_tag)",
						"s": "std::__1",
						"u": "__PARTITION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66e679e03ec4c70228cbf155c1e0d0439eaea77b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_impl",
						"t": "pair<_BidirectionalIterator, _BidirectionalIterator> (_BidirectionalIterator, _Sentinel, _Predicate, bidirectional_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _Predicate, class _AlgPolicy, class _BidirectionalIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_BidirectionalIterator, _BidirectionalIterator> __partition_impl(_BidirectionalIterator __first, _Sentinel __sentinel, _Predicate __pred, bidirectional_iterator_tag)",
						"s": "std::__1",
						"u": "__PARTITION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a38e02df57bf529a0a267df5a881fcd0201877a3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition",
						"t": "pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _Sentinel, _Predicate &&, _IterCategory)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _ForwardIterator, class _Sentinel, class _Predicate, class _IterCategory> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator, _ForwardIterator> __partition(_ForwardIterator __first, _Sentinel __last, _Predicate&& __pred, _IterCategory __iter_category)",
						"s": "std::__1",
						"u": "__PARTITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea661ef3e993ed9505c729221a7e3a2f4a1eebf9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std::__1",
						"u": "PARTITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0469dfc07a7fe861c1620c29f25962c5393f225"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/partition_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PARTITION_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PARTITION_COPY_H",
						"r": "_LIBCPP___ALGORITHM_PARTITION_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PARTITION_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f72779ee4bf001802d7e1adf6a412face84c9f1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition_copy",
						"t": "pair<_OutputIterator1, _OutputIterator2> (_InputIterator, _InputIterator, _OutputIterator1, _OutputIterator2, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator1, class _OutputIterator2, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_OutputIterator1, _OutputIterator2> partition_copy(_InputIterator __first, _InputIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _Predicate __pred)",
						"s": "std::__1",
						"u": "PARTITION_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd8a9a57a289e5ff06243dfb03e002eb249f0dee"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/partition_point.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PARTITION_POINT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PARTITION_POINT_H",
						"r": "_LIBCPP___ALGORITHM_PARTITION_POINT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PARTITION_POINT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca744ba4c524d79b217b90b93fa10f68e90f5d75"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition_point",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator partition_point(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std::__1",
						"u": "PARTITION_POINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7c1770af75898b524a0085df01aca2b26a186e1f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/prev_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PREV_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PREV_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_PREV_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PREV_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8babcc6fa8c99a4b663ab8ccfa6c25901fad68d9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__prev_permutation",
						"t": "pair<_BidirectionalIterator, bool> (_BidirectionalIterator, _Sentinel, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator, class _Sentinel> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_BidirectionalIterator, bool> __prev_permutation(_BidirectionalIterator __first, _Sentinel __last, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__PREV_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75729cfc1776518991fe7e482259c85c1ba4e903"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "prev_permutation",
						"t": "bool (_BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool prev_permutation(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "PREV_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e863cad78200d6d99da4ee9acc082d65ddb9115a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "prev_permutation",
						"t": "bool (_BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool prev_permutation(_BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std::__1",
						"u": "PREV_PERMUTATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eef41637ec83361fb67ccc27f0840aa365947249"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_any_all_none_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_ANY_ALL_NONE_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_ANY_ALL_NONE_OF_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_ANY_ALL_NONE_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_ANY_ALL_NONE_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "21b636f55d002e08465db125e9cc58f8d9510cb6"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_FIND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_FIND_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_FIND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17b9247d2e897b61432e21fbf2a014c2a44795e9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_backend.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_BACKEND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_BACKEND_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_BACKEND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_BACKEND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d0021b307a6280764cdf833fce428e07daefb36"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/stable_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_STABLE_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_STABLE_SORT_H",
						"r": "_LIBCPP___ALGORITHM_STABLE_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_STABLE_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ad4d7a9ba5e6216d74631e87f0d7c69aae9e211"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__insertion_sort_move",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, typename iterator_traits<_BidirectionalIterator>::value_type *, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __insertion_sort_move(_BidirectionalIterator __first1, _BidirectionalIterator __last1, typename iterator_traits<_BidirectionalIterator>::value_type *__first2, _Compare __comp)",
						"s": "std::__1",
						"u": "__INSERTION_SORT_MOVE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e3ecd80db3a42742a9e233c1f89494f6474ec8e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge_move_construct",
						"t": "void (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, typename iterator_traits<_InputIterator1>::value_type *, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InputIterator1, class _InputIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __merge_move_construct(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, typename iterator_traits<_InputIterator1>::value_type *__result, _Compare __comp)",
						"s": "std::__1",
						"u": "__MERGE_MOVE_CONSTRUCT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e3320dbadd6dc112588c1bb6137a192a9e85723"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge_move_assign",
						"t": "void (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __merge_move_assign(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "__MERGE_MOVE_ASSIGN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "595b8a44c860500fae595debf222a8d2d819d049"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare, typename iterator_traits<_RandomAccessIterator>::difference_type, typename iterator_traits<_RandomAccessIterator>::value_type *, ptrdiff_t)",
						"i": "std::__1::__stable_sort(_RandomAccessIterator,_RandomAccessIterator,_Compare,typename iterator_traits::difference_type,typename iterator_traits::value_type*,ptrdiff_t)",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> void __stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len, typename iterator_traits<_RandomAccessIterator>::value_type *__buff, ptrdiff_t __buff_size)",
						"s": "std::__1",
						"u": "__STABLE_SORT",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ed67a25bcfe6f3f2e8e1523fced48a5c0ff0c51"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_sort_move",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare, typename iterator_traits<_RandomAccessIterator>::difference_type, typename iterator_traits<_RandomAccessIterator>::value_type *)",
						"i": "std::__1::__stable_sort_move(_RandomAccessIterator,_RandomAccessIterator,_Compare,typename iterator_traits::difference_type,typename iterator_traits::value_type*)",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> void __stable_sort_move(_RandomAccessIterator __first1, _RandomAccessIterator __last1, _Compare __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len, typename iterator_traits<_RandomAccessIterator>::value_type *__first2)",
						"s": "std::__1",
						"u": "__STABLE_SORT_MOVE",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "637e47e629c16d93cad359c63a5687f8d79c1cdd"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__stable_sort_switch",
						"t": "",
						"i": "std::__1::__stable_sort_switch",
						"r": "template <class _Tp> __stable_sort_switch",
						"s": "std::__1",
						"u": "__STABLE_SORT_SWITCH",
						"q": "std::__1::__stable_sort_switch",
						"w": "STD::__1::__STABLE_SORT_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa8bd78d48483082ebde0480e68257f8a7a962b7"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const unsigned int",
						"i": "std::__1::__stable_sort_switch::value",
						"r": "static const unsigned int value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__stable_sort_switch",
						"w": "STD::__1::__STABLE_SORT_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb37f024a20ec5f82105534d06ee179331d5d4e8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare, typename iterator_traits<_RandomAccessIterator>::difference_type, typename iterator_traits<_RandomAccessIterator>::value_type *, ptrdiff_t)",
						"i": "std::__1::__stable_sort(_RandomAccessIterator,_RandomAccessIterator,_Compare,typename iterator_traits::difference_type,typename iterator_traits::value_type*,ptrdiff_t)",
						"r": "template <class _AlgPolicy, class _Compare, class _RandomAccessIterator> void __stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, typename iterator_traits<_RandomAccessIterator>::difference_type __len, typename iterator_traits<_RandomAccessIterator>::value_type *__buff, ptrdiff_t __buff_size)",
						"s": "std::__1",
						"u": "__STABLE_SORT",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ed67a25bcfe6f3f2e8e1523fced48a5c0ff0c51"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_sort_impl",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __stable_sort_impl(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare& __comp)",
						"s": "std::__1",
						"u": "__STABLE_SORT_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75899d4a13c28cacf4202c4bf1c60a533d85d1a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std::__1",
						"u": "STABLE_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a89b25cec523a4f84aebf390dff2049bf669ab28"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std::__1",
						"u": "STABLE_SORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbf337aabad7355cfbe56cc275408252cd6db0bc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/transform.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_TRANSFORM_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_TRANSFORM_H",
						"r": "_LIBCPP___ALGORITHM_TRANSFORM_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_TRANSFORM_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9477ad03c8a6607b18b43bd0c4799ae014632d02"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _UnaryOperation)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _UnaryOperation> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator transform(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _UnaryOperation __op)",
						"s": "std::__1",
						"u": "TRANSFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c668ec42807f5f530f3e5992fed71bb76e0b191"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _OutputIterator, _BinaryOperation)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _BinaryOperation> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator transform(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _OutputIterator __result, _BinaryOperation __binary_op)",
						"s": "std::__1",
						"u": "TRANSFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a657ceb4229ad670d656ffd7597295352012b26d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_frontend_dispatch.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_FRONTEND_DISPATCH",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_FRONTEND_DISPATCH",
						"r": "_LIBCPP___ALGORITHM_PSTL_FRONTEND_DISPATCH",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_FRONTEND_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7be87573a198885aef97904d32d87675417e1957"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP_PSTL_CUSTOMIZATION_POINT",
						"t": "",
						"i": "_LIBCPP_PSTL_CUSTOMIZATION_POINT",
						"r": "_LIBCPP_PSTL_CUSTOMIZATION_POINT",
						"s": "",
						"u": "_LIBCPP_PSTL_CUSTOMIZATION_POINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35e18bdafd0026208c3d6d74ca4a0ae7358a861b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pstl_frontend_dispatch",
						"t": "decltype(auto) (_SpecializedImpl, _GenericImpl, _Args &&...)",
						"i": "std::__1::",
						"r": "template <class _SpecializedImpl, class _GenericImpl, class ..._Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) decltype(auto) __pstl_frontend_dispatch(_SpecializedImpl __specialized_impl, _GenericImpl __generic_impl, _Args&&...__args)",
						"s": "std::__1",
						"u": "__PSTL_FRONTEND_DISPATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9dd216700c27100c5bf5a684916f2251f472705"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_COPY_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01d7c2c315937f4fec31c15e0d90abdc8b06499b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_transform.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_TRANSFORM_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_TRANSFORM_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_TRANSFORM_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_TRANSFORM_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "407a4605898812e8cb00a02745762cf786aa813e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_count.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_COUNT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_COUNT_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_COUNT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_COUNT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "352213475fa789dec1d71aefb99c54ca33e012a9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_for_each.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_FOR_EACH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_FOR_EACH_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_FOR_EACH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_FOR_EACH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a4cd23223778953f60fd80d40eafdd223ca46a8"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_equal.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_EQUAL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_EQUAL_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_EQUAL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_EQUAL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "531cbf1e78bfa3033febc39843d12612bf1b3e43"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_fill.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_FILL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_FILL_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_FILL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_FILL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2cb7179297613897d453dd4417babc09d46a0081"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_generate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_GENERATE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_GENERATE_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_GENERATE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_GENERATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c364a8292daff109777c9d65b9e066f32a808eb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_is_partitioned.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_IS_PARITTIONED",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_IS_PARITTIONED",
						"r": "_LIBCPP___ALGORITHM_PSTL_IS_PARITTIONED",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_IS_PARITTIONED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df2de26c5c8fc641606762ab58cfd5f9787cd079"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_MERGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_MERGE_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_MERGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3074100ce17a4bf96fce4771560e9ec72e21e85"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_move.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_MOVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_MOVE_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_MOVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_MOVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12fe79fc4d9c9bb1b75fe4c3bdaf290193e7a328"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_replace.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_REPLACE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_REPLACE_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_REPLACE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_REPLACE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08f59d6a489604c0b6655717bb0cc786805717e9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_rotate_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_ROTATE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_ROTATE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_ROTATE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_ROTATE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b91706ff4e2ac7ee63bc4adb648a2f5395663abc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_SORT_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f46bf6e67944ae170ae839e4a429cf426b9d2fb2"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/pstl_stable_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_PSTL_STABLE_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_PSTL_STABLE_SORT_H",
						"r": "_LIBCPP___ALGORITHM_PSTL_STABLE_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_PSTL_STABLE_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72b422012af3b702d6c094cfacec9d584f68a9d4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_adjacent_find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ADJACENT_FIND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ADJACENT_FIND_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ADJACENT_FIND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ADJACENT_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f8b168bef0c07c6d609435ce8a20274c210f8bc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_all_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ALL_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ALL_OF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ALL_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ALL_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "037398e59bd92bbec25688907ec58c58b06b4075"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_any_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ANY_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ANY_OF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ANY_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ANY_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cc0ce3da92aa944e32db82235602d8b7c92a16f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_binary_search.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_BINARY_SEARCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_BINARY_SEARCH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_BINARY_SEARCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_BINARY_SEARCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d6385d1bca5f5f06a7e67e574964a961211e38a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_clamp.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_CLAMP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_CLAMP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_CLAMP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_CLAMP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "399e268256af16ede4f9a0521725f46d95a0d8d1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_contains.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_CONTAINS_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_CONTAINS_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_CONTAINS_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_CONTAINS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f608b47edad69ef59caa335c64493aba19cb229a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FIND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FIND_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FIND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b6fdbdaaaf5ad31bf8c299a8a2b255384f940c1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_find_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8099849a70619cc808ccf60ad5482dff1bd8794"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee97769d1f02c2e8b318f1e5f8963b70405f58aa"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_copy_backward.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COPY_BACKWARD_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COPY_BACKWARD_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COPY_BACKWARD_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COPY_BACKWARD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff3b6e62687de2a8374065541bacd1306e7eb7fa"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf90ad9d14ac89b017b449822b598ae47524d16d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_copy_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COPY_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COPY_N_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COPY_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COPY_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5f9bb35385b0f208e6dab46368c08d30fcdc2dc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_count.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COUNT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COUNT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COUNT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COUNT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5918131556d97d7a54dd7f90f4d2938cd5bdaee8"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_count_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_COUNT_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_COUNT_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_COUNT_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_COUNT_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a1153686ee2b8991dcda6da25080f204ba40030"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_ends_with.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ENDS_WITH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ENDS_WITH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ENDS_WITH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ENDS_WITH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1827876de88519a29ffd6d9dc9f00f6b9a2d140"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_equal.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_EQUAL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_EQUAL_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_EQUAL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_EQUAL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c4c0e29436cc2fbc1f34d75904c57bad8362c890"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_starts_with.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_STARTS_WITH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_STARTS_WITH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_STARTS_WITH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_STARTS_WITH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6e10f44be18a4968e2895e3f756f299d59ef9b9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_mismatch.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MISMATCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MISMATCH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MISMATCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MISMATCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec728fb62579a6a6fd61d1e3b77d60e386679cf5"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_equal_range.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_EQUAL_RANGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_EQUAL_RANGE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_EQUAL_RANGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_EQUAL_RANGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc7cf46d7d3e838c45da13d57b7a85110162a3a8"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_fill.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FILL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FILL_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FILL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FILL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8561e64ed08fa4bb5b7bb5398972b09eb5aeda17"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_fill_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FILL_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FILL_N_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FILL_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FILL_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93fc77a3bf7c7d2f3f831346a38c1f65a8b5a950"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_find_end.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FIND_END_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FIND_END_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FIND_END_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FIND_END_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f525c8a54ea3e667d41ae31985ab9e4745205e0e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_find_first_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FIND_FIRST_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FIND_FIRST_OF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FIND_FIRST_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FIND_FIRST_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "494e2a689a09ca760ad297ad5099dc91f2f384c1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_find_if_not.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_NOT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_NOT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_NOT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FIND_IF_NOT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4fd4413830b92071125df579f28fecc2d8bf6db9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_for_each.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edd8eaa9857012e296b36660fe41b00bef23b11a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_for_each_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_N_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_FOR_EACH_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ba26245e1ea4d166c13280dea88db5cc720ba56"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_generate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_GENERATE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_GENERATE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_GENERATE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_GENERATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36b7423866667867894845d6d31eb91ac66477dd"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_generate_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_GENERATE_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_GENERATE_N_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_GENERATE_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_GENERATE_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cb5f5cba5e90fe0c752889710ab0c7a6f7e3d58"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_includes.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_INCLUDES_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_INCLUDES_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_INCLUDES_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_INCLUDES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "58c95c389c695af548ab0cb80f253f43ff11a970"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_inplace_merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_INPLACE_MERGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_INPLACE_MERGE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_INPLACE_MERGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_INPLACE_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbc3d88cf9f8f1f1cbb27c5d4a954a5b5ab95ed3"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c44937d2cba78111eb7b307b70b32812d6ef9b7d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_heap_until.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_UNTIL_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_UNTIL_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_UNTIL_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_IS_HEAP_UNTIL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f19e4918711cad3e19aac317a242d6eb7e141502"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_partitioned.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_IS_PARTITIONED_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_IS_PARTITIONED_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_IS_PARTITIONED_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_IS_PARTITIONED_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39dac043bbbc9bc11b4db7de436a50e680b14676"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_IS_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_IS_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_IS_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_IS_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "132a035e575c376a08964ee11ce906b3dc994a26"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_sorted.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_H",
						"t": "",
						"i": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_H",
						"r": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_H",
						"s": "",
						"u": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a0a9f524c116bdcdd5acd5a463a8825a5f004dfb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_is_sorted_until.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_UNTIL_H",
						"t": "",
						"i": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_UNTIL_H",
						"r": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_UNTIL_H",
						"s": "",
						"u": "_LIBCPP__ALGORITHM_RANGES_IS_SORTED_UNTIL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e812dfa6e7d4c3f82af4b1856cf4dc145c5d1d52"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_lexicographical_compare.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_LEXICOGRAPHICAL_COMPARE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_LEXICOGRAPHICAL_COMPARE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_LEXICOGRAPHICAL_COMPARE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_LEXICOGRAPHICAL_COMPARE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0cb805364dd9bfa6909b90a9e29fc7b407146741"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_lower_bound.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_LOWER_BOUND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_LOWER_BOUND_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_LOWER_BOUND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_LOWER_BOUND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18f03d24978af387979fbf779dc9f070abe5948c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_make_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MAKE_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MAKE_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MAKE_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MAKE_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83cf07f2355a49ebed7dacb12e18046970cdaf5a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_max.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MAX_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MAX_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MAX_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MAX_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05494b28c40e7ea0e563ef41c511a73b43af88b0"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_min_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MIN_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MIN_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MIN_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MIN_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c1e1f5d08f4ba0556b37d675e7425a3808b99bf"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_max_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MAX_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MAX_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MAX_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MAX_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8f01d79ae0df04d0421f2fd3912b2d4b006bee9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MERGE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MERGE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MERGE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7842aefff2b88eff6b6f470103c34c5e531e6aa2"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_min.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MIN_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MIN_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MIN_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MIN_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9dedfe3abb6bd3baf79478bed3e4d5dc509dbf23"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_minmax.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MINMAX_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MINMAX_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MINMAX_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MINMAX_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d8edf533f1250fc4a1a4a5f7b69ab20c297287a9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_minmax_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MINMAX_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MINMAX_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MINMAX_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MINMAX_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f96df25092e99d78878db9bf40d52ddd50b0d19b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_move.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MOVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MOVE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MOVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MOVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a9ff6e521a62d50f1fe8b6746d84777e3ef2e46"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_move_backward.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_MOVE_BACKWARD_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_MOVE_BACKWARD_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_MOVE_BACKWARD_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_MOVE_BACKWARD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3313afa9f3447f303d40eab5cbe5f71097f71f98"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_next_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_NEXT_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_NEXT_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_NEXT_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_NEXT_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c07de50837f820d5554ecd057f96dc75b59ab7e3"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_none_of.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_NONE_OF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_NONE_OF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_NONE_OF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_NONE_OF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cc4a45e7564ff3aacbc99016f089f8a9476b7cb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_nth_element.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_NTH_ELEMENT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_NTH_ELEMENT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_NTH_ELEMENT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_NTH_ELEMENT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "811514f70d1b823cd1a96a763abc7f36ad6e8d15"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_partial_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45753097a654cc817195676f6fd0ed2b0c65669f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_partial_sort_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PARTIAL_SORT_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fbb64dd502f473b89c844090319f704d56153f78"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PARTITION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PARTITION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PARTITION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20ad1e4181a229381d41fd6e938faa705fca7597"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_partition_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PARTITION_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PARTITION_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PARTITION_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PARTITION_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd51f7041e4c586b01a66ac88693c1dc1857d177"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_partition_point.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PARTITION_POINT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PARTITION_POINT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PARTITION_POINT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PARTITION_POINT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb6c1864fa2b43be0521df6b5fa4bf1c343019a5"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_pop_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_POP_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_POP_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_POP_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_POP_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e373c73caf521de387a59b1435239671871b10a1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_prev_permutation.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PREV_PERMUTATION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PREV_PERMUTATION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PREV_PERMUTATION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PREV_PERMUTATION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35c9535ca0c4e4bb4e5b7437aac6e47374a3e611"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_push_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_PUSH_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_PUSH_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_PUSH_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_PUSH_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "801ae2106ae07514d31a5fb2cecb765b5cbc5482"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_remove.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REMOVE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REMOVE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REMOVE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REMOVE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ea6f65f6ac8eb294338ff5bf5a28408cbe09f01"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_remove_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REMOVE_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REMOVE_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REMOVE_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REMOVE_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ee60bf46a1f641e45221b6c4dc745ff34a585cd"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_remove_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10323c3ae2589a6962a481dd31c8d3047c6f6e58"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_remove_copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REMOVE_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e5542317367627ab83a651a7dc5853fb3287d0c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/remove_copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REMOVE_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REMOVE_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_REMOVE_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REMOVE_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f176387c1b140d13d0f916b45dd39d76adb52e68"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_copy_if",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator remove_copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred)",
						"s": "std::__1",
						"u": "REMOVE_COPY_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7b13cf9781beaf7dbb4cadcb9d8e33c60e98a3c"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_replace.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REPLACE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REPLACE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REPLACE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REPLACE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7d0a3f36b5e4a5266401d3b849f307e9a6f8466"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_replace_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REPLACE_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REPLACE_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REPLACE_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REPLACE_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f667a04422dfa8443b33db7f4eecc7e26f06331f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_replace_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1abb47f22c463fb11b47b1c7da27434afe1f1528"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_replace_copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REPLACE_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c0a166cf2567f040ab981445a473de17e8d59e5b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_reverse.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REVERSE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REVERSE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REVERSE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REVERSE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7317f852f5553fc727d69dba61d97249f9ffe81d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_reverse_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_REVERSE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_REVERSE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_REVERSE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_REVERSE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "005aed74e65c2f0edf276ba149f1708d539bc1b2"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_rotate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ROTATE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ROTATE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ROTATE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ROTATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5599b249da2b73b65bc04c9839f857578b068d4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_rotate_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_ROTATE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_ROTATE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_ROTATE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_ROTATE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4912a4164d4d6f0f6f5450091de349ed855e049"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_sample.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SAMPLE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SAMPLE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SAMPLE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SAMPLE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4bdaa9813fc1fbe0cf6fab3f8af8e2cdb5ba493"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/sample.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SAMPLE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SAMPLE_H",
						"r": "_LIBCPP___ALGORITHM_SAMPLE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SAMPLE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ee8b7f313c82c91bad2954439efbf376b1cd78e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sample",
						"t": "_SampleIterator (_PopulationIterator, _PopulationSentinel, _SampleIterator, _Distance, _UniformRandomNumberGenerator &, input_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _PopulationIterator, class _PopulationSentinel, class _SampleIterator, class _Distance, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _SampleIterator __sample(_PopulationIterator __first, _PopulationSentinel __last, _SampleIterator __output_iter, _Distance __n, _UniformRandomNumberGenerator& __g, input_iterator_tag)",
						"s": "std::__1",
						"u": "__SAMPLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cc816382dde7ccbda61e6664aa957bc76fab161"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sample",
						"t": "_SampleIterator (_PopulationIterator, _PopulationSentinel, _SampleIterator, _Distance, _UniformRandomNumberGenerator &, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _PopulationIterator, class _PopulationSentinel, class _SampleIterator, class _Distance, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _SampleIterator __sample(_PopulationIterator __first, _PopulationSentinel __last, _SampleIterator __output_iter, _Distance __n, _UniformRandomNumberGenerator& __g, forward_iterator_tag)",
						"s": "std::__1",
						"u": "__SAMPLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52895176bb6491b9e8463e1ecaf652505156d623"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__sample",
						"t": "_SampleIterator (_PopulationIterator, _PopulationSentinel, _SampleIterator, _Distance, _UniformRandomNumberGenerator &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _PopulationIterator, class _PopulationSentinel, class _SampleIterator, class _Distance, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _SampleIterator __sample(_PopulationIterator __first, _PopulationSentinel __last, _SampleIterator __output_iter, _Distance __n, _UniformRandomNumberGenerator& __g)",
						"s": "std::__1",
						"u": "__SAMPLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c6f31dfb8ed82900ab051be8b48b162f0c7d536"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sample",
						"t": "_SampleIterator (_PopulationIterator, _PopulationIterator, _SampleIterator, _Distance, _UniformRandomNumberGenerator &&)",
						"i": "std::__1::",
						"r": "template <class _PopulationIterator, class _SampleIterator, class _Distance, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _SampleIterator sample(_PopulationIterator __first, _PopulationIterator __last, _SampleIterator __output_iter, _Distance __n, _UniformRandomNumberGenerator&& __g)",
						"s": "std::__1",
						"u": "SAMPLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bea964eaef4e0a3165f47d75df74d6ffdcf278ef"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/uniform_random_bit_generator_adaptor.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_UNIFORM_RANDOM_BIT_GENERATOR_ADAPTOR_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_UNIFORM_RANDOM_BIT_GENERATOR_ADAPTOR_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_UNIFORM_RANDOM_BIT_GENERATOR_ADAPTOR_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_UNIFORM_RANDOM_BIT_GENERATOR_ADAPTOR_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57c4279293760d14a52cb39edc577ed381f13550"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_search.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_LIBCPP___ALGORITHM_RANGES_SEARCH_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SEARCH_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SEARCH_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SEARCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "131c981939efdc0d900586dba32d92751910c7f1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_search_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SEARCH_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SEARCH_N_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SEARCH_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SEARCH_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "24918bde85b2b9ff2cb852f0c915ae6a6778e751"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/search_n.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SEARCH_N_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SEARCH_N_H",
						"r": "_LIBCPP___ALGORITHM_SEARCH_N_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SEARCH_N_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0431ec828b5493ec250e81536d978a65aa90254b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_forward_impl",
						"t": "pair<_Iter, _Iter> (_Iter, _Sent, _SizeT, const _Type &, _Pred &, _Proj &)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Pred, class _Iter, class _Sent, class _SizeT, class _Type, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter, _Iter> __search_n_forward_impl(_Iter __first, _Sent __last, _SizeT __count, const _Type& __value, _Pred& __pred, _Proj& __proj)",
						"s": "std::__1",
						"u": "__SEARCH_N_FORWARD_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25b292da6b8c1fcbf4afea0ecf2451b08e1b7e92"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_random_access_impl",
						"t": "std::pair<_Iter, _Iter> (_Iter, _Sent, _SizeT, const _Type &, _Pred &, _Proj &, _DiffT)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Pred, class _Iter, class _Sent, class _SizeT, class _Type, class _Proj, class _DiffT> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr std::pair<_Iter, _Iter> __search_n_random_access_impl(_Iter __first, _Sent __last, _SizeT __count, const _Type& __value, _Pred& __pred, _Proj& __proj, _DiffT __size1)",
						"s": "std::__1",
						"u": "__SEARCH_N_RANDOM_ACCESS_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "758eca07266d53c6534231269c20c29c285470dc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_impl",
						"t": "pair<_Iter, _Iter> (_Iter, _Sent, _DiffT, const _Type &, _Pred &, _Proj &, __enable_if_t<__has_random_access_iterator_category<_Iter>::value> *)",
						"i": "std::__1::",
						"r": "template <class _Iter, class _Sent, class _DiffT, class _Type, class _Pred, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter, _Iter> __search_n_impl(_Iter __first, _Sent __last, _DiffT __count, const _Type& __value, _Pred& __pred, _Proj& __proj, __enable_if_t<__has_random_access_iterator_category<_Iter>::value> *= nullptr)",
						"s": "std::__1",
						"u": "__SEARCH_N_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a890b2fe4430f6edae00b809df316ad3c518b4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_impl",
						"t": "pair<_Iter1, _Iter1> (_Iter1, _Sent1, _DiffT, const _Type &, _Pred &, _Proj &, __enable_if_t<__has_forward_iterator_category<_Iter1>::value && !__has_random_access_iterator_category<_Iter1>::value> *)",
						"i": "std::__1::",
						"r": "template <class _Iter1, class _Sent1, class _DiffT, class _Type, class _Pred, class _Proj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr pair<_Iter1, _Iter1> __search_n_impl(_Iter1 __first, _Sent1 __last, _DiffT __count, const _Type& __value, _Pred& __pred, _Proj& __proj, __enable_if_t<__has_forward_iterator_category<_Iter1>::value&& !__has_random_access_iterator_category<_Iter1>::value> *= nullptr)",
						"s": "std::__1",
						"u": "__SEARCH_N_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d86ff9406d281727607a42cf61c9eb48813fbeb1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator search_n(_ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "SEARCH_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ebc75989048f2d0678adb2c80d4b0d1cea12b96"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Size, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator search_n(_ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "SEARCH_N",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2019927cb6c9b2441cfb76ec936c50f3804fbbce"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_set_difference.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SET_DIFFERENCE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SET_DIFFERENCE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SET_DIFFERENCE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SET_DIFFERENCE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b3df1aea8aa2b74c69b4662de9174ef9d14b698"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/set_difference.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SET_DIFFERENCE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SET_DIFFERENCE_H",
						"r": "_LIBCPP___ALGORITHM_SET_DIFFERENCE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SET_DIFFERENCE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cea0cdd16d97146b9d761aa38cd4f52eb9c10625"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_difference",
						"t": "pair<__remove_cvref_t<_InIter1>, __remove_cvref_t<_OutIter>> (_InIter1 &&, _Sent1 &&, _InIter2 &&, _Sent2 &&, _OutIter &&, _Comp &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Comp, class _InIter1, class _Sent1, class _InIter2, class _Sent2, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<__remove_cvref_t<_InIter1>, __remove_cvref_t<_OutIter>> __set_difference(_InIter1&& __first1, _Sent1&& __last1, _InIter2&& __first2, _Sent2&& __last2, _OutIter&& __result, _Comp&& __comp)",
						"s": "std::__1",
						"u": "__SET_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2b6c0a2d1d9e52999219da7fb20dcd8150bb108"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "SET_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "751a1bbe2a3d798cbbfa64567968f8862e9a259f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)",
						"s": "std::__1",
						"u": "SET_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4eb9e352bd907cac5320c6089a457e165039d734"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_set_intersection.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SET_INTERSECTION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SET_INTERSECTION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SET_INTERSECTION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SET_INTERSECTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e03122f922fd6f14e58b79495cfe651aec0464ea"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/set_intersection.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SET_INTERSECTION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SET_INTERSECTION_H",
						"r": "_LIBCPP___ALGORITHM_SET_INTERSECTION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SET_INTERSECTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b11547e724813140f3bdb9d7043eaf765e4bd69a"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_intersection_result",
						"t": "",
						"i": "std::__1::__set_intersection_result",
						"r": "template <class _InIter1, class _InIter2, class _OutIter> __set_intersection_result",
						"s": "std::__1",
						"u": "__SET_INTERSECTION_RESULT",
						"q": "std::__1::__set_intersection_result",
						"w": "STD::__1::__SET_INTERSECTION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69c7ee817ea2e9bf9ea46ef41a4e3e18c8e46d64"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in1_",
						"t": "_InIter1",
						"i": "std::__1::__set_intersection_result::__in1_",
						"r": "_InIter1 __in1_",
						"s": "std::__1",
						"u": "__IN1_",
						"q": "std::__1::__set_intersection_result",
						"w": "STD::__1::__SET_INTERSECTION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93d219bbe32332c9402cb4058a0e4f0a4756d8b2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in2_",
						"t": "_InIter2",
						"i": "std::__1::__set_intersection_result::__in2_",
						"r": "_InIter2 __in2_",
						"s": "std::__1",
						"u": "__IN2_",
						"q": "std::__1::__set_intersection_result",
						"w": "STD::__1::__SET_INTERSECTION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "894c9f590d9edca485850b4e0eaf79172c879777"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__out_",
						"t": "_OutIter",
						"i": "std::__1::__set_intersection_result::__out_",
						"r": "_OutIter __out_",
						"s": "std::__1",
						"u": "__OUT_",
						"q": "std::__1::__set_intersection_result",
						"w": "STD::__1::__SET_INTERSECTION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee7417fcde69ae797c51e8b74551dda78ffc0f04"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_intersection_result<_InIter1, _InIter2, _OutIter>",
						"t": "void (_InIter1 &&, _InIter2 &&, _OutIter &&)",
						"i": "std::__1::__set_intersection_result::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_intersection_result<_InIter1, _InIter2, _OutIter>(_InIter1&& __in_iter1, _InIter2&& __in_iter2, _OutIter&& __out_iter)",
						"s": "std::__1",
						"u": "__SET_INTERSECTION_RESULT<_INITER1, _INITER2, _OUTITER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d56d34992557d45d06041ef8c9c11b78724880a5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_intersection",
						"t": "__set_intersection_result<_InIter1, _InIter2, _OutIter> (_InIter1, _Sent1, _InIter2, _Sent2, _OutIter, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InIter1, class _Sent1, class _InIter2, class _Sent2, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_intersection_result<_InIter1, _InIter2, _OutIter> __set_intersection(_InIter1 __first1, _Sent1 __last1, _InIter2 __first2, _Sent2 __last2, _OutIter __result, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__SET_INTERSECTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c12321d2f02b53b3cfbbf96fb95a4fb1ad2be1b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "SET_INTERSECTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "337ab69e63915ce17113e149a9961ac96caa540f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)",
						"s": "std::__1",
						"u": "SET_INTERSECTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2383f21ca592859445177a011a8a141bb9aaf7a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_set_symmetric_difference.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SET_SYMMETRIC_DIFFERENCE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SET_SYMMETRIC_DIFFERENCE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SET_SYMMETRIC_DIFFERENCE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SET_SYMMETRIC_DIFFERENCE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e9b08bf36abd66f7a63b2403ecc3550f57bbe91"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/set_symmetric_difference.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SET_SYMMETRIC_DIFFERENCE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SET_SYMMETRIC_DIFFERENCE_H",
						"r": "_LIBCPP___ALGORITHM_SET_SYMMETRIC_DIFFERENCE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SET_SYMMETRIC_DIFFERENCE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e793495fe8b53190cc95a4749a836ed290c2ca17"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_result",
						"t": "",
						"i": "std::__1::__set_symmetric_difference_result",
						"r": "template <class _InIter1, class _InIter2, class _OutIter> __set_symmetric_difference_result",
						"s": "std::__1",
						"u": "__SET_SYMMETRIC_DIFFERENCE_RESULT",
						"q": "std::__1::__set_symmetric_difference_result",
						"w": "STD::__1::__SET_SYMMETRIC_DIFFERENCE_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f963ca8ea9e908e9b1aa04e597cd66249698ee58"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in1_",
						"t": "_InIter1",
						"i": "std::__1::__set_symmetric_difference_result::__in1_",
						"r": "_InIter1 __in1_",
						"s": "std::__1",
						"u": "__IN1_",
						"q": "std::__1::__set_symmetric_difference_result",
						"w": "STD::__1::__SET_SYMMETRIC_DIFFERENCE_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93d219bbe32332c9402cb4058a0e4f0a4756d8b2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in2_",
						"t": "_InIter2",
						"i": "std::__1::__set_symmetric_difference_result::__in2_",
						"r": "_InIter2 __in2_",
						"s": "std::__1",
						"u": "__IN2_",
						"q": "std::__1::__set_symmetric_difference_result",
						"w": "STD::__1::__SET_SYMMETRIC_DIFFERENCE_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "894c9f590d9edca485850b4e0eaf79172c879777"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__out_",
						"t": "_OutIter",
						"i": "std::__1::__set_symmetric_difference_result::__out_",
						"r": "_OutIter __out_",
						"s": "std::__1",
						"u": "__OUT_",
						"q": "std::__1::__set_symmetric_difference_result",
						"w": "STD::__1::__SET_SYMMETRIC_DIFFERENCE_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee7417fcde69ae797c51e8b74551dda78ffc0f04"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_result<_InIter1, _InIter2, _OutIter>",
						"t": "void (_InIter1 &&, _InIter2 &&, _OutIter &&)",
						"i": "std::__1::__set_symmetric_difference_result::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_symmetric_difference_result<_InIter1, _InIter2, _OutIter>(_InIter1&& __in_iter1, _InIter2&& __in_iter2, _OutIter&& __out_iter)",
						"s": "std::__1",
						"u": "__SET_SYMMETRIC_DIFFERENCE_RESULT<_INITER1, _INITER2, _OUTITER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbe6cf26eb6c892060523f81a4d0210a36d361cd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference",
						"t": "__set_symmetric_difference_result<_InIter1, _InIter2, _OutIter> (_InIter1, _Sent1, _InIter2, _Sent2, _OutIter, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InIter1, class _Sent1, class _InIter2, class _Sent2, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_symmetric_difference_result<_InIter1, _InIter2, _OutIter> __set_symmetric_difference(_InIter1 __first1, _Sent1 __last1, _InIter2 __first2, _Sent2 __last2, _OutIter __result, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__SET_SYMMETRIC_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04ae12ac6d18cf0c0fa05ae2c2ebf61bb232c8fe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a1d80666ed1bd3df2aa1821e0f5d5dd15abfc8c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)",
						"s": "std::__1",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c2baa88cdb952ed4e5d0c6bae89f04e96203852"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_set_union.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SET_UNION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SET_UNION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SET_UNION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SET_UNION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10185f643cf9cab84b23f6cdce6f26659d9b3031"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/set_union.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SET_UNION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SET_UNION_H",
						"r": "_LIBCPP___ALGORITHM_SET_UNION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SET_UNION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "46c86f520504c6bc7406b8cf6c9cedb35eb4b1af"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_union_result",
						"t": "",
						"i": "std::__1::__set_union_result",
						"r": "template <class _InIter1, class _InIter2, class _OutIter> __set_union_result",
						"s": "std::__1",
						"u": "__SET_UNION_RESULT",
						"q": "std::__1::__set_union_result",
						"w": "STD::__1::__SET_UNION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4fc9914a3be28a050bf62ad2fadb4c09983edd03"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in1_",
						"t": "_InIter1",
						"i": "std::__1::__set_union_result::__in1_",
						"r": "_InIter1 __in1_",
						"s": "std::__1",
						"u": "__IN1_",
						"q": "std::__1::__set_union_result",
						"w": "STD::__1::__SET_UNION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93d219bbe32332c9402cb4058a0e4f0a4756d8b2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__in2_",
						"t": "_InIter2",
						"i": "std::__1::__set_union_result::__in2_",
						"r": "_InIter2 __in2_",
						"s": "std::__1",
						"u": "__IN2_",
						"q": "std::__1::__set_union_result",
						"w": "STD::__1::__SET_UNION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "894c9f590d9edca485850b4e0eaf79172c879777"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__out_",
						"t": "_OutIter",
						"i": "std::__1::__set_union_result::__out_",
						"r": "_OutIter __out_",
						"s": "std::__1",
						"u": "__OUT_",
						"q": "std::__1::__set_union_result",
						"w": "STD::__1::__SET_UNION_RESULT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee7417fcde69ae797c51e8b74551dda78ffc0f04"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_union_result<_InIter1, _InIter2, _OutIter>",
						"t": "void (_InIter1 &&, _InIter2 &&, _OutIter &&)",
						"i": "std::__1::__set_union_result::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_union_result<_InIter1, _InIter2, _OutIter>(_InIter1&& __in_iter1, _InIter2&& __in_iter2, _OutIter&& __out_iter)",
						"s": "std::__1",
						"u": "__SET_UNION_RESULT<_INITER1, _INITER2, _OUTITER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82f9d58ce037a7a96962015b0522639ce3ff5007"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_union",
						"t": "__set_union_result<_InIter1, _InIter2, _OutIter> (_InIter1, _Sent1, _InIter2, _Sent2, _OutIter, _Compare &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Compare, class _InIter1, class _Sent1, class _InIter2, class _Sent2, class _OutIter> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __set_union_result<_InIter1, _InIter2, _OutIter> __set_union(_InIter1 __first1, _Sent1 __last1, _InIter2 __first2, _Sent2 __last2, _OutIter __result, _Compare&& __comp)",
						"s": "std::__1",
						"u": "__SET_UNION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dcae6c4bedae3ea8210259a85a0f2bd5a4affd0b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator, class _Compare> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_union(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__1",
						"u": "SET_UNION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9daa7250c3505660366fe97514eb0b7f1ab2c50"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator1, class _InputIterator2, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator set_union(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)",
						"s": "std::__1",
						"u": "SET_UNION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ad5f3c62cc905421a1fc444be3397a97806084d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_shuffle.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SHUFFLE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SHUFFLE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SHUFFLE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SHUFFLE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8bbc0e13bf0dcefe34b9df50746b71e64f3421e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/shuffle.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SHUFFLE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SHUFFLE_H",
						"r": "_LIBCPP___ALGORITHM_SHUFFLE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SHUFFLE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99d78da1797b5d521895c44928da17bd08bc03a6"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__libcpp_debug_randomizer",
						"t": "std::__libcpp_debug_randomizer",
						"i": "std::__libcpp_debug_randomizer",
						"r": "__libcpp_debug_randomizer",
						"s": "std::__1",
						"u": "__LIBCPP_DEBUG_RANDOMIZER",
						"q": "std::__libcpp_debug_randomizer",
						"w": "STD::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b46ab69b25f12f98513e417c5b5fcc6cc31a3534"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__libcpp_debug_randomizer",
						"t": "void ()",
						"i": "std::__1::__libcpp_debug_randomizer::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __libcpp_debug_randomizer()",
						"s": "std::__1",
						"u": "__LIBCPP_DEBUG_RANDOMIZER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7809548bd0c78d43281bcb0b24d482a54618571"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__libcpp_debug_randomizer::result_type",
						"i": "std::__libcpp_debug_randomizer::result_type",
						"r": "typedef uint_fast32_t result_type",
						"s": "std::__1",
						"u": "RESULT_TYPE",
						"q": "std::__libcpp_debug_randomizer",
						"w": "STD::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "659045f47f69d0b61f6cfffb26372a5b9e4aa4ea"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_Min",
						"t": "const result_type",
						"i": "std::__1::__libcpp_debug_randomizer::_Min",
						"r": "static const result_type _Min",
						"s": "std::__1",
						"u": "_MIN",
						"q": "std::__1::__libcpp_debug_randomizer",
						"w": "STD::__1::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38e85ad352ac18dc5d86fb99c212df2fcaa3f378"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_Max",
						"t": "const result_type",
						"i": "std::__1::__libcpp_debug_randomizer::_Max",
						"r": "static const result_type _Max",
						"s": "std::__1",
						"u": "_MAX",
						"q": "std::__1::__libcpp_debug_randomizer",
						"w": "STD::__1::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c071c9a0a6bb673be056d9e9c372bae786c4fb35"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "result_type ()",
						"i": "std::__1::__libcpp_debug_randomizer::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) result_type operator()()",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "440a04dd18b986932c01d6a00df1ca46984dd6cd"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "min",
						"t": "result_type ()",
						"i": "std::__1::__libcpp_debug_randomizer::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr result_type min()",
						"s": "std::__1",
						"u": "MIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45c8cd7e6db22ec5e3a17ee067466c4230c6eaf5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "max",
						"t": "result_type ()",
						"i": "std::__1::__libcpp_debug_randomizer::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static constexpr result_type max()",
						"s": "std::__1",
						"u": "MAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "108c4586c3f1651946b0fad8f29097a2a9299de1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__state_",
						"t": "uint_fast64_t",
						"i": "std::__1::__libcpp_debug_randomizer::__state_",
						"r": "uint_fast64_t __state_",
						"s": "std::__1",
						"u": "__STATE_",
						"q": "std::__1::__libcpp_debug_randomizer",
						"w": "STD::__1::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3277d0c70e2bccb7326fd8e7915f20b834bd2b70"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__inc_",
						"t": "uint_fast64_t",
						"i": "std::__1::__libcpp_debug_randomizer::__inc_",
						"r": "uint_fast64_t __inc_",
						"s": "std::__1",
						"u": "__INC_",
						"q": "std::__1::__libcpp_debug_randomizer",
						"w": "STD::__1::__LIBCPP_DEBUG_RANDOMIZER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45e26ef0f3e80aa0b62748eb3a0aaf65cd325a0b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__seed",
						"t": "uint_fast64_t ()",
						"i": "std::__1::__libcpp_debug_randomizer::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static uint_fast64_t __seed()",
						"s": "std::__1",
						"u": "__SEED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62cf548acfc6f56e3a124210ea26db7f11a708a6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__shuffle",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _Sentinel, _UniformRandomNumberGenerator &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _RandomAccessIterator, class _Sentinel, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _RandomAccessIterator __shuffle(_RandomAccessIterator __first, _Sentinel __last_sentinel, _UniformRandomNumberGenerator&& __g)",
						"s": "std::__1",
						"u": "__SHUFFLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2a526bae58bb9e1d74d270795ae3bad9450b779"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "shuffle",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _UniformRandomNumberGenerator &&)",
						"i": "std::__1::",
						"r": "template <class _RandomAccessIterator, class _UniformRandomNumberGenerator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last, _UniformRandomNumberGenerator&& __g)",
						"s": "std::__1",
						"u": "SHUFFLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca47f7a687e06aec2c31accce18d1bc98dcc2a5d"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SORT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e80be54c38f71d445f9393beae88536d426e26dd"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_sort_heap.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SORT_HEAP_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SORT_HEAP_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SORT_HEAP_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SORT_HEAP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8fd70c3f6d4f79ef0926b2655f92829981918735"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_stable_partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_STABLE_PARTITION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_STABLE_PARTITION_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_STABLE_PARTITION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_STABLE_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cab61cecd54b7d246294ccad281b6446601e5efb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/stable_partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_STABLE_PARTITION_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_STABLE_PARTITION_H",
						"r": "_LIBCPP___ALGORITHM_STABLE_PARTITION_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_STABLE_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f80d8ec5bdc015ceabb8b85ecc4a2a3624a5422d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_partition_impl",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate, _Distance, _Pair, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Predicate, class _ForwardIterator, class _Distance, class _Pair> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator __stable_partition_impl(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pair __p, forward_iterator_tag __fit)",
						"s": "std::__1",
						"u": "__STABLE_PARTITION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ccf7cf3ae670ed6a53de0ebeb4a8f283da237e6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_partition_impl",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate, forward_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Predicate, class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator __stable_partition_impl(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, forward_iterator_tag)",
						"s": "std::__1",
						"u": "__STABLE_PARTITION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b5a264dff2090f7445e08be609960af16b6519f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_partition_impl",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _Predicate, _Distance, _Pair, bidirectional_iterator_tag)",
						"i": "std::__1::__stable_partition_impl(_BidirectionalIterator,_BidirectionalIterator,_Predicate,_Distance,_Pair,bidirectional_iterator_tag)",
						"r": "template <class _AlgPolicy, class _Predicate, class _BidirectionalIterator, class _Distance, class _Pair> _BidirectionalIterator __stable_partition_impl(_BidirectionalIterator __first, _BidirectionalIterator __last, _Predicate __pred, _Distance __len, _Pair __p, bidirectional_iterator_tag __bit)",
						"s": "std::__1",
						"u": "__STABLE_PARTITION_IMPL",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13c7ad537073d7516439e80ffc2d00743b40e66d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_partition_impl",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _Predicate, bidirectional_iterator_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Predicate, class _BidirectionalIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _BidirectionalIterator __stable_partition_impl(_BidirectionalIterator __first, _BidirectionalIterator __last, _Predicate __pred, bidirectional_iterator_tag)",
						"s": "std::__1",
						"u": "__STABLE_PARTITION_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d13f1612beda1ad418589d598192a18c03b2632"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__stable_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate &&, _IterCategory)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Predicate, class _ForwardIterator, class _IterCategory> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator __stable_partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate&& __pred, _IterCategory __iter_category)",
						"s": "std::__1",
						"u": "__STABLE_PARTITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "859301f3ec83c04da7c5b672102596fd2dd3c230"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Predicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator stable_partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std::__1",
						"u": "STABLE_PARTITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c60a36d460318c222f8fefb2c269fd554aefcbb4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_stable_sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_STABLE_SORT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_STABLE_SORT_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_STABLE_SORT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_STABLE_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "68ba5a9d2751ac219a2669b3098033ca36842bb3"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_swap_ranges.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_SWAP_RANGES_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_SWAP_RANGES_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_SWAP_RANGES_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_SWAP_RANGES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f269f875d01232db366a0e1f7adab79714f45deb"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_transform.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_TRANSFORM_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_TRANSFORM_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_TRANSFORM_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_TRANSFORM_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "367f92eaef6ecf4b8b0c4e8fc1a2f0c7d803e4be"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_unique.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ac777010915691b7e47bb0b463da5b8d6e0fe22"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/unique.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_UNIQUE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_UNIQUE_H",
						"r": "_LIBCPP___ALGORITHM_UNIQUE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_UNIQUE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ef7ae415097068555e8ee20ac01f29911180e49"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique",
						"t": "std::pair<_Iter, _Iter> (_Iter, _Sent, _BinaryPredicate &&)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _Iter, class _Sent, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) std::pair<_Iter, _Iter> __unique(_Iter __first, _Sent __last, _BinaryPredicate&& __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "__UNIQUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4671ae14acd33529c200ded48463e635af3fea90"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator unique(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "UNIQUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "58a4bdb35bf081536bf7d25ce90984adec376f1e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _ForwardIterator unique(_ForwardIterator __first, _ForwardIterator __last) [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "UNIQUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9776ca77561ec34cb40b2069668c7585e43c5435"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_unique_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_UNIQUE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e77123692a37c98493c3d35c9216a8da4b76045"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/unique_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_UNIQUE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_UNIQUE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_UNIQUE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_UNIQUE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0aa8b2abebdc25608bed5fe67d5c97a4d470f163"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__reread_from_input_tag",
						"t": "std::__unique_copy_tags::__reread_from_input_tag",
						"i": "std::__unique_copy_tags::__reread_from_input_tag",
						"r": "__reread_from_input_tag",
						"s": "std::__1::__unique_copy_tags",
						"u": "__REREAD_FROM_INPUT_TAG",
						"q": "std::__unique_copy_tags::__reread_from_input_tag",
						"w": "STD::__UNIQUE_COPY_TAGS::__REREAD_FROM_INPUT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "965cd0f631ed3bf39e0f2aa7aabe98f50cfe3deb"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__reread_from_output_tag",
						"t": "std::__unique_copy_tags::__reread_from_output_tag",
						"i": "std::__unique_copy_tags::__reread_from_output_tag",
						"r": "__reread_from_output_tag",
						"s": "std::__1::__unique_copy_tags",
						"u": "__REREAD_FROM_OUTPUT_TAG",
						"q": "std::__unique_copy_tags::__reread_from_output_tag",
						"w": "STD::__UNIQUE_COPY_TAGS::__REREAD_FROM_OUTPUT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da1e12e75c71546bb50cc642287635c5bf941604"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__read_from_tmp_value_tag",
						"t": "std::__unique_copy_tags::__read_from_tmp_value_tag",
						"i": "std::__unique_copy_tags::__read_from_tmp_value_tag",
						"r": "__read_from_tmp_value_tag",
						"s": "std::__1::__unique_copy_tags",
						"u": "__READ_FROM_TMP_VALUE_TAG",
						"q": "std::__unique_copy_tags::__read_from_tmp_value_tag",
						"w": "STD::__UNIQUE_COPY_TAGS::__READ_FROM_TMP_VALUE_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3decb49d1db80e6364d2d18cb6d01cd25fa5b98"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique_copy",
						"t": "pair<_InputIterator, _OutputIterator> (_InputIterator, _Sent, _OutputIterator, _BinaryPredicate &&, __unique_copy_tags::__read_from_tmp_value_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BinaryPredicate, class _InputIterator, class _Sent, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator, _OutputIterator> __unique_copy(_InputIterator __first, _Sent __last, _OutputIterator __result, _BinaryPredicate&& __pred, __unique_copy_tags::__read_from_tmp_value_tag)",
						"s": "std::__1",
						"u": "__UNIQUE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5be7e8bdd8cece661cf429b85742e1a5d2fcb55f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique_copy",
						"t": "pair<_ForwardIterator, _OutputIterator> (_ForwardIterator, _Sent, _OutputIterator, _BinaryPredicate &&, __unique_copy_tags::__reread_from_input_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BinaryPredicate, class _ForwardIterator, class _Sent, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator, _OutputIterator> __unique_copy(_ForwardIterator __first, _Sent __last, _OutputIterator __result, _BinaryPredicate&& __pred, __unique_copy_tags::__reread_from_input_tag)",
						"s": "std::__1",
						"u": "__UNIQUE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4aee70914d8b53e10a46681f7db97446e112c431"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique_copy",
						"t": "pair<_InputIterator, _InputAndOutputIterator> (_InputIterator, _Sent, _InputAndOutputIterator, _BinaryPredicate &&, __unique_copy_tags::__reread_from_output_tag)",
						"i": "std::__1::",
						"r": "template <class _AlgPolicy, class _BinaryPredicate, class _InputIterator, class _Sent, class _InputAndOutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_InputIterator, _InputAndOutputIterator> __unique_copy(_InputIterator __first, _Sent __last, _InputAndOutputIterator __result, _BinaryPredicate&& __pred, __unique_copy_tags::__reread_from_output_tag)",
						"s": "std::__1",
						"u": "__UNIQUE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54ebbdb799f3ac5625a171652800cfc609dddecb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _BinaryPredicate)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _BinaryPredicate> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryPredicate __pred)",
						"s": "std::__1",
						"u": "UNIQUE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b106046bb8ead3641b7603f98b5c4e812839a082"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result)",
						"s": "std::__1",
						"u": "UNIQUE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf7d4edf9fd311629f907ece50f4773faf7ae029"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/ranges_upper_bound.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_RANGES_UPPER_BOUND_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_RANGES_UPPER_BOUND_H",
						"r": "_LIBCPP___ALGORITHM_RANGES_UPPER_BOUND_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_RANGES_UPPER_BOUND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7402a3a29c02dbfd6d45c844eac1be4cf107425"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/remove_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_LIBCPP___ALGORITHM_REMOVE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REMOVE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_REMOVE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REMOVE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a725db6ccedb4fe89249189bb579ed40539f2e50"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_copy",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator remove_copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __value)",
						"s": "std::__1",
						"u": "REMOVE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "02ada4f22bbb462b50ebd713624e66cf6bab2629"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/replace.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REPLACE_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REPLACE_H",
						"r": "_LIBCPP___ALGORITHM_REPLACE_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REPLACE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "180e63837b433d859553cd174845f01343e1b4fb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void replace(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std::__1",
						"u": "REPLACE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cb6d764164263c56816e86f0c924a67db23986e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/replace_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REPLACE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REPLACE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_REPLACE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REPLACE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4003b45399f5a75b73b65b8a0facaf0a898a3d6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_copy",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, const _Tp &, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator replace_copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std::__1",
						"u": "REPLACE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "343d7ca0ffd4301a4ab1b4e5c01c3ec32c78a46f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/replace_copy_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REPLACE_COPY_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REPLACE_COPY_IF_H",
						"r": "_LIBCPP___ALGORITHM_REPLACE_COPY_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REPLACE_COPY_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c55e399af976697a1531dfbed82ad37ff7b4d4ea"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_copy_if",
						"t": "_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _InputIterator, class _OutputIterator, class _Predicate, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator replace_copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred, const _Tp& __new_value)",
						"s": "std::__1",
						"u": "REPLACE_COPY_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1785ce0e97e387722e51454d347db7d2d1b5e0b1"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/replace_if.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REPLACE_IF_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REPLACE_IF_H",
						"r": "_LIBCPP___ALGORITHM_REPLACE_IF_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REPLACE_IF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2626ec40a2a97cc505fcf9b5197fba1f128efa48"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_ForwardIterator, _ForwardIterator, _Predicate, const _Tp &)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _Predicate, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void replace_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, const _Tp& __new_value)",
						"s": "std::__1",
						"u": "REPLACE_IF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06ec51cdc22d9a3a8feb821910417588adcc0516"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/reverse_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_REVERSE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_REVERSE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_REVERSE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_REVERSE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be6bb016ceb56ea077f2707c9183b536fd24be96"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reverse_copy",
						"t": "_OutputIterator (_BidirectionalIterator, _BidirectionalIterator, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _BidirectionalIterator, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __result)",
						"s": "std::__1",
						"u": "REVERSE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18759b917e93976086834f4c33aec8ce37c1b770"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/rotate_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_ROTATE_COPY_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_ROTATE_COPY_H",
						"r": "_LIBCPP___ALGORITHM_ROTATE_COPY_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_ROTATE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60518d1844b20015569843744f7c43b7c9a1f3d2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "rotate_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator)",
						"i": "std::__1::",
						"r": "template <class _ForwardIterator, class _OutputIterator> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _OutputIterator rotate_copy(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result)",
						"s": "std::__1",
						"u": "ROTATE_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39168c83c77c108ddf4c7a3ebc0e95e831069caf"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/shift_left.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SHIFT_LEFT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SHIFT_LEFT_H",
						"r": "_LIBCPP___ALGORITHM_SHIFT_LEFT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SHIFT_LEFT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78b8d3b93aba2641aaa49951b93aa88968e3a369"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__algorithm/shift_right.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___ALGORITHM_SHIFT_RIGHT_H",
						"t": "",
						"i": "_LIBCPP___ALGORITHM_SHIFT_RIGHT_H",
						"r": "_LIBCPP___ALGORITHM_SHIFT_RIGHT_H",
						"s": "",
						"u": "_LIBCPP___ALGORITHM_SHIFT_RIGHT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c0636ac77a3a8c8e4a399cc3650dad7256921b9"
							}
						]
					}
				]
			}
		}
	]
}