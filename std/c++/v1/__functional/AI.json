{
	"saved_hash": "e38c159779d7a9c79e1d8d7cf858c8564d9d5f21",
	"files": [
		{
			"key": "c++/v1/__functional/invoke.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_INVOKE_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_INVOKE_H",
						"r": "_LIBCPP___FUNCTIONAL_INVOKE_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_INVOKE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2999d7a2740eb2342f0bf8244243ada70931769a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "invoke",
						"t": "invoke_result_t<_Fn, _Args...> (_Fn &&, _Args &&...) noexcept(is_nothrow_invocable_v<_Fn, _Args...>)",
						"i": "std::__1::",
						"r": "template <class _Fn, class ..._Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) invoke_result_t<_Fn, _Args...> invoke(_Fn&& __f, _Args&&...__args) (is_nothrow_invocable_v<_Fn, _Args...>)",
						"s": "std::__1",
						"u": "INVOKE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ab9922b2eb8ac816fc3e7edf090c8cbb7ba02fc"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/identity.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_IDENTITY_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_IDENTITY_H",
						"r": "_LIBCPP___FUNCTIONAL_IDENTITY_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_IDENTITY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f610318755e99429fa54b6d67c30df3e06c384eb"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_identity",
						"t": "",
						"i": "std::__1::__is_identity",
						"r": "template <class _Tp> __is_identity : false_type",
						"s": "std::__1",
						"u": "__IS_IDENTITY",
						"q": "std::__1::__is_identity",
						"w": "STD::__1::__IS_IDENTITY",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db06ea93b082162ddfe5e8d548dd60249a8c0ba0"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__identity",
						"t": "std::__identity",
						"i": "std::__identity",
						"r": "__identity",
						"s": "std::__1",
						"u": "__IDENTITY",
						"q": "std::__identity",
						"w": "STD::__IDENTITY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2dc39c96e87404280360fb694a0fec91d9b3e80f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp &&(_Tp &&) const noexcept",
						"i": "std::__1::__identity::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp&& operator()(_Tp&& __t) const [[nodiscard(\"\")]]",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "721efcaab75634914be2f1bed9b1c0891708e02b"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::__identity::is_transparent",
						"i": "std::__identity::is_transparent",
						"r": "using is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::__identity",
						"w": "STD::__IDENTITY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b5df0cf64e81936507cefee0910d7f4fc72c042b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_identity",
						"t": "std::__is_identity<__identity>",
						"i": "std::__is_identity",
						"r": "template<> __is_identity<__identity> : true_type",
						"s": "std::__1",
						"u": "__IS_IDENTITY",
						"q": "std::__is_identity",
						"w": "STD::__IS_IDENTITY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d055d446bdad54e990f55561104292826314aef5"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_identity",
						"t": "std::__is_identity<reference_wrapper<__identity>>",
						"i": "std::__is_identity",
						"r": "template<> __is_identity<reference_wrapper<__identity>> : true_type",
						"s": "std::__1",
						"u": "__IS_IDENTITY",
						"q": "std::__is_identity",
						"w": "STD::__IS_IDENTITY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1295467263cf5b4f40128f358e499d67c51d25c8"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_identity",
						"t": "std::__is_identity<reference_wrapper<const __identity>>",
						"i": "std::__is_identity",
						"r": "template<> __is_identity<reference_wrapper<const __identity>> : true_type",
						"s": "std::__1",
						"u": "__IS_IDENTITY",
						"q": "std::__is_identity",
						"w": "STD::__IS_IDENTITY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "944b51bb618ef38e717ef0b253e59cffd0f3155a"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/reference_wrapper.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H",
						"r": "_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c12c7d9c42f9090ed7f4d4f32c53197729dcb22"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reference_wrapper",
						"t": "",
						"i": "std::__1::reference_wrapper",
						"r": "template <class _Tp> reference_wrapper : public __weak_result_type<_Tp>",
						"s": "std::__1",
						"u": "REFERENCE_WRAPPER",
						"q": "std::__1::reference_wrapper",
						"w": "STD::__1::REFERENCE_WRAPPER",
						"y": "std::__1::__weak_result_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f729627f3ba76009644f1eec9040ed094eb8d09c"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::reference_wrapper::type",
						"i": "std::reference_wrapper::type",
						"r": "typedef _Tp type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::reference_wrapper",
						"w": "STD::REFERENCE_WRAPPER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78cc64619d4289f5678dbfdb028da3d5780462ae"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "type *",
						"i": "std::__1::reference_wrapper::__f_",
						"r": "type *__f_",
						"s": "std::__1",
						"u": "__F_",
						"q": "std::__1::reference_wrapper",
						"w": "STD::__1::REFERENCE_WRAPPER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91a468f376d68af03ced165c3ec45a6c920c8e73"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__fun",
						"t": "void (_Tp &) noexcept",
						"i": "std::__1::reference_wrapper::__fun(_Tp&)",
						"r": "static void __fun(_Tp&)",
						"s": "std::__1",
						"u": "__FUN",
						"q": "std::__1::reference_wrapper",
						"w": "STD::__1::REFERENCE_WRAPPER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f8af360a85e5d04f7c2552541c6d7b4a1c3f557"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__fun",
						"t": "void (_Tp &&)",
						"i": "std::__1::reference_wrapper::__fun(_Tp&&)=delete",
						"r": "static void __fun(_Tp&&)",
						"s": "std::__1",
						"u": "__FUN",
						"q": "std::__1::reference_wrapper",
						"w": "STD::__1::REFERENCE_WRAPPER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cb08a13bc77134c24aceb02133239daa85bf173"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reference_wrapper<_Tp>",
						"t": "void (_Up &&) noexcept(noexcept(__fun(std::declval<_Up>())))",
						"i": "std::__1::reference_wrapper::",
						"r": "template <class _Up, class",
						"s": "std::__1",
						"u": "REFERENCE_WRAPPER<_TP>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ebad6fd9af00e2dc87699ef324e39953334c42c3"
							}
						]
					},
					{
						"k": 26,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator type-parameter-0-0 &",
						"t": "type &() const noexcept",
						"i": "std::__1::reference_wrapper::operator type&()const",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) operator type&() const",
						"s": "std::__1",
						"u": "OPERATOR TYPE-PARAMETER-0-0 &",
						"q": "std::__1::reference_wrapper",
						"w": "STD::__1::REFERENCE_WRAPPER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41228e383554b94b293c29bda0c70b4903241021"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get",
						"t": "type &() const noexcept",
						"i": "std::__1::reference_wrapper::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) type& get() const",
						"s": "std::__1",
						"u": "GET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e630cd2c06ccde1eb07554cf5c4904b45c9bbee1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __invoke_of<type &, _ArgTypes...>::type (_ArgTypes &&...) const noexcept(is_nothrow_invocable_v<_Tp &, _ArgTypes...>)",
						"i": "std::__1::reference_wrapper::",
						"r": "template <class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __invoke_of<type&, _ArgTypes...>::type operator()(_ArgTypes&&...__args) const (is_nothrow_invocable_v<_Tp&, _ArgTypes...>)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "980acee3dbec1f2a610b722455896bc7ea19523d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for reference_wrapper>",
						"t": "auto (_Tp &) -> reference_wrapper<_Tp>",
						"i": "std::__1::reference_wrapper(_Tp&)",
						"r": "template <class _Tp> reference_wrapper(_Tp&)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR REFERENCE_WRAPPER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc1a166c9a7c40a6d47070cb403a12c8a06bed82"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ref",
						"t": "reference_wrapper<_Tp> (_Tp &) noexcept",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) reference_wrapper<_Tp> ref(_Tp& __t)",
						"s": "std::__1",
						"u": "REF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78a08471f11c30258a1d884dc700b013a1b227a2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ref",
						"t": "reference_wrapper<_Tp> (reference_wrapper<_Tp>) noexcept",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) reference_wrapper<_Tp> ref(reference_wrapper<_Tp> __t)",
						"s": "std::__1",
						"u": "REF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c47c88d0b19a498d91816779b2637ff855ae1387"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cref",
						"t": "reference_wrapper<const _Tp> (const _Tp &) noexcept",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) reference_wrapper<const _Tp> cref(const _Tp& __t)",
						"s": "std::__1",
						"u": "CREF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26fae9874dcaeaa770b818271b44ff913cb3e00d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cref",
						"t": "reference_wrapper<const _Tp> (reference_wrapper<_Tp>) noexcept",
						"i": "std::__1::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) reference_wrapper<const _Tp> cref(reference_wrapper<_Tp> __t)",
						"s": "std::__1",
						"u": "CREF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0abb07ad0e9ec5d4d456e3e14169048d41ccd9f5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ref",
						"t": "void (const _Tp &&)",
						"i": "std::__1::ref(const _Tp&&)=delete",
						"r": "template <class _Tp> void ref(const _Tp&&)",
						"s": "std::__1",
						"u": "REF",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edd0813cd9ed24fec07c31079777fa635a07f119"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cref",
						"t": "void (const _Tp &&)",
						"i": "std::__1::cref(const _Tp&&)=delete",
						"r": "template <class _Tp> void cref(const _Tp&&)",
						"s": "std::__1",
						"u": "CREF",
						"q": "std::__1",
						"w": "STD::__1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f346721f5b6aa2aea41bcf5745cfec7393b46ee7"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/weak_result_type.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H",
						"r": "_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89770b728f6af3b7f0c38be5873457d9d3e9ce52"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__has_result_type",
						"t": "",
						"i": "std::__1::__has_result_type",
						"r": "template <class _Tp> __has_result_type",
						"s": "std::__1",
						"u": "__HAS_RESULT_TYPE",
						"q": "std::__1::__has_result_type",
						"w": "STD::__1::__HAS_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b16c0ecd5213fa81f01b8ea5fcbb0738b40de5c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__test",
						"t": "false_type (...)",
						"i": "std::__1::__has_result_type::__test(...)",
						"r": "template <class _Up> static false_type __test(...)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__has_result_type",
						"w": "STD::__1::__HAS_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "663dfecf0f50ca064eb52d7804cc95bab02fe03e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__test",
						"t": "true_type (typename _Up::result_type *)",
						"i": "std::__1::__has_result_type::__test(typename _Up::result_type*)",
						"r": "template <class _Up> static true_type __test(typename _Up::result_type *= 0)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__has_result_type",
						"w": "STD::__1::__HAS_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "308fddd64f0e23413b33f2395be7508d90a99f96"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__has_result_type::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__has_result_type",
						"w": "STD::__1::__HAS_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff4e9ec066e97875bfcf2d77a6434961f8fc6510"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__derives_from_unary_function",
						"t": "",
						"i": "std::__1::__derives_from_unary_function",
						"r": "template <class _Tp> __derives_from_unary_function",
						"s": "std::__1",
						"u": "__DERIVES_FROM_UNARY_FUNCTION",
						"q": "std::__1::__derives_from_unary_function",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de5220e8ee32709e238204171bd1aa2baf347205"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__two",
						"t": "std::__derives_from_unary_function::__two",
						"i": "std::__derives_from_unary_function::__two",
						"r": "__two",
						"s": "std::__1",
						"u": "__TWO",
						"q": "std::__derives_from_unary_function::__two",
						"w": "STD::__DERIVES_FROM_UNARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7ddb2ef331f6a71e8f7b44d0907e313458574ef"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lx",
						"t": "char",
						"i": "std::__1::__derives_from_unary_function::__two::__lx",
						"r": "char __lx",
						"s": "std::__1",
						"u": "__LX",
						"q": "std::__1::__derives_from_unary_function::__two",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "432167ef020d75e38b11ee607d8a7fb5c5c90d85"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lxx",
						"t": "char",
						"i": "std::__1::__derives_from_unary_function::__two::__lxx",
						"r": "char __lxx",
						"s": "std::__1",
						"u": "__LXX",
						"q": "std::__1::__derives_from_unary_function::__two",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a82ad33099b0865b17b8b689683a6df2b85f527"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__test",
						"t": "__two (...)",
						"i": "std::__1::__derives_from_unary_function::__test(...)",
						"r": "static __two __test(...)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__derives_from_unary_function",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1c44d49ac3c9420d1e42ec2ac644d3e3d9911d9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__test",
						"t": "__unary_function<_Ap, _Rp> (const volatile __unary_function<_Ap, _Rp> *)",
						"i": "std::__1::__derives_from_unary_function::__test(const volatile __unary_function*)",
						"r": "template <class _Ap, class _Rp> static __unary_function<_Ap, _Rp> __test(const volatile __unary_function<_Ap, _Rp> *)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__derives_from_unary_function",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a7a453264a7620175d47ffea925ce4f827ae0ca"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__derives_from_unary_function::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__derives_from_unary_function",
						"w": "STD::__1::__DERIVES_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bf70ccd236318bf2cb6272828930d2e6df213ec"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__derives_from_unary_function::type",
						"i": "std::__derives_from_unary_function::type",
						"r": "typedef decltype(__test((_Tp *)0)) type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::__derives_from_unary_function",
						"w": "STD::__DERIVES_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59e7c993c67b10eafca0e37bd09446f71465afd1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__derives_from_binary_function",
						"t": "",
						"i": "std::__1::__derives_from_binary_function",
						"r": "template <class _Tp> __derives_from_binary_function",
						"s": "std::__1",
						"u": "__DERIVES_FROM_BINARY_FUNCTION",
						"q": "std::__1::__derives_from_binary_function",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38aeae166c02c41e71b55a46660f61db2f538ca7"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__two",
						"t": "std::__derives_from_binary_function::__two",
						"i": "std::__derives_from_binary_function::__two",
						"r": "__two",
						"s": "std::__1",
						"u": "__TWO",
						"q": "std::__derives_from_binary_function::__two",
						"w": "STD::__DERIVES_FROM_BINARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7ddb2ef331f6a71e8f7b44d0907e313458574ef"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lx",
						"t": "char",
						"i": "std::__1::__derives_from_binary_function::__two::__lx",
						"r": "char __lx",
						"s": "std::__1",
						"u": "__LX",
						"q": "std::__1::__derives_from_binary_function::__two",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "432167ef020d75e38b11ee607d8a7fb5c5c90d85"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lxx",
						"t": "char",
						"i": "std::__1::__derives_from_binary_function::__two::__lxx",
						"r": "char __lxx",
						"s": "std::__1",
						"u": "__LXX",
						"q": "std::__1::__derives_from_binary_function::__two",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION::__TWO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a82ad33099b0865b17b8b689683a6df2b85f527"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__test",
						"t": "__two (...)",
						"i": "std::__1::__derives_from_binary_function::__test(...)",
						"r": "static __two __test(...)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__derives_from_binary_function",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1c44d49ac3c9420d1e42ec2ac644d3e3d9911d9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__test",
						"t": "__binary_function<_A1, _A2, _Rp> (const volatile __binary_function<_A1, _A2, _Rp> *)",
						"i": "std::__1::__derives_from_binary_function::__test(const volatile __binary_function*)",
						"r": "template <class _A1, class _A2, class _Rp> static __binary_function<_A1, _A2, _Rp> __test(const volatile __binary_function<_A1, _A2, _Rp> *)",
						"s": "std::__1",
						"u": "__TEST",
						"q": "std::__1::__derives_from_binary_function",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44c5277c0b8d4284040f8c3209dbae7c851f0c40"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__derives_from_binary_function::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__derives_from_binary_function",
						"w": "STD::__1::__DERIVES_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bf70ccd236318bf2cb6272828930d2e6df213ec"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__derives_from_binary_function::type",
						"i": "std::__derives_from_binary_function::type",
						"r": "typedef decltype(__test((_Tp *)0)) type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::__derives_from_binary_function",
						"w": "STD::__DERIVES_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59e7c993c67b10eafca0e37bd09446f71465afd1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__maybe_derive_from_unary_function",
						"t": "",
						"i": "std::__1::__maybe_derive_from_unary_function",
						"r": "template <class _Tp, bool",
						"s": "std::__1",
						"u": "__MAYBE_DERIVE_FROM_UNARY_FUNCTION",
						"q": "std::__1::__maybe_derive_from_unary_function",
						"w": "STD::__1::__MAYBE_DERIVE_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51575b1c7c0f96722e93a4c7649cf19ef699191e"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__maybe_derive_from_binary_function",
						"t": "",
						"i": "std::__1::__maybe_derive_from_binary_function",
						"r": "template <class _Tp, bool",
						"s": "std::__1",
						"u": "__MAYBE_DERIVE_FROM_BINARY_FUNCTION",
						"q": "std::__1::__maybe_derive_from_binary_function",
						"w": "STD::__1::__MAYBE_DERIVE_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "109f5cadfd1116e3b759e31db976b5a34fefdb6d"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__weak_result_type_imp",
						"t": "",
						"i": "std::__1::__weak_result_type_imp",
						"r": "template <class _Tp, bool",
						"s": "std::__1",
						"u": "__WEAK_RESULT_TYPE_IMP",
						"q": "std::__1::__weak_result_type_imp",
						"w": "STD::__1::__WEAK_RESULT_TYPE_IMP",
						"y": "std::__1::__maybe_derive_from_unary_function;std::__1::__maybe_derive_from_binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34d2c77a499bd95f9743733b9541f99f8db01d7f"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type_imp::result_type",
						"i": "std::__weak_result_type_imp::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type_imp",
						"w": "STD::__WEAK_RESULT_TYPE_IMP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42553d2e589dbb569434ace288e472ac924dbdeb"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__weak_result_type",
						"t": "",
						"i": "std::__1::__weak_result_type",
						"r": "template <class _Tp> __weak_result_type : public __weak_result_type_imp<_Tp>",
						"s": "std::__1",
						"u": "__WEAK_RESULT_TYPE",
						"q": "std::__1::__weak_result_type",
						"w": "STD::__1::__WEAK_RESULT_TYPE",
						"y": "std::__1::__weak_result_type_imp",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "485a49c1eed8f6736a7e6d05f9747c17390bd6a6"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 ()>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (&)()>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (*)()>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...)>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (&)(type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...)>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (*)(type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...)>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...)>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...) const>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...) volatile>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__weak_result_type<type-parameter-0-0 (type-parameter-0-1::*)(type-parameter-0-2, type-parameter-0-3, type-parameter-0-4...) const volatile>::result_type",
						"i": "std::__weak_result_type::result_type",
						"r": "using result_type __attribute__((nodebug)) __attribute__((deprecated(\"\")))",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::__weak_result_type",
						"w": "STD::__WEAK_RESULT_TYPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2cad00e0af333009e8bb53fbd4f508c26427de3"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_return",
						"t": "",
						"i": "std::__1::__invoke_return",
						"r": "template <class _Tp, class ..._Args> __invoke_return",
						"s": "std::__1",
						"u": "__INVOKE_RETURN",
						"q": "std::__1::__invoke_return",
						"w": "STD::__1::__INVOKE_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a167754d80fa64c9c3810e1a4c076bd4ca66b563"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__invoke_return::type",
						"i": "std::__invoke_return::type",
						"r": "typedef decltype(std::__invoke(std::declval<_Tp>(), std::declval<_Args>()...)) type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::__invoke_return",
						"w": "STD::__INVOKE_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ee3a1b991327b26e32221390f3fbe99968f8d2f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/binary_function.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H",
						"r": "_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50e55bc550f238d6ed9ce557196d450f816e4255"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binary_function_keep_layout_base",
						"t": "",
						"i": "std::__1::__binary_function_keep_layout_base",
						"r": "template <class _Arg1, class _Arg2, class _Result> __binary_function_keep_layout_base",
						"s": "std::__1",
						"u": "__BINARY_FUNCTION_KEEP_LAYOUT_BASE",
						"q": "std::__1::__binary_function_keep_layout_base",
						"w": "STD::__1::__BINARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "264c4a421c0af1ef324120f4a41a91a91df637ba"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "first_argument_type",
						"t": "std::__binary_function_keep_layout_base::first_argument_type",
						"i": "std::__binary_function_keep_layout_base::first_argument_type",
						"r": "using first_argument_type __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "FIRST_ARGUMENT_TYPE",
						"q": "std::__binary_function_keep_layout_base",
						"w": "STD::__BINARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3537b2c779f53a0c511c6d84ecd3d8de35b88744"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "second_argument_type",
						"t": "std::__binary_function_keep_layout_base::second_argument_type",
						"i": "std::__binary_function_keep_layout_base::second_argument_type",
						"r": "using second_argument_type __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "SECOND_ARGUMENT_TYPE",
						"q": "std::__binary_function_keep_layout_base",
						"w": "STD::__BINARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "210f27835a430d1dfd7bc17fccc6e69eb6dbc434"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__binary_function_keep_layout_base::result_type",
						"i": "std::__binary_function_keep_layout_base::result_type",
						"r": "using result_type __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "RESULT_TYPE",
						"q": "std::__binary_function_keep_layout_base",
						"w": "STD::__BINARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c724d65ef55b24c3a995c099f84759643a8a8b92"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binary_function",
						"t": "std::__binary_function",
						"i": "std::__binary_function",
						"r": "using __binary_function",
						"s": "std::__1",
						"u": "__BINARY_FUNCTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e28cd93bc20d523ced3058343728372f63701540"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/unary_function.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H",
						"r": "_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a323bca76bdce94824d92de5c7d352e164696727"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unary_function_keep_layout_base",
						"t": "",
						"i": "std::__1::__unary_function_keep_layout_base",
						"r": "template <class _Arg, class _Result> __unary_function_keep_layout_base",
						"s": "std::__1",
						"u": "__UNARY_FUNCTION_KEEP_LAYOUT_BASE",
						"q": "std::__1::__unary_function_keep_layout_base",
						"w": "STD::__1::__UNARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19e6f9d91063a0294207166003baf2fd2e0d320f"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "argument_type",
						"t": "std::__unary_function_keep_layout_base::argument_type",
						"i": "std::__unary_function_keep_layout_base::argument_type",
						"r": "using argument_type __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "ARGUMENT_TYPE",
						"q": "std::__unary_function_keep_layout_base",
						"w": "STD::__UNARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "913a73007c43e22ef4bbe3776972840e83c9a6ff"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__unary_function_keep_layout_base::result_type",
						"i": "std::__unary_function_keep_layout_base::result_type",
						"r": "using result_type __attribute__((deprecated(\"\")))",
						"s": "std::__1",
						"u": "RESULT_TYPE",
						"q": "std::__unary_function_keep_layout_base",
						"w": "STD::__UNARY_FUNCTION_KEEP_LAYOUT_BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa4a21c11b8bcffec7e6453f3760949866b4e76f"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unary_function",
						"t": "std::__unary_function",
						"i": "std::__unary_function",
						"r": "using __unary_function",
						"s": "std::__1",
						"u": "__UNARY_FUNCTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7844f78880b7cc0755ecf920a70b6591941e9017"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/binary_negate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H",
						"r": "_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3d14c32d708ef557149242c39756b86fdeb0f49"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "binary_negate",
						"t": "",
						"i": "std::__1::binary_negate",
						"r": "template <class _Predicate> __attribute__((deprecated(\"\"))) binary_negate : public __binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool>",
						"s": "std::__1",
						"u": "BINARY_NEGATE",
						"q": "std::__1::binary_negate",
						"w": "STD::__1::BINARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b246d326f66cc6bae0cd35698d4da12520092a3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred_",
						"t": "_Predicate",
						"i": "std::__1::binary_negate::__pred_",
						"r": "_Predicate __pred_",
						"s": "std::__1",
						"u": "__PRED_",
						"q": "std::__1::binary_negate",
						"w": "STD::__1::BINARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cde02bb162a34859639c1d353ac85c5e476414b"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "binary_negate<_Predicate>",
						"t": "void (const _Predicate &)",
						"i": "std::__1::binary_negate::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr explicit binary_negate<_Predicate>(const _Predicate& __pred)",
						"s": "std::__1",
						"u": "BINARY_NEGATE<_PREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb6ab04381fecc90fd1423c5f897ae2ac9abe090"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const typename _Predicate::first_argument_type &, const typename _Predicate::second_argument_type &) const",
						"i": "std::__1::binary_negate::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const typename _Predicate::first_argument_type& __x, const typename _Predicate::second_argument_type& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b958e68f1c914e30f79cadf57766333a3550eb5b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "not2",
						"t": "binary_negate<_Predicate> (const _Predicate &)",
						"i": "std::__1::",
						"r": "template <class _Predicate> __attribute__((deprecated(\"\"))) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr binary_negate<_Predicate> not2(const _Predicate& __pred)",
						"s": "std::__1",
						"u": "NOT2",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23b0a44993e7e4788fe6d7168abd35e520397c2b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/bind.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BIND_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BIND_H",
						"r": "_LIBCPP___FUNCTIONAL_BIND_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0ce1eecb559aea7b278399a0b2764c0cc17e6b5"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_bind_expression",
						"t": "",
						"i": "std::__1::is_bind_expression",
						"r": "template <class _Tp> is_bind_expression : _If<_IsSame<_Tp, __remove_cvref_t<_Tp>>::value, false_type, is_bind_expression<__remove_cvref_t<_Tp>>>",
						"s": "std::__1",
						"u": "IS_BIND_EXPRESSION",
						"q": "std::__1::is_bind_expression",
						"w": "STD::__1::IS_BIND_EXPRESSION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d52891a5276fbb3752315e78e0be2dfc7835ec21"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_placeholder",
						"t": "",
						"i": "std::__1::is_placeholder",
						"r": "template <class _Tp> is_placeholder : _If<_IsSame<_Tp, __remove_cvref_t<_Tp>>::value, integral_constant<int, 0>, is_placeholder<__remove_cvref_t<_Tp>>>",
						"s": "std::__1",
						"u": "IS_PLACEHOLDER",
						"q": "std::__1::is_placeholder",
						"w": "STD::__1::IS_PLACEHOLDER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41c00154ac023b73f8362d07aed7752d1c8cbd38"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__ph",
						"t": "",
						"i": "std::__1::placeholders::__ph",
						"r": "template <int _Np> __ph",
						"s": "std::__1::placeholders",
						"u": "__PH",
						"q": "std::__1::placeholders::__ph",
						"w": "STD::__1::PLACEHOLDERS::__PH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fe7ce5ac9865bdfb733685894abe65a16983b9a"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_1",
						"t": "const __ph<1>",
						"i": "std::__1::placeholders::_1",
						"r": "const __ph<1> _1",
						"s": "std::__1::placeholders",
						"u": "_1",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4564660ea566e468e88d87eb40ca2d15526ba858"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_2",
						"t": "const __ph<2>",
						"i": "std::__1::placeholders::_2",
						"r": "const __ph<2> _2",
						"s": "std::__1::placeholders",
						"u": "_2",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32eb60126b9aeaee30b5bd5ba25d49995f9f7388"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_3",
						"t": "const __ph<3>",
						"i": "std::__1::placeholders::_3",
						"r": "const __ph<3> _3",
						"s": "std::__1::placeholders",
						"u": "_3",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad5455f05ca0fd44f9a66731d8c8b50c1c68cb11"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_4",
						"t": "const __ph<4>",
						"i": "std::__1::placeholders::_4",
						"r": "const __ph<4> _4",
						"s": "std::__1::placeholders",
						"u": "_4",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f151d78321fc493c07b84632139c0f41a30dd10"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_5",
						"t": "const __ph<5>",
						"i": "std::__1::placeholders::_5",
						"r": "const __ph<5> _5",
						"s": "std::__1::placeholders",
						"u": "_5",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c31874da9500e2db30903e7f780e978cab509e4"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_6",
						"t": "const __ph<6>",
						"i": "std::__1::placeholders::_6",
						"r": "const __ph<6> _6",
						"s": "std::__1::placeholders",
						"u": "_6",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0753f4917334b3afb0e4fa801b5db8a0d528abdc"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_7",
						"t": "const __ph<7>",
						"i": "std::__1::placeholders::_7",
						"r": "const __ph<7> _7",
						"s": "std::__1::placeholders",
						"u": "_7",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57a3e7e5ba3dbb08de35ffa777482e7379037553"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_8",
						"t": "const __ph<8>",
						"i": "std::__1::placeholders::_8",
						"r": "const __ph<8> _8",
						"s": "std::__1::placeholders",
						"u": "_8",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6ffce5f2539fc9aaa11dd44b7873f732c465358"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_9",
						"t": "const __ph<9>",
						"i": "std::__1::placeholders::_9",
						"r": "const __ph<9> _9",
						"s": "std::__1::placeholders",
						"u": "_9",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe95006ee770456613bb27c67f554e5124e5266d"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_10",
						"t": "const __ph<10>",
						"i": "std::__1::placeholders::_10",
						"r": "const __ph<10> _10",
						"s": "std::__1::placeholders",
						"u": "_10",
						"q": "std::__1::placeholders",
						"w": "STD::__1::PLACEHOLDERS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c08bb1f50fe6504d1050bf9c7163e86d7ec47398"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu",
						"t": "_Tp &(reference_wrapper<_Tp>, _Uj &)",
						"i": "std::__1::",
						"r": "template <class _Tp, class _Uj> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Tp& __mu(reference_wrapper<_Tp> __t, _Uj&)",
						"s": "std::__1",
						"u": "__MU",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3859eb62fb6dd59edc80f1d38aa38c1f4868f99"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu_expand",
						"t": "typename __invoke_of<_Ti &, _Uj...>::type (_Ti &, tuple<_Uj...> &, __tuple_indices<_Indx...>)",
						"i": "std::__1::",
						"r": "template <class _Ti, class ..._Uj, size_t ..._Indx> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __invoke_of<_Ti&, _Uj...>::type __mu_expand(_Ti& __ti, tuple<_Uj...>& __uj, __tuple_indices<_Indx...>)",
						"s": "std::__1",
						"u": "__MU_EXPAND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59db61c85d3cbb905059ea5eb13f06d09f7965b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu",
						"t": "typename __invoke_of<_Ti &, _Uj...>::type (_Ti &, tuple<_Uj...> &)",
						"i": "std::__1::",
						"r": "template <class _Ti, class ..._Uj, __enable_if_t<is_bind_expression<_Ti>::value, int>",
						"s": "std::__1",
						"u": "__MU",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb75c0482d1ba61edaca8f4b8e279fd862581a3d"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mu_return2",
						"t": "",
						"i": "std::__1::__mu_return2",
						"r": "template <bool IsPh, class _Ti, class _Uj> __mu_return2",
						"s": "std::__1",
						"u": "__MU_RETURN2",
						"q": "std::__1::__mu_return2",
						"w": "STD::__1::__MU_RETURN2",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "054416e5e39950eb6ddd6156295b3c4f5737ab52"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return2<true, type-parameter-0-0, type-parameter-0-1>::type",
						"i": "std::__mu_return2::type",
						"r": "typedef typename tuple_element<is_placeholder<_Ti>::value - 1, _Uj>::type type",
						"s": "",
						"u": "TYPE",
						"q": "std::__mu_return2",
						"w": "STD::__MU_RETURN2",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "caf45340b08c4e1404876a3718096be4ccd378f3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu",
						"t": "typename __mu_return2<0 < is_placeholder<_Ti>::value, _Ti, _Uj>::type (_Ti &, _Uj &)",
						"i": "std::__1::",
						"r": "template <class _Ti, class _Uj, __enable_if_t<0 < is_placeholder<_Ti>::value, int>",
						"s": "std::__1",
						"u": "__MU",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "07b69cdd5d29c5ed05383a4c8ee3afb82b4e583e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu",
						"t": "_Ti &(_Ti &, _Uj &)",
						"i": "std::__1::",
						"r": "template <class _Ti, class _Uj, __enable_if_t<!is_bind_expression<_Ti>::value&& is_placeholder<_Ti>::value",
						"s": "std::__1",
						"u": "__MU",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b2af5393801438e35644f57a5e77912548dab13"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mu_return_impl",
						"t": "",
						"i": "std::__1::__mu_return_impl",
						"r": "template <class _Ti, bool IsReferenceWrapper, bool IsBindEx, bool IsPh, class _TupleUj> __mu_return_impl",
						"s": "std::__1",
						"u": "__MU_RETURN_IMPL",
						"q": "std::__1::__mu_return_impl",
						"w": "STD::__1::__MU_RETURN_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e727c4b3a9ae05948863635d9ccc449aeeff462"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mu_return_invokable",
						"t": "",
						"i": "std::__1::__mu_return_invokable",
						"r": "template <bool _Invokable, class _Ti, class ..._Uj> __mu_return_invokable",
						"s": "std::__1",
						"u": "__MU_RETURN_INVOKABLE",
						"q": "std::__1::__mu_return_invokable",
						"w": "STD::__1::__MU_RETURN_INVOKABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e7178de9751ed6e160b636057172327409c9f94"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return_invokable::type",
						"i": "std::__mu_return_invokable::type",
						"r": "typedef __nat type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::__mu_return_invokable",
						"w": "STD::__MU_RETURN_INVOKABLE",
						"y": "std::__nat",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27e1b52159846e19a012876e1c5f219332d67a49"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return_invokable<true, type-parameter-0-0, type-parameter-0-1...>::type",
						"i": "std::__mu_return_invokable::type",
						"r": "typedef typename __invoke_of<_Ti&, _Uj...>::type type",
						"s": "",
						"u": "TYPE",
						"q": "std::__mu_return_invokable",
						"w": "STD::__MU_RETURN_INVOKABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26e42db90babd9f4fa798e5cf1736d150e88bfa2"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return_impl<type-parameter-0-0, false, false, true, type-parameter-0-1>::type",
						"i": "std::__mu_return_impl::type",
						"r": "typedef typename tuple_element<is_placeholder<_Ti>::value - 1, _TupleUj>::type&& type",
						"s": "",
						"u": "TYPE",
						"q": "std::__mu_return_impl",
						"w": "STD::__MU_RETURN_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95b2be80683006febefb3e65810e3589d764f618"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return_impl<type-parameter-0-0, true, false, false, type-parameter-0-1>::type",
						"i": "std::__mu_return_impl::type",
						"r": "typedef typename _Ti::type& type",
						"s": "",
						"u": "TYPE",
						"q": "std::__mu_return_impl",
						"w": "STD::__MU_RETURN_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aff26e2c9bd082c82bdb22ea619c61150a4c193a"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mu_return_impl<type-parameter-0-0, false, false, false, type-parameter-0-1>::type",
						"i": "std::__mu_return_impl::type",
						"r": "typedef _Ti& type",
						"s": "",
						"u": "TYPE",
						"q": "std::__mu_return_impl",
						"w": "STD::__MU_RETURN_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bfa64708fc79f08f23086f0f73c37c9d7d9612fd"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mu_return",
						"t": "",
						"i": "std::__1::__mu_return",
						"r": "template <class _Ti, class _TupleUj> __mu_return : public __mu_return_impl<_Ti, __is_reference_wrapper<_Ti>::value, is_bind_expression<_Ti>::value, 0 < is_placeholder<_Ti>::value&& is_placeholder<_Ti>::value <",
						"s": "std::__1",
						"u": "__MU_RETURN",
						"q": "std::__1::__mu_return",
						"w": "STD::__1::__MU_RETURN",
						"y": "std::__1::__mu_return_impl",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b172d968de855f323732632a5a5fee3e46cb5de"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_valid_bind_return",
						"t": "",
						"i": "std::__1::__is_valid_bind_return",
						"r": "template <class _Fp, class _BoundArgs, class _TupleUj> __is_valid_bind_return",
						"s": "std::__1",
						"u": "__IS_VALID_BIND_RETURN",
						"q": "std::__1::__is_valid_bind_return",
						"w": "STD::__1::__IS_VALID_BIND_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a18fdfd295f2ba7c457172d8d10e53c1c2c77ba"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "std::__1::__is_valid_bind_return::value",
						"r": "static const bool value",
						"s": "std::__1",
						"u": "VALUE",
						"q": "std::__1::__is_valid_bind_return",
						"w": "STD::__1::__IS_VALID_BIND_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3322dc8d14d2639afdec166151ee537c20fe6d2e"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "value",
						"r": "static const bool value",
						"s": "",
						"u": "VALUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed9f8b40d00aaee637a3eaa7d499fcea5465b110"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "value",
						"r": "static const bool value",
						"s": "",
						"u": "VALUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9a38a5b41aa74002a5a7d7a1ae2193d57ebc2ef"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__bind_return",
						"t": "",
						"i": "std::__1::__bind_return",
						"r": "template <class _Fp, class _BoundArgs, class _TupleUj, bool",
						"s": "std::__1",
						"u": "__BIND_RETURN",
						"q": "std::__1::__bind_return",
						"w": "STD::__1::__BIND_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a149fac894422d71dc0e7021b4014df40ec86bc2"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__bind_return<type-parameter-0-0, tuple<type-parameter-0-1...>, type-parameter-0-2, true>::type",
						"i": "std::__bind_return::type",
						"r": "typedef typename __invoke_of<_Fp&, typename __mu_return<_BoundArgs, _TupleUj>::type...>::type type",
						"s": "",
						"u": "TYPE",
						"q": "std::__bind_return",
						"w": "STD::__BIND_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f5db782361636025038ab09b0f9103005054650"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__bind_return<type-parameter-0-0, const tuple<type-parameter-0-1...>, type-parameter-0-2, true>::type",
						"i": "std::__bind_return::type",
						"r": "typedef typename __invoke_of<_Fp&, typename __mu_return<const _BoundArgs, _TupleUj>::type...>::type type",
						"s": "",
						"u": "TYPE",
						"q": "std::__bind_return",
						"w": "STD::__BIND_RETURN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de0bc31d0e47ac91556bbfe458c9befe45c76116"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__apply_functor",
						"t": "typename __bind_return<_Fp, _BoundArgs, _Args>::type (_Fp &, _BoundArgs &, __tuple_indices<_Indx...>, _Args &&)",
						"i": "std::__1::",
						"r": "template <class _Fp, class _BoundArgs, size_t ..._Indx, class _Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __bind_return<_Fp, _BoundArgs, _Args>::type __apply_functor(_Fp& __f, _BoundArgs& __bound_args, __tuple_indices<_Indx...>, _Args&& __args)",
						"s": "std::__1",
						"u": "__APPLY_FUNCTOR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9834f8bd79274de23e2c3a46c64a5cc3142d9bb1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bind",
						"t": "",
						"i": "std::__1::__bind",
						"r": "template <class _Fp, class ..._BoundArgs> __bind : public __weak_result_type<__decay_t<_Fp>>",
						"s": "std::__1",
						"u": "__BIND",
						"q": "std::__1::__bind",
						"w": "STD::__1::__BIND",
						"y": "std::__1::__weak_result_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f22a95583bc20f206c205e3e76c128be5d8e53ee"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Fd",
						"t": "std::__bind::_Fd",
						"i": "std::__bind::_Fd",
						"r": "using _Fd",
						"s": "std::__1",
						"u": "_FD",
						"q": "std::__bind",
						"w": "STD::__BIND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f22d0429a1e4bd0c2b6fed79a0a8d71ad57b5062"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Td",
						"t": "std::__bind::_Td",
						"i": "std::__bind::_Td",
						"r": "typedef tuple<__decay_t<_BoundArgs>...> _Td",
						"s": "std::__1",
						"u": "_TD",
						"q": "std::__bind",
						"w": "STD::__BIND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e7209d468bea7bb9b5e191be2ed961bbdec248b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "_Fd",
						"i": "std::__1::__bind::__f_",
						"r": "_Fd __f_",
						"s": "std::__1",
						"u": "__F_",
						"q": "std::__1::__bind",
						"w": "STD::__1::__BIND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84d07bc0271dcb43994ff7b921cd750f3f5c31af"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bound_args_",
						"t": "_Td",
						"i": "std::__1::__bind::__bound_args_",
						"r": "_Td __bound_args_",
						"s": "std::__1",
						"u": "__BOUND_ARGS_",
						"q": "std::__1::__bind",
						"w": "STD::__1::__BIND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da1e13054d7a37ad6c7936664b2068165ec75da7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__indices",
						"t": "std::__bind::__indices",
						"i": "std::__bind::__indices",
						"r": "typedef typename __make_tuple_indices<sizeof...(_BoundArgs)>::type __indices",
						"s": "std::__1",
						"u": "__INDICES",
						"q": "std::__bind",
						"w": "STD::__BIND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bfbd842add2112b9e30854adead465f7c8b29fde"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__bind<_Fp, _BoundArgs...>",
						"t": "void (_Gp &&, _BA &&...)",
						"i": "std::__1::__bind::",
						"r": "template <class _Gp, class ..._BA, __enable_if_t<is_constructible<_Fd, _Gp>::value&& !is_same<__libcpp_remove_reference_t<_Gp>, __bind<_Fp, _BoundArgs...>>::value, int>",
						"s": "std::__1",
						"u": "__BIND<_FP, _BOUNDARGS...>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4a911d00bcca4c594163fac1e9f5d687288b1f7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __bind_return<_Fd, _Td, tuple<_Args &&...>>::type (_Args &&...)",
						"i": "std::__1::__bind::",
						"r": "template <class ..._Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __bind_return<_Fd, _Td, tuple<_Args&&...>>::type operator()(_Args&&...__args)",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0fb6cbdb65b4608a3de06e79019a4ca45f8dc52"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __bind_return<const _Fd, const _Td, tuple<_Args &&...>>::type (_Args &&...) const",
						"i": "std::__1::__bind::",
						"r": "template <class ..._Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __bind_return<const _Fd, const _Td, tuple<_Args&&...>>::type operator()(_Args&&...__args) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7f2303875c90b4b35eb9d3a1e4af12c1c8cbeb7"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bind_r",
						"t": "",
						"i": "std::__1::__bind_r",
						"r": "template <class _Rp, class _Fp, class ..._BoundArgs> __bind_r : public __bind<_Fp, _BoundArgs...>",
						"s": "std::__1",
						"u": "__BIND_R",
						"q": "std::__1::__bind_r",
						"w": "STD::__1::__BIND_R",
						"y": "std::__1::__bind",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "006febc543624e679ee66ded6313b95ff5f4d82b"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "base",
						"t": "std::__bind_r::base",
						"i": "std::__bind_r::base",
						"r": "typedef __bind<_Fp, _BoundArgs...> base",
						"s": "std::__1",
						"u": "BASE",
						"q": "std::__bind_r",
						"w": "STD::__BIND_R",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2bbf89fc4297dbb69d4cae3e961ffcd4f6cdade"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Fd",
						"t": "std::__bind_r::_Fd",
						"i": "std::__bind_r::_Fd",
						"r": "typedef typename base::_Fd _Fd",
						"s": "std::__1",
						"u": "_FD",
						"q": "std::__bind_r",
						"w": "STD::__BIND_R",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b133ea6806ae606c44ca44295c90130b5f1543de"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Td",
						"t": "std::__bind_r::_Td",
						"i": "std::__bind_r::_Td",
						"r": "typedef typename base::_Td _Td",
						"s": "std::__1",
						"u": "_TD",
						"q": "std::__bind_r",
						"w": "STD::__BIND_R",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd96c10e948dfc42b179f5d321ff704ce6aabfa8"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::__bind_r::result_type",
						"i": "std::__bind_r::result_type",
						"r": "typedef _Rp result_type",
						"s": "std::__1",
						"u": "RESULT_TYPE",
						"q": "std::__bind_r",
						"w": "STD::__BIND_R",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3609acf618d47960cf8f75c41e2966ffba4838bc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__bind_r<_Rp, _Fp, _BoundArgs...>",
						"t": "void (_Gp &&, _BA &&...)",
						"i": "std::__1::__bind_r::",
						"r": "template <class _Gp, class ..._BA, __enable_if_t<is_constructible<_Fd, _Gp>::value&& !is_same<__libcpp_remove_reference_t<_Gp>, __bind_r<_Rp, _Fp, _BoundArgs...>>::value, int>",
						"s": "std::__1",
						"u": "__BIND_R<_RP, _FP, _BOUNDARGS...>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5fddf8c81042a27ff06c7b15f5855b26a2a99927"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "result_type (_Args &&...)",
						"i": "std::__1::__bind_r::",
						"r": "template <class ..._Args, __enable_if_t<is_convertible<typename __bind_return<_Fd, _Td, tuple<_Args&&...>>::type, result_type>::value || is_void<_Rp>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f8e4abe3421e23b8d66f8ee4eb0d961283d7c0c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "result_type (_Args &&...) const",
						"i": "std::__1::__bind_r::",
						"r": "template <class ..._Args, __enable_if_t<is_convertible<typename __bind_return<const _Fd, const _Td, tuple<_Args&&...>>::type, result_type>::value || is_void<_Rp>::value, int>",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa83319248f332aaed55f250b077a756a184f27d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "bind",
						"t": "__bind<_Fp, _BoundArgs...> (_Fp &&, _BoundArgs &&...)",
						"i": "std::__1::",
						"r": "template <class _Fp, class ..._BoundArgs> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __bind<_Fp, _BoundArgs...> bind(_Fp&& __f, _BoundArgs&&...__bound_args)",
						"s": "std::__1",
						"u": "BIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "555c00978be0f652ed1e943044e087fef5575946"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "bind",
						"t": "__bind_r<_Rp, _Fp, _BoundArgs...> (_Fp &&, _BoundArgs &&...)",
						"i": "std::__1::",
						"r": "template <class _Rp, class _Fp, class ..._BoundArgs> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __bind_r<_Rp, _Fp, _BoundArgs...> bind(_Fp&& __f, _BoundArgs&&...__bound_args)",
						"s": "std::__1",
						"u": "BIND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d85b2ff5495ba5977db17553ea09c0661f416335"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/bind_back.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BIND_BACK_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BIND_BACK_H",
						"r": "_LIBCPP___FUNCTIONAL_BIND_BACK_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BIND_BACK_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40ea01544f2b3e45e1b22b18f3dccb3e198203b7"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/perfect_forward.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H",
						"r": "_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5775045b5c333c1864e9ca7a4feaa49404c8f6ae"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__perfect_forward_impl",
						"t": "",
						"i": "std::__1::__perfect_forward_impl",
						"r": "template <class _Op, class _Indices, class ..._BoundArgs> __perfect_forward_impl",
						"s": "std::__1",
						"u": "__PERFECT_FORWARD_IMPL",
						"q": "std::__1::__perfect_forward_impl",
						"w": "STD::__1::__PERFECT_FORWARD_IMPL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3003675c809fd214ea0a0659418fbdf609cdba13"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bound_args_",
						"t": "tuple<_BoundArgs...>",
						"i": "__bound_args_",
						"r": "tuple<_BoundArgs...> __bound_args_",
						"s": "",
						"u": "__BOUND_ARGS_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb0ab496854d4bc439fe8a0d5c8b0dfd650df2a3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Args &&...) &",
						"i": "operator()(_Args&&...)&=delete",
						"r": "template <class ..._Args, class",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "031d7cc3f11fb5456a5d87025b600880d3f2190e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Args &&...) const &",
						"i": "operator()(_Args&&...)const&=delete",
						"r": "template <class ..._Args, class",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87d35842d4a97433cea343f7d9323be0e6f4b4b4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Args &&...) &&",
						"i": "operator()(_Args&&...)&&=delete",
						"r": "template <class ..._Args, class",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d19b9b0dbdacf1720e5a4a805411c1c01140b590"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Args &&...) const &&",
						"i": "operator()(_Args&&...)const&&=delete",
						"r": "template <class ..._Args, class",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18f3313ec7b4d4473f479fb84d7448857ae7b927"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__perfect_forward",
						"t": "std::__perfect_forward",
						"i": "std::__perfect_forward",
						"r": "using __perfect_forward",
						"s": "std::__1",
						"u": "__PERFECT_FORWARD",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94f8b0d6a7484671c903aa54a4c90f835e934361"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/bind_front.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BIND_FRONT_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BIND_FRONT_H",
						"r": "_LIBCPP___FUNCTIONAL_BIND_FRONT_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BIND_FRONT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0873bdfb7a6b562101ed876af027312e84e949ec"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/binder1st.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BINDER1ST_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BINDER1ST_H",
						"r": "_LIBCPP___FUNCTIONAL_BINDER1ST_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BINDER1ST_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c211ada5411c19087c8aaac11ae0745cfa7b523"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/binder2nd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_BINDER2ND_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BINDER2ND_H",
						"r": "_LIBCPP___FUNCTIONAL_BINDER2ND_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BINDER2ND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c310843eda5ed9dd62746dfb0985ca54ad9d3c01"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/boyer_moore_searcher.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_LIBCPP___FUNCTIONAL_BOYER_MOORE_SEARCHER_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_BOYER_MOORE_SEARCHER_H",
						"r": "_LIBCPP___FUNCTIONAL_BOYER_MOORE_SEARCHER_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_BOYER_MOORE_SEARCHER_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a562e43e9899f8d3cc5d713e0f298e85cd88fe96"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_BMSkipTable",
						"t": "",
						"i": "std::__1::_BMSkipTable",
						"r": "template <class _Key, class _Value, class _Hash, class _BinaryPredicate, bool> _BMSkipTable",
						"s": "std::__1",
						"u": "_BMSKIPTABLE",
						"q": "std::__1::_BMSkipTable",
						"w": "STD::__1::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48452251cc9908bf965fb9306f097a643a03a623"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "std::_BMSkipTable<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, false>::value_type",
						"i": "std::_BMSkipTable::value_type",
						"r": "using value_type",
						"s": "",
						"u": "VALUE_TYPE",
						"q": "std::_BMSkipTable",
						"w": "STD::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "24aedb95dd475f32250445758614331347a6ebdf"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "key_type",
						"t": "std::_BMSkipTable<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, false>::key_type",
						"i": "std::_BMSkipTable::key_type",
						"r": "using key_type",
						"s": "",
						"u": "KEY_TYPE",
						"q": "std::_BMSkipTable",
						"w": "STD::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6df711cb3f1a066baa648f8ad6753879474d9683"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__default_value_",
						"t": "const value_type",
						"i": "__default_value_",
						"r": "const value_type __default_value_",
						"s": "",
						"u": "__DEFAULT_VALUE_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05390d267119ed545628daf31ed226793b230e78"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__table_",
						"t": "unordered_map<_Key, _Value, _Hash, _BinaryPredicate>",
						"i": "__table_",
						"r": "unordered_map<_Key, _Value, _Hash, _BinaryPredicate> __table_",
						"s": "",
						"u": "__TABLE_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51518897fd36d3e19ad56193e061d4322e849f9f"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "std::_BMSkipTable<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, true>::value_type",
						"i": "std::_BMSkipTable::value_type",
						"r": "using value_type",
						"s": "",
						"u": "VALUE_TYPE",
						"q": "std::_BMSkipTable",
						"w": "STD::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "24aedb95dd475f32250445758614331347a6ebdf"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "key_type",
						"t": "std::_BMSkipTable<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, true>::key_type",
						"i": "std::_BMSkipTable::key_type",
						"r": "using key_type",
						"s": "",
						"u": "KEY_TYPE",
						"q": "std::_BMSkipTable",
						"w": "STD::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6df711cb3f1a066baa648f8ad6753879474d9683"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unsigned_key_type",
						"t": "std::_BMSkipTable<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2, type-parameter-0-3, true>::unsigned_key_type",
						"i": "std::_BMSkipTable::unsigned_key_type",
						"r": "using unsigned_key_type",
						"s": "",
						"u": "UNSIGNED_KEY_TYPE",
						"q": "std::_BMSkipTable",
						"w": "STD::_BMSKIPTABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c56d282487ba11e8fcccdf4e557b56f0df7b2a4b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__table_",
						"t": "std::array<value_type, 256>",
						"i": "__table_",
						"r": "std::array<value_type, 256> __table_",
						"s": "",
						"u": "__TABLE_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0da225fe39d21d882758ddc34a3b5ef09647b350"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "boyer_moore_searcher",
						"t": "",
						"i": "std::__1::boyer_moore_searcher",
						"r": "template <class _RandomAccessIterator1, class _Hash",
						"s": "std::__1",
						"u": "BOYER_MOORE_SEARCHER",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "491cd58b73391e9db054be79ec451e3451ce12c5"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "difference_type",
						"t": "std::boyer_moore_searcher::difference_type",
						"i": "std::boyer_moore_searcher::difference_type",
						"r": "using difference_type",
						"s": "std::__1",
						"u": "DIFFERENCE_TYPE",
						"q": "std::boyer_moore_searcher",
						"w": "STD::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce17f3b01f45fbafb48d58583b70d91787b1310b"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "std::boyer_moore_searcher::value_type",
						"i": "std::boyer_moore_searcher::value_type",
						"r": "using value_type",
						"s": "std::__1",
						"u": "VALUE_TYPE",
						"q": "std::boyer_moore_searcher",
						"w": "STD::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b671c0c686c8a2913cf994a5c130c95477465de7"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__skip_table_type",
						"t": "std::boyer_moore_searcher::__skip_table_type",
						"i": "std::boyer_moore_searcher::__skip_table_type",
						"r": "using __skip_table_type",
						"s": "std::__1",
						"u": "__SKIP_TABLE_TYPE",
						"q": "std::boyer_moore_searcher",
						"w": "STD::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e366d207ece31bb8fc57578aef9e0fb72b032543"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "boyer_moore_searcher<_RandomAccessIterator1, _Hash, _BinaryPredicate>",
						"t": "void (_RandomAccessIterator1, _RandomAccessIterator1, _Hash, _BinaryPredicate)",
						"i": "std::__1::boyer_moore_searcher::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) boyer_moore_searcher<_RandomAccessIterator1, _Hash, _BinaryPredicate>(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _Hash __hash = _Hash(), _BinaryPredicate __pred = _BinaryPredicate())",
						"s": "std::__1",
						"u": "BOYER_MOORE_SEARCHER<_RANDOMACCESSITERATOR1, _HASH, _BINARYPREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "61c641d4a2be8fd978cee3c549b8f27c2d0a75c0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_RandomAccessIterator2, _RandomAccessIterator2> (_RandomAccessIterator2, _RandomAccessIterator2) const",
						"i": "std::__1::boyer_moore_searcher::",
						"r": "template <class _RandomAccessIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_RandomAccessIterator2, _RandomAccessIterator2> operator()(_RandomAccessIterator2 __first, _RandomAccessIterator2 __last) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fdfba009d2595bfc741f4f37e75e11836acd552"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_",
						"t": "_RandomAccessIterator1",
						"i": "std::__1::boyer_moore_searcher::__first_",
						"r": "_RandomAccessIterator1 __first_",
						"s": "std::__1",
						"u": "__FIRST_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44721b93f616ef36059c378d6d2ece64a51ccae9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__last_",
						"t": "_RandomAccessIterator1",
						"i": "std::__1::boyer_moore_searcher::__last_",
						"r": "_RandomAccessIterator1 __last_",
						"s": "std::__1",
						"u": "__LAST_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd52deddf4ed12af0e879ded6d054cff56a30ea6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred_",
						"t": "_BinaryPredicate",
						"i": "std::__1::boyer_moore_searcher::__pred_",
						"r": "_BinaryPredicate __pred_",
						"s": "std::__1",
						"u": "__PRED_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e2057cbab1facfde2230375e12fa568b1d401b1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_length_",
						"t": "difference_type",
						"i": "std::__1::boyer_moore_searcher::__pattern_length_",
						"r": "difference_type __pattern_length_",
						"s": "std::__1",
						"u": "__PATTERN_LENGTH_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a109f934e12edf250ed0ae8aebb2c1a116c10d7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__skip_table_",
						"t": "shared_ptr<__skip_table_type>",
						"i": "std::__1::boyer_moore_searcher::__skip_table_",
						"r": "shared_ptr<__skip_table_type> __skip_table_",
						"s": "std::__1",
						"u": "__SKIP_TABLE_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ffc0f1c19ec2754fb6e9ac5d158e4438efd0535"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__suffix_",
						"t": "shared_ptr<difference_type[]>",
						"i": "std::__1::boyer_moore_searcher::__suffix_",
						"r": "shared_ptr<difference_type[]> __suffix_",
						"s": "std::__1",
						"u": "__SUFFIX_",
						"q": "std::__1::boyer_moore_searcher",
						"w": "STD::__1::BOYER_MOORE_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e62a7cd9e6d4926c1e4bc2c1515289bf8a7b6e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search",
						"t": "pair<_RandomAccessIterator2, _RandomAccessIterator2> (_RandomAccessIterator2, _RandomAccessIterator2) const",
						"i": "std::__1::boyer_moore_searcher::",
						"r": "template <class _RandomAccessIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_RandomAccessIterator2, _RandomAccessIterator2> __search(_RandomAccessIterator2 __f, _RandomAccessIterator2 __l) const",
						"s": "std::__1",
						"u": "__SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63c8e72a30cab7fa408e1d4ab79fdab73775b081"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__compute_bm_prefix",
						"t": "void (_Iterator, _Iterator, _BinaryPredicate, _Container &)",
						"i": "std::__1::boyer_moore_searcher::",
						"r": "template <class _Iterator, class _Container> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __compute_bm_prefix(_Iterator __first, _Iterator __last, _BinaryPredicate __pred, _Container& __prefix)",
						"s": "std::__1",
						"u": "__COMPUTE_BM_PREFIX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9fbc98468fb1869e97ad9a45c954ace249cb347f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__build_suffix_table",
						"t": "void (_RandomAccessIterator1, _RandomAccessIterator1, _BinaryPredicate)",
						"i": "std::__1::boyer_moore_searcher::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __build_suffix_table(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _BinaryPredicate __pred)",
						"s": "std::__1",
						"u": "__BUILD_SUFFIX_TABLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6fb93fe221c401189f5e83512a0a6256e608b75"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for boyer_moore_searcher>",
						"t": "auto (typename _Tag::__allow_ctad...) -> boyer_moore_searcher<_Tag...>",
						"i": "std::__1::boyer_moore_searcher(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> boyer_moore_searcher(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BOYER_MOORE_SEARCHER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d81b488574c26da9e1b3423125be751f91e30228"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "boyer_moore_horspool_searcher",
						"t": "",
						"i": "std::__1::boyer_moore_horspool_searcher",
						"r": "template <class _RandomAccessIterator1, class _Hash",
						"s": "std::__1",
						"u": "BOYER_MOORE_HORSPOOL_SEARCHER",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6b57e1688423a668ad176736f7062f93ee74d0e"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "difference_type",
						"t": "std::boyer_moore_horspool_searcher::difference_type",
						"i": "std::boyer_moore_horspool_searcher::difference_type",
						"r": "using difference_type",
						"s": "std::__1",
						"u": "DIFFERENCE_TYPE",
						"q": "std::boyer_moore_horspool_searcher",
						"w": "STD::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0298a82016074bc4af68ffe6cc8f78ffd153724"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "std::boyer_moore_horspool_searcher::value_type",
						"i": "std::boyer_moore_horspool_searcher::value_type",
						"r": "using value_type",
						"s": "std::__1",
						"u": "VALUE_TYPE",
						"q": "std::boyer_moore_horspool_searcher",
						"w": "STD::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "530ac04fa4186c85bb8b35e3d04c0cb743f6b8f7"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__skip_table_type",
						"t": "std::boyer_moore_horspool_searcher::__skip_table_type",
						"i": "std::boyer_moore_horspool_searcher::__skip_table_type",
						"r": "using __skip_table_type",
						"s": "std::__1",
						"u": "__SKIP_TABLE_TYPE",
						"q": "std::boyer_moore_horspool_searcher",
						"w": "STD::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e366d207ece31bb8fc57578aef9e0fb72b032543"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "boyer_moore_horspool_searcher<_RandomAccessIterator1, _Hash, _BinaryPredicate>",
						"t": "void (_RandomAccessIterator1, _RandomAccessIterator1, _Hash, _BinaryPredicate)",
						"i": "std::__1::boyer_moore_horspool_searcher::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) boyer_moore_horspool_searcher<_RandomAccessIterator1, _Hash, _BinaryPredicate>(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _Hash __hash = _Hash(), _BinaryPredicate __pred = _BinaryPredicate())",
						"s": "std::__1",
						"u": "BOYER_MOORE_HORSPOOL_SEARCHER<_RANDOMACCESSITERATOR1, _HASH, _BINARYPREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2ab9aab1d3d7c1e0b264280b52bd649a1eb81b85"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_RandomAccessIterator2, _RandomAccessIterator2> (_RandomAccessIterator2, _RandomAccessIterator2) const",
						"i": "std::__1::boyer_moore_horspool_searcher::",
						"r": "template <class _RandomAccessIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_RandomAccessIterator2, _RandomAccessIterator2> operator()(_RandomAccessIterator2 __first, _RandomAccessIterator2 __last) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fdfba009d2595bfc741f4f37e75e11836acd552"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_",
						"t": "_RandomAccessIterator1",
						"i": "std::__1::boyer_moore_horspool_searcher::__first_",
						"r": "_RandomAccessIterator1 __first_",
						"s": "std::__1",
						"u": "__FIRST_",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44721b93f616ef36059c378d6d2ece64a51ccae9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__last_",
						"t": "_RandomAccessIterator1",
						"i": "std::__1::boyer_moore_horspool_searcher::__last_",
						"r": "_RandomAccessIterator1 __last_",
						"s": "std::__1",
						"u": "__LAST_",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd52deddf4ed12af0e879ded6d054cff56a30ea6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred_",
						"t": "_BinaryPredicate",
						"i": "std::__1::boyer_moore_horspool_searcher::__pred_",
						"r": "_BinaryPredicate __pred_",
						"s": "std::__1",
						"u": "__PRED_",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e2057cbab1facfde2230375e12fa568b1d401b1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_length_",
						"t": "difference_type",
						"i": "std::__1::boyer_moore_horspool_searcher::__pattern_length_",
						"r": "difference_type __pattern_length_",
						"s": "std::__1",
						"u": "__PATTERN_LENGTH_",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a109f934e12edf250ed0ae8aebb2c1a116c10d7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__skip_table_",
						"t": "shared_ptr<__skip_table_type>",
						"i": "std::__1::boyer_moore_horspool_searcher::__skip_table_",
						"r": "shared_ptr<__skip_table_type> __skip_table_",
						"s": "std::__1",
						"u": "__SKIP_TABLE_",
						"q": "std::__1::boyer_moore_horspool_searcher",
						"w": "STD::__1::BOYER_MOORE_HORSPOOL_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ffc0f1c19ec2754fb6e9ac5d158e4438efd0535"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search",
						"t": "pair<_RandomAccessIterator2, _RandomAccessIterator2> (_RandomAccessIterator2, _RandomAccessIterator2) const",
						"i": "std::__1::boyer_moore_horspool_searcher::",
						"r": "template <class _RandomAccessIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_RandomAccessIterator2, _RandomAccessIterator2> __search(_RandomAccessIterator2 __f, _RandomAccessIterator2 __l) const",
						"s": "std::__1",
						"u": "__SEARCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63c8e72a30cab7fa408e1d4ab79fdab73775b081"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for boyer_moore_horspool_searcher>",
						"t": "auto (typename _Tag::__allow_ctad...) -> boyer_moore_horspool_searcher<_Tag...>",
						"i": "std::__1::boyer_moore_horspool_searcher(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> boyer_moore_horspool_searcher(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BOYER_MOORE_HORSPOOL_SEARCHER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e93fd28f54943ae3ad0cca894f0241c598834e7e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/hash.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_HASH_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_HASH_H",
						"r": "_LIBCPP___FUNCTIONAL_HASH_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_HASH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b33a39997256e11213f15fd3f52ad74eb397f69f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__loadword",
						"t": "_Size (const void *)",
						"i": "std::__1::",
						"r": "template <class _Size> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) _Size __loadword(const void *__p)",
						"s": "std::__1",
						"u": "__LOADWORD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fdc90370d77a1dc57181b7ab8ba78118d53bdc10"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__murmur2_or_cityhash",
						"t": "",
						"i": "std::__1::__murmur2_or_cityhash",
						"r": "template <class _Size, size_t",
						"s": "std::__1",
						"u": "__MURMUR2_OR_CITYHASH",
						"q": "std::__1::__murmur2_or_cityhash",
						"w": "STD::__1::__MURMUR2_OR_CITYHASH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "795d1b2dcf1d144e5db9e8e6221414fb30dd1cec"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__k0",
						"t": "const _Size",
						"i": "__k0",
						"r": "static const _Size __k0",
						"s": "",
						"u": "__K0",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d702183346a45d8acaa71476a56e7429fb62da73"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__k1",
						"t": "const _Size",
						"i": "__k1",
						"r": "static const _Size __k1",
						"s": "",
						"u": "__K1",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12192447f210f23f0d6c11847e9f562ebd2b6810"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__k2",
						"t": "const _Size",
						"i": "__k2",
						"r": "static const _Size __k2",
						"s": "",
						"u": "__K2",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f544c233469b31d819d740022044a8c33e067bb4"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "__k3",
						"t": "const _Size",
						"i": "__k3",
						"r": "static const _Size __k3",
						"s": "",
						"u": "__K3",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a1d0442cad40ea04ce6e31f3b63357b1c642c7e5"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__scalar_hash",
						"t": "",
						"i": "std::__1::__scalar_hash",
						"r": "template <class _Tp, size_t",
						"s": "std::__1",
						"u": "__SCALAR_HASH",
						"q": "std::__1::__scalar_hash",
						"w": "STD::__1::__SCALAR_HASH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "367a67477ddda69ca790a46780eb30a6e70cd767"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PairT",
						"t": "std::_PairT",
						"i": "std::_PairT",
						"r": "_PairT",
						"s": "std::__1",
						"u": "_PAIRT",
						"q": "std::_PairT",
						"w": "STD::_PAIRT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d540f60f586c2e2b6e6be11207913d93d73a881"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "first",
						"t": "size_t",
						"i": "std::__1::_PairT::first",
						"r": "size_t first",
						"s": "std::__1",
						"u": "FIRST",
						"q": "std::__1::_PairT",
						"w": "STD::__1::_PAIRT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db2346454f0d9d47977855f02f92028348d836e7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "second",
						"t": "size_t",
						"i": "std::__1::_PairT::second",
						"r": "size_t second",
						"s": "std::__1",
						"u": "SECOND",
						"q": "std::__1::_PairT",
						"w": "STD::__1::_PAIRT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3bb70280e8feda7cd5b73d3c04e423804995f8a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__hash_combine",
						"t": "size_t (size_t, size_t) noexcept",
						"i": "std::__1::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t __hash_combine(size_t __lhs, size_t __rhs)",
						"s": "std::__1",
						"u": "__HASH_COMBINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fab3e77ee80a13bf5879e26ed6704b48fbf78866"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<bool>",
						"i": "std::hash",
						"r": "template<> hash<bool> : public __unary_function<bool, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "329aaa709e59696459b12241271bc0a841d73c0f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (bool) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(bool __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b102435da4da86ffc11f12f60e9c42a20476c00"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<char>",
						"i": "std::hash",
						"r": "template<> hash<char> : public __unary_function<char, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbd519be5c2899091fde603e01fec30017c45195"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (char) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(char __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c4a541642d7c3c8327dc3416c154cf9cd0ad5f8b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<signed char>",
						"i": "std::hash",
						"r": "template<> hash<signed char> : public __unary_function<signed char, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3b610153119550d03689ac63b17f572154c66ca"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (signed char) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(signed char __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "354bec5c77e4b5b527770331f301c318dffe0bbd"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<unsigned char>",
						"i": "std::hash",
						"r": "template<> hash<unsigned char> : public __unary_function<unsigned char, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfdfb173404968d0182486bc40ad6113dfe205c0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (unsigned char) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(unsigned char __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe80b0c46a178decef72a81c88e51a5af58c0381"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<char16_t>",
						"i": "std::hash",
						"r": "template<> hash<char16_t> : public __unary_function<char16_t, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3576bba4ebe846ef6475f77885d8aa9eb0db0c09"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (char16_t) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(char16_t __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc334778ebf6172378f2e119763a1843e4ee95d1"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<char32_t>",
						"i": "std::hash",
						"r": "template<> hash<char32_t> : public __unary_function<char32_t, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "151693f51c60e70625d71b4311f50a84bc4ab78a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (char32_t) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(char32_t __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6dadff8187624656f0768ded2d67cfd16a875b1"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<wchar_t>",
						"i": "std::hash",
						"r": "template<> hash<wchar_t> : public __unary_function<wchar_t, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e54bdb4c05d2754c513634c75fbc7072e3c5eff"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (wchar_t) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(wchar_t __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d8fc1eb3da2444cd57435ead45caecd2d1af568"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<short>",
						"i": "std::hash",
						"r": "template<> hash<short> : public __unary_function<short, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c3b494c578e65c55336f026c5d5151997cba954"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (short) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(short __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "108e2c066a419a11a5faa16f21d1055d235d3078"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<unsigned short>",
						"i": "std::hash",
						"r": "template<> hash<unsigned short> : public __unary_function<unsigned short, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9954b0530fb6f744cb9d31b96577bcbcf1070672"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (unsigned short) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(unsigned short __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8057ad7874d052faddcc33a6fb3c1c252c3f5346"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<int>",
						"i": "std::hash",
						"r": "template<> hash<int> : public __unary_function<int, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75d94a1ddd3e744e9cdff2cca44fc42e695964bf"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (int) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(int __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04fcd23dd3d608ffa31284e9366427c907106d8a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<unsigned int>",
						"i": "std::hash",
						"r": "template<> hash<unsigned int> : public __unary_function<unsigned int, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8167ca484c3286f33b57d786b0bb31b01f3173a4"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (unsigned int) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(unsigned int __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "061452f401201142744e00a568cf7949164bde27"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<long>",
						"i": "std::hash",
						"r": "template<> hash<long> : public __unary_function<long, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "efc397ff2b42b230a22d06e393b5669131f23499"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (long) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(long __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "161e23564f226590c02efba2730d0201d31f7f20"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<unsigned long>",
						"i": "std::hash",
						"r": "template<> hash<unsigned long> : public __unary_function<unsigned long, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72fe6d8a3820e69cd709447d735937e8df370af6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (unsigned long) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(unsigned long __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b166d7bd6bfae50b6fa8141340f78ecd72cbc4df"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<long long>",
						"i": "std::hash",
						"r": "template<> hash<long long> : public __scalar_hash<long long>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e95208492848680b590879368c4bdff1a6e70be"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<unsigned long long>",
						"i": "std::hash",
						"r": "template<> hash<unsigned long long> : public __scalar_hash<unsigned long long>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c567d4a40633fc2ae2defcb154d70a9decc70787"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<__int128_t>",
						"i": "std::hash",
						"r": "template<> hash<__int128_t> : public __scalar_hash<__int128_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "437d3647671f5a80c608bb2dd370b109a6c056b6"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<__uint128_t>",
						"i": "std::hash",
						"r": "template<> hash<__uint128_t> : public __scalar_hash<__uint128_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ef4634cb662f20402b53e78d8d93026b2c8d184"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<float>",
						"i": "std::hash",
						"r": "template<> hash<float> : public __scalar_hash<float>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25d92ee0abbc9e3e923a68f4694b97c6730c74bd"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (float) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(float __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b096f23712b8eae18df6354fecd8786a2228b00b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<double>",
						"i": "std::hash",
						"r": "template<> hash<double> : public __scalar_hash<double>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f70480daf2fade5fcbee4aab77ab1f2c2f8cb298"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (double) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(double __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f16b180167ffdef2d2facb7c33b8c2e79472aa36"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<long double>",
						"i": "std::hash",
						"r": "template<> hash<long double> : public __scalar_hash<long double>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__scalar_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "afd3c8c9a413e1022ee8a6ac40e6c2157f41e17c"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (long double) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(long double __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f6270f8e7deecd32dfc5a457d79027773f0769d4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__enum_hash",
						"t": "",
						"i": "std::__1::__enum_hash",
						"r": "template <class _Tp, bool",
						"s": "std::__1",
						"u": "__ENUM_HASH",
						"q": "std::__1::__enum_hash",
						"w": "STD::__1::__ENUM_HASH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb7612a4852f01fc7e2e404f598a3f92539d27fa"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (_Tp) const noexcept",
						"i": "std::__1::__enum_hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(_Tp __v) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fee8be82182783107c0d90fa2ecaf2bc6e003074"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__enum_hash<type-parameter-0-0, false>",
						"t": "void ()",
						"i": "__enum_hash()=delete",
						"r": "__enum_hash<type-parameter-0-0, false>()",
						"s": "",
						"u": "__ENUM_HASH<TYPE-PARAMETER-0-0, FALSE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e53430ece4457d5753b8ef34b28cb2f604e23722"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__enum_hash<type-parameter-0-0, false>",
						"t": "void (const __enum_hash<type-parameter-0-0, false> &)",
						"i": "__enum_hash(const __enum_hash&)=delete",
						"r": "__enum_hash<type-parameter-0-0, false>(const __enum_hash<type-parameter-0-0, false>&)",
						"s": "",
						"u": "__ENUM_HASH<TYPE-PARAMETER-0-0, FALSE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51187bf3ef39f41b825c9eb6f252074d22b8b83e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "__enum_hash<type-parameter-0-0, false> &(const __enum_hash<type-parameter-0-0, false> &)",
						"i": "operator=(const __enum_hash&)=delete",
						"r": "__enum_hash<type-parameter-0-0, false>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11af0ea64eb773f23fef2f0ab01fb0083e931cec"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "",
						"i": "std::__1::hash",
						"r": "template <class _Tp> hash : public __enum_hash<_Tp>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::__1::hash",
						"w": "STD::__1::HASH",
						"y": "std::__1::__enum_hash",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef9af87b0f1b04b446a7bf0da6f28bcc2d1a866b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "std::hash<nullptr_t>",
						"i": "std::hash",
						"r": "template<> hash<nullptr_t> : public __unary_function<nullptr_t, size_t>",
						"s": "std::__1",
						"u": "HASH",
						"q": "std::hash",
						"w": "STD::HASH",
						"y": "std::__unary_function_keep_layout_base",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe7eeb42f53bfeeb87b77909996c636e350541b6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "size_t (nullptr_t) const noexcept",
						"i": "std::__1::hash::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) size_t operator()(nullptr_t) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8bacefb55c286a56d498afd79131911b58f4d9b"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__check_hash_requirements",
						"t": "std::__check_hash_requirements",
						"i": "std::__check_hash_requirements",
						"r": "using __check_hash_requirements __attribute__((nodebug))",
						"s": "std::__1",
						"u": "__CHECK_HASH_REQUIREMENTS",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c115f7519e7df8c4400bdcdc10375f44e5653f3"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__has_enabled_hash",
						"t": "std::__has_enabled_hash",
						"i": "std::__has_enabled_hash",
						"r": "using __has_enabled_hash __attribute__((nodebug))",
						"s": "std::__1",
						"u": "__HAS_ENABLED_HASH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18cadf93eaab78b570b2caa4789751eb035e4b3e"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__enable_hash_helper_imp",
						"t": "std::__enable_hash_helper_imp",
						"i": "std::__enable_hash_helper_imp",
						"r": "using __enable_hash_helper_imp __attribute__((nodebug))",
						"s": "std::__1",
						"u": "__ENABLE_HASH_HELPER_IMP",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e9c83973beb7131c7731ce025d3fc9753f99f09"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__enable_hash_helper",
						"t": "std::__enable_hash_helper",
						"i": "std::__enable_hash_helper",
						"r": "using __enable_hash_helper __attribute__((nodebug))",
						"s": "std::__1",
						"u": "__ENABLE_HASH_HELPER",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b047ff8fa2cac35a1c1918ae65c3113e27886a42"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/operations.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_OPERATIONS_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_OPERATIONS_H",
						"r": "_LIBCPP___FUNCTIONAL_OPERATIONS_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_OPERATIONS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "404462ef81af9fdd2c8223ce799c61cd6a776512"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "plus",
						"t": "",
						"i": "std::__1::plus",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "PLUS",
						"q": "std::__1::plus",
						"w": "STD::__1::PLUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a064ae13cfda20d5bd806e3a466ac75b74ef4746"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::plus::__result_type",
						"i": "std::plus::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::plus",
						"w": "STD::PLUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::plus::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b4166ade2c1d3bf6f9072cbb4fcfbb6ee2533b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for plus>",
						"t": "auto (typename _Tag::__allow_ctad...) -> plus<_Tag...>",
						"i": "std::__1::plus(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> plus(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR PLUS>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6b06ff7d5dcc40e743abbf78081a01ed5d79b52"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "plus",
						"t": "std::plus<void>",
						"i": "std::plus",
						"r": "template<> plus<void>",
						"s": "std::__1",
						"u": "PLUS",
						"q": "std::plus",
						"w": "STD::PLUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a03d318cb0de13c17f42c9bd988705b641384247"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) + std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) + std::forward<_T2>(__u))",
						"i": "std::__1::plus::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) + std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd67964f1f45f37caf158d92471ad905aa6f85e2"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::plus<>::is_transparent",
						"i": "std::plus::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::plus",
						"w": "STD::PLUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minus",
						"t": "",
						"i": "std::__1::minus",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "MINUS",
						"q": "std::__1::minus",
						"w": "STD::__1::MINUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "92378485cc790783d03e8fca974dcfaaa2619337"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::minus::__result_type",
						"i": "std::minus::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::minus",
						"w": "STD::MINUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::minus::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e4219708e337d11a4647c6602cea43de9995e08"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for minus>",
						"t": "auto (typename _Tag::__allow_ctad...) -> minus<_Tag...>",
						"i": "std::__1::minus(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> minus(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR MINUS>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56613d22e54bee98ffe8b0aa94334716375f0e3b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minus",
						"t": "std::minus<void>",
						"i": "std::minus",
						"r": "template<> minus<void>",
						"s": "std::__1",
						"u": "MINUS",
						"q": "std::minus",
						"w": "STD::MINUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41aac695240615502b6e2dbf7452bd7a9a1d424d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) - std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) - std::forward<_T2>(__u))",
						"i": "std::__1::minus::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) - std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "399f193244084dd5d3ba60d889b672c8b76ee882"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::minus<>::is_transparent",
						"i": "std::minus::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::minus",
						"w": "STD::MINUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiplies",
						"t": "",
						"i": "std::__1::multiplies",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "MULTIPLIES",
						"q": "std::__1::multiplies",
						"w": "STD::__1::MULTIPLIES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1dfc219589141650ffec7cbb72972628b38c6d8f"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::multiplies::__result_type",
						"i": "std::multiplies::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::multiplies",
						"w": "STD::MULTIPLIES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::multiplies::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2423b838de6a13f98d12a0ea6d0ed44b2666cff7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for multiplies>",
						"t": "auto (typename _Tag::__allow_ctad...) -> multiplies<_Tag...>",
						"i": "std::__1::multiplies(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> multiplies(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR MULTIPLIES>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c9b4dc08b08aef2362ae0974c67fdd93ac22b68"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiplies",
						"t": "std::multiplies<void>",
						"i": "std::multiplies",
						"r": "template<> multiplies<void>",
						"s": "std::__1",
						"u": "MULTIPLIES",
						"q": "std::multiplies",
						"w": "STD::MULTIPLIES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e69671211056e393b35a77e752777959837f1b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) * std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) * std::forward<_T2>(__u))",
						"i": "std::__1::multiplies::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) *std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3d11466407b2b0ca4ab98f81cd54ef6485b60d7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::multiplies<>::is_transparent",
						"i": "std::multiplies::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::multiplies",
						"w": "STD::MULTIPLIES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "divides",
						"t": "",
						"i": "std::__1::divides",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "DIVIDES",
						"q": "std::__1::divides",
						"w": "STD::__1::DIVIDES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2775e321824fca358f4cf631cbb7268d732df2b7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::divides::__result_type",
						"i": "std::divides::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::divides",
						"w": "STD::DIVIDES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::divides::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14f61b328ca08a48ac4cbff6e3f78f7e0d2d63e4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for divides>",
						"t": "auto (typename _Tag::__allow_ctad...) -> divides<_Tag...>",
						"i": "std::__1::divides(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> divides(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR DIVIDES>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df78059327f6e88f6eca705af89d0f09d3718ccf"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "divides",
						"t": "std::divides<void>",
						"i": "std::divides",
						"r": "template<> divides<void>",
						"s": "std::__1",
						"u": "DIVIDES",
						"q": "std::divides",
						"w": "STD::DIVIDES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a24bfecd96a1d6c57dc54baf0c1b95da2900d1c6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) / std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) / std::forward<_T2>(__u))",
						"i": "std::__1::divides::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) / std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba18519f42cc9fcce17eec83b508a90159c03c4d"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::divides<>::is_transparent",
						"i": "std::divides::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::divides",
						"w": "STD::DIVIDES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "modulus",
						"t": "",
						"i": "std::__1::modulus",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "MODULUS",
						"q": "std::__1::modulus",
						"w": "STD::__1::MODULUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4c8a096c08fe79284091e39aa4147c30258ac2c"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::modulus::__result_type",
						"i": "std::modulus::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::modulus",
						"w": "STD::MODULUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::modulus::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87d1cf2581bda7320126e7fcd358aca97814fa5e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for modulus>",
						"t": "auto (typename _Tag::__allow_ctad...) -> modulus<_Tag...>",
						"i": "std::__1::modulus(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> modulus(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR MODULUS>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1d7a618a970e49db8dd4e8193153f58a6aa6666"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "modulus",
						"t": "std::modulus<void>",
						"i": "std::modulus",
						"r": "template<> modulus<void>",
						"s": "std::__1",
						"u": "MODULUS",
						"q": "std::modulus",
						"w": "STD::MODULUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60b6796124f148cae492576e601abbf7f0948789"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) % std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) % std::forward<_T2>(__u))",
						"i": "std::__1::modulus::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) % std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55240ed7ed353da56dbf6306157ba65ad02aa721"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::modulus<>::is_transparent",
						"i": "std::modulus::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::modulus",
						"w": "STD::MODULUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "negate",
						"t": "",
						"i": "std::__1::negate",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "NEGATE",
						"q": "std::__1::negate",
						"w": "STD::__1::NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71724cbbfcce8a5718ba7e2478ec9c5f5af80103"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::negate::__result_type",
						"i": "std::negate::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::negate",
						"w": "STD::NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &) const",
						"i": "std::__1::negate::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2900488a3b3d4eb5454a1b9081b6d23f79d61873"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for negate>",
						"t": "auto (typename _Tag::__allow_ctad...) -> negate<_Tag...>",
						"i": "std::__1::negate(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> negate(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR NEGATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bf28fcf20fb7b95dfb118e260941e724fc1cbe5"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "negate",
						"t": "std::negate<void>",
						"i": "std::negate",
						"r": "template<> negate<void>",
						"s": "std::__1",
						"u": "NEGATE",
						"q": "std::negate",
						"w": "STD::NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e648c79a4009f3b4453c839cf6ef4b36f737c079"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Tp &&) const noexcept(noexcept(-std::forward<_Tp>(__x))) -> decltype(-std::forward<_Tp>(__x))",
						"i": "std::__1::negate::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_Tp&& __x) const ((-std::forward<_Tp>(__x)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c89201ef58393a75bc6537871e12adedaf2ae9a7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::negate<>::is_transparent",
						"i": "std::negate::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::negate",
						"w": "STD::NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_and",
						"t": "",
						"i": "std::__1::bit_and",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "BIT_AND",
						"q": "std::__1::bit_and",
						"w": "STD::__1::BIT_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d59a29c47c5841111361d43ee0af9c4700d88249"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::bit_and::__result_type",
						"i": "std::bit_and::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::bit_and",
						"w": "STD::BIT_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::bit_and::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "29cc74d231c1a1cb72614f9e08b43613dd1e7b6a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for bit_and>",
						"t": "auto (typename _Tag::__allow_ctad...) -> bit_and<_Tag...>",
						"i": "std::__1::bit_and(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> bit_and(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BIT_AND>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9d7dcb3ba7252046baaf34a453b9938ecfc167a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_and",
						"t": "std::bit_and<void>",
						"i": "std::bit_and",
						"r": "template<> bit_and<void>",
						"s": "std::__1",
						"u": "BIT_AND",
						"q": "std::bit_and",
						"w": "STD::BIT_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b4a3a12cc12a706628ae32b57dab1110759f453"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) & std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) & std::forward<_T2>(__u))",
						"i": "std::__1::bit_and::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t)& std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "509f6d875494cf55f418f1eddc4cf612c13339ae"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::bit_and<>::is_transparent",
						"i": "std::bit_and::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::bit_and",
						"w": "STD::BIT_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_not",
						"t": "",
						"i": "std::__1::bit_not",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "BIT_NOT",
						"q": "std::__1::bit_not",
						"w": "STD::__1::BIT_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c64e10930bf287e656cd7bf3e6aef5633e5c58b6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &) const",
						"i": "std::__1::bit_not::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51ad1da6782a31597c9cbffdb7eca2f808a2468c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for bit_not>",
						"t": "auto (typename _Tag::__allow_ctad...) -> bit_not<_Tag...>",
						"i": "std::__1::bit_not(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> bit_not(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BIT_NOT>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09288513428f8ca14bf687be6abc0eceaffe2d43"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_not",
						"t": "std::bit_not<void>",
						"i": "std::bit_not",
						"r": "template<> bit_not<void>",
						"s": "std::__1",
						"u": "BIT_NOT",
						"q": "std::bit_not",
						"w": "STD::BIT_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "204f23df5a9c827a2b26d86497c05ad2f35cac27"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Tp &&) const noexcept(noexcept(~ std::forward<_Tp>(__x))) -> decltype(~ std::forward<_Tp>(__x))",
						"i": "std::__1::bit_not::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_Tp&& __x) const ((~ std::forward<_Tp>(__x)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bca88f27f2b72dda4c38f25a16177ddc89ed524c"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::bit_not<>::is_transparent",
						"i": "std::bit_not::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::bit_not",
						"w": "STD::BIT_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_or",
						"t": "",
						"i": "std::__1::bit_or",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "BIT_OR",
						"q": "std::__1::bit_or",
						"w": "STD::__1::BIT_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26457aaaecb909db5f17ec749049361d6dcef03f"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::bit_or::__result_type",
						"i": "std::bit_or::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::bit_or",
						"w": "STD::BIT_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::bit_or::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "534205b9c2ada63bb4aaed1f076a019b986e38ce"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for bit_or>",
						"t": "auto (typename _Tag::__allow_ctad...) -> bit_or<_Tag...>",
						"i": "std::__1::bit_or(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> bit_or(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BIT_OR>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "942cfdaaaf699ceca49545a2939b18d1b62121cb"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_or",
						"t": "std::bit_or<void>",
						"i": "std::bit_or",
						"r": "template<> bit_or<void>",
						"s": "std::__1",
						"u": "BIT_OR",
						"q": "std::bit_or",
						"w": "STD::BIT_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77a84a79b65ee881d75587e1c1b0a26c4b7233b1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) | std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) | std::forward<_T2>(__u))",
						"i": "std::__1::bit_or::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) | std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9db4b9b3f56c477f6a738dd3fc1666b4c55c836"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::bit_or<>::is_transparent",
						"i": "std::bit_or::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::bit_or",
						"w": "STD::BIT_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_xor",
						"t": "",
						"i": "std::__1::bit_xor",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "BIT_XOR",
						"q": "std::__1::bit_xor",
						"w": "STD::__1::BIT_XOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16aabe40e9b5b8dc8faaae0505ee049697c3ddab"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::bit_xor::__result_type",
						"i": "std::bit_xor::__result_type",
						"r": "typedef _Tp __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::bit_xor",
						"w": "STD::BIT_XOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d647c259be8aa4f570b6847dccbafb40555b1570"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (const _Tp &, const _Tp &) const",
						"i": "std::__1::bit_xor::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr _Tp operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e46def658dcdfce3bb0c39c060eb730a5d821e3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for bit_xor>",
						"t": "auto (typename _Tag::__allow_ctad...) -> bit_xor<_Tag...>",
						"i": "std::__1::bit_xor(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> bit_xor(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR BIT_XOR>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b05c180fd693db0b6b236a35f8f967eeb0de05e"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bit_xor",
						"t": "std::bit_xor<void>",
						"i": "std::bit_xor",
						"r": "template<> bit_xor<void>",
						"s": "std::__1",
						"u": "BIT_XOR",
						"q": "std::bit_xor",
						"w": "STD::BIT_XOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a172134e5d131c3ba1ff71d0f60c17b41f5829c7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) ^ std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) ^ std::forward<_T2>(__u))",
						"i": "std::__1::bit_xor::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) ^ std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2fd432a615afbd4a6813c29e9cebc7abca64b37"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::bit_xor<>::is_transparent",
						"i": "std::bit_xor::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::bit_xor",
						"w": "STD::BIT_XOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal_to",
						"t": "",
						"i": "std::__1::equal_to",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "EQUAL_TO",
						"q": "std::__1::equal_to",
						"w": "STD::__1::EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7799209caaf6aa02d6ca4a89e8a908f055e0d63e"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::equal_to::__result_type",
						"i": "std::equal_to::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::equal_to",
						"w": "STD::EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::equal_to::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf7bb48a56ddafdac7c85c663674eec78ed5a9c5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for equal_to>",
						"t": "auto (typename _Tag::__allow_ctad...) -> equal_to<_Tag...>",
						"i": "std::__1::equal_to(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> equal_to(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR EQUAL_TO>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d299933d7f62052d95e4a251e216936d0fd7a14"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal_to",
						"t": "std::equal_to<void>",
						"i": "std::equal_to",
						"r": "template<> equal_to<void>",
						"s": "std::__1",
						"u": "EQUAL_TO",
						"q": "std::equal_to",
						"w": "STD::EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d15cf777cbb23008206d31bb1094cab5378e5c9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) == std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) == std::forward<_T2>(__u))",
						"i": "std::__1::equal_to::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) == std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fc766fdd83a0714d606a688443eae9742f5ff24"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::equal_to<>::is_transparent",
						"i": "std::equal_to::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::equal_to",
						"w": "STD::EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "not_equal_to",
						"t": "",
						"i": "std::__1::not_equal_to",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "NOT_EQUAL_TO",
						"q": "std::__1::not_equal_to",
						"w": "STD::__1::NOT_EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05a85e8d2d36cc2dd6539b16a724b5037578a32b"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::not_equal_to::__result_type",
						"i": "std::not_equal_to::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::not_equal_to",
						"w": "STD::NOT_EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::not_equal_to::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc9dac02554a08a14707772625bd7d440e0ebf18"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for not_equal_to>",
						"t": "auto (typename _Tag::__allow_ctad...) -> not_equal_to<_Tag...>",
						"i": "std::__1::not_equal_to(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> not_equal_to(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR NOT_EQUAL_TO>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c6be3752019e9b146e189d7ed9f479a9062931a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "not_equal_to",
						"t": "std::not_equal_to<void>",
						"i": "std::not_equal_to",
						"r": "template<> not_equal_to<void>",
						"s": "std::__1",
						"u": "NOT_EQUAL_TO",
						"q": "std::not_equal_to",
						"w": "STD::NOT_EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77c0738e7edbc4e7142ea11579767418df20a844"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) != std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) != std::forward<_T2>(__u))",
						"i": "std::__1::not_equal_to::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) != std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbf8f7778e735fb929b67edfbcbcae543b2f36fe"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::not_equal_to<>::is_transparent",
						"i": "std::not_equal_to::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::not_equal_to",
						"w": "STD::NOT_EQUAL_TO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "less",
						"t": "",
						"i": "std::__1::less",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "LESS",
						"q": "std::__1::less",
						"w": "STD::__1::LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91f1382ffdcaea7166b8b1b34c8b1d38976bfa68"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::less::__result_type",
						"i": "std::less::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::less",
						"w": "STD::LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::less::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e257d95693d4096eb2a54c472a8b9fd6d7cd0c25"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for less>",
						"t": "auto (typename _Tag::__allow_ctad...) -> less<_Tag...>",
						"i": "std::__1::less(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> less(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR LESS>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "efb9cea1ee71519a54ea43c6776d91a82dd4dfe4"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "less",
						"t": "std::less<void>",
						"i": "std::less",
						"r": "template<> less<void>",
						"s": "std::__1",
						"u": "LESS",
						"q": "std::less",
						"w": "STD::LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f7a8410d85e7175a182c77588ff085a5e23540c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) < std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) < std::forward<_T2>(__u))",
						"i": "std::__1::less::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) < std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76e43705603134d2b50ee4c4959b9a34972a424b"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::less<>::is_transparent",
						"i": "std::less::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::less",
						"w": "STD::LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "less_equal",
						"t": "",
						"i": "std::__1::less_equal",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "LESS_EQUAL",
						"q": "std::__1::less_equal",
						"w": "STD::__1::LESS_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b38897e38321b5c1c91cc391c879ec6bce93308"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::less_equal::__result_type",
						"i": "std::less_equal::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::less_equal",
						"w": "STD::LESS_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::less_equal::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c69f21b3fc9792328f19525aec9eb2e4501c3ca0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for less_equal>",
						"t": "auto (typename _Tag::__allow_ctad...) -> less_equal<_Tag...>",
						"i": "std::__1::less_equal(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> less_equal(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR LESS_EQUAL>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a2f8b16a0ebf7e3d159aafc2f5e1a95564b0a4e4"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "less_equal",
						"t": "std::less_equal<void>",
						"i": "std::less_equal",
						"r": "template<> less_equal<void>",
						"s": "std::__1",
						"u": "LESS_EQUAL",
						"q": "std::less_equal",
						"w": "STD::LESS_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0f05f4fa730e047eb61e3b7028ea44fb231f415e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) <= std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) <= std::forward<_T2>(__u))",
						"i": "std::__1::less_equal::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) <= std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6c20b0d62d694df6e29d8f4af3f0e107058413d"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::less_equal<>::is_transparent",
						"i": "std::less_equal::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::less_equal",
						"w": "STD::LESS_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "greater_equal",
						"t": "",
						"i": "std::__1::greater_equal",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "GREATER_EQUAL",
						"q": "std::__1::greater_equal",
						"w": "STD::__1::GREATER_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8113d736cce095dcfd58d9841d2d81cca35f64b7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::greater_equal::__result_type",
						"i": "std::greater_equal::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::greater_equal",
						"w": "STD::GREATER_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::greater_equal::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26c8a3a2dacd8c4c1afdd34cc46cd93ab0682270"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for greater_equal>",
						"t": "auto (typename _Tag::__allow_ctad...) -> greater_equal<_Tag...>",
						"i": "std::__1::greater_equal(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> greater_equal(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR GREATER_EQUAL>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08b5e866bd90efeb7296ee3866730dfe510cec78"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "greater_equal",
						"t": "std::greater_equal<void>",
						"i": "std::greater_equal",
						"r": "template<> greater_equal<void>",
						"s": "std::__1",
						"u": "GREATER_EQUAL",
						"q": "std::greater_equal",
						"w": "STD::GREATER_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "587a9d5a1cff1d425fca0b8c02188338f59f6f39"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) >= std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) >= std::forward<_T2>(__u))",
						"i": "std::__1::greater_equal::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) >= std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6769102372252ddd85b8d076e65b1a523f6b3687"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::greater_equal<>::is_transparent",
						"i": "std::greater_equal::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::greater_equal",
						"w": "STD::GREATER_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "greater",
						"t": "",
						"i": "std::__1::greater",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "GREATER",
						"q": "std::__1::greater",
						"w": "STD::__1::GREATER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8ee2abef751a86fa40805a18c28e9c0e36bd687"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::greater::__result_type",
						"i": "std::greater::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::greater",
						"w": "STD::GREATER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::greater::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26bd77990f1510b72ded32f3392621811df05b0d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for greater>",
						"t": "auto (typename _Tag::__allow_ctad...) -> greater<_Tag...>",
						"i": "std::__1::greater(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> greater(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR GREATER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0b598b6d0ebc439f062cc3126bd27b52a5e2706"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "greater",
						"t": "std::greater<void>",
						"i": "std::greater",
						"r": "template<> greater<void>",
						"s": "std::__1",
						"u": "GREATER",
						"q": "std::greater",
						"w": "STD::GREATER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "513ac3f7d79b91e1109f6dd4f8e541dcde44f71c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) > std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) > std::forward<_T2>(__u))",
						"i": "std::__1::greater::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) > std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1173c494cc9d1b243c132ee6382f984f355da6ec"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::greater<>::is_transparent",
						"i": "std::greater::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::greater",
						"w": "STD::GREATER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_and",
						"t": "",
						"i": "std::__1::logical_and",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "LOGICAL_AND",
						"q": "std::__1::logical_and",
						"w": "STD::__1::LOGICAL_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25ce31ed1cfa9211b23919f1a1816f46c73e3842"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::logical_and::__result_type",
						"i": "std::logical_and::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::logical_and",
						"w": "STD::LOGICAL_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::logical_and::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf140732ad5329084a30671fcbffe5c754989a4e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for logical_and>",
						"t": "auto (typename _Tag::__allow_ctad...) -> logical_and<_Tag...>",
						"i": "std::__1::logical_and(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> logical_and(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR LOGICAL_AND>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7672cfcb2d2f06abd3ae290154950ab75d89b969"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_and",
						"t": "std::logical_and<void>",
						"i": "std::logical_and",
						"r": "template<> logical_and<void>",
						"s": "std::__1",
						"u": "LOGICAL_AND",
						"q": "std::logical_and",
						"w": "STD::LOGICAL_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "239c572182193409c3f55be8d61e128f81fbd849"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) && std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) && std::forward<_T2>(__u))",
						"i": "std::__1::logical_and::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t)&& std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99366b10b379e3657deda35f0d5b172ff2d92e98"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::logical_and<>::is_transparent",
						"i": "std::logical_and::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::logical_and",
						"w": "STD::LOGICAL_AND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_not",
						"t": "",
						"i": "std::__1::logical_not",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "LOGICAL_NOT",
						"q": "std::__1::logical_not",
						"w": "STD::__1::LOGICAL_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3db5e28adae3a0b3fab1ad019547d5aa9979bb4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::logical_not::__result_type",
						"i": "std::logical_not::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::logical_not",
						"w": "STD::LOGICAL_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &) const",
						"i": "std::__1::logical_not::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "661440f05136adac901ef614c46a0d79e9d4ed43"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for logical_not>",
						"t": "auto (typename _Tag::__allow_ctad...) -> logical_not<_Tag...>",
						"i": "std::__1::logical_not(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> logical_not(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR LOGICAL_NOT>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04c3611e0887a92da86c70aa7215007b1f531e07"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_not",
						"t": "std::logical_not<void>",
						"i": "std::logical_not",
						"r": "template<> logical_not<void>",
						"s": "std::__1",
						"u": "LOGICAL_NOT",
						"q": "std::logical_not",
						"w": "STD::LOGICAL_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac73d134bfe3b08acd2f35422f877c2bfd32d3c1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Tp &&) const noexcept(noexcept(!std::forward<_Tp>(__x))) -> decltype(!std::forward<_Tp>(__x))",
						"i": "std::__1::logical_not::",
						"r": "template <class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_Tp&& __x) const ((!std::forward<_Tp>(__x)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b4dda864c27838b75d9fcfad0ca5bb5ef302c07"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::logical_not<>::is_transparent",
						"i": "std::logical_not::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::logical_not",
						"w": "STD::LOGICAL_NOT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_or",
						"t": "",
						"i": "std::__1::logical_or",
						"r": "template <class _Tp",
						"s": "std::__1",
						"u": "LOGICAL_OR",
						"q": "std::__1::logical_or",
						"w": "STD::__1::LOGICAL_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f1aa22805c31de50000a9993032188d301f81cc"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__result_type",
						"t": "std::logical_or::__result_type",
						"i": "std::logical_or::__result_type",
						"r": "typedef bool __result_type",
						"s": "std::__1",
						"u": "__RESULT_TYPE",
						"q": "std::logical_or",
						"w": "STD::LOGICAL_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27cf1addfd2c0ba8de3f0e5d9902598c93280b9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _Tp &, const _Tp &) const",
						"i": "std::__1::logical_or::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const _Tp& __x, const _Tp& __y) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "293cfa35067ae2057543bd04aa5eda15813befab"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for logical_or>",
						"t": "auto (typename _Tag::__allow_ctad...) -> logical_or<_Tag...>",
						"i": "std::__1::logical_or(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> logical_or(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR LOGICAL_OR>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a51960c850584e0bda7c39c90b264d876972c23"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logical_or",
						"t": "std::logical_or<void>",
						"i": "std::logical_or",
						"r": "template<> logical_or<void>",
						"s": "std::__1",
						"u": "LOGICAL_OR",
						"q": "std::logical_or",
						"w": "STD::LOGICAL_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edf57ec0a2ebcbe5b2fbba2bf6497b78c9c5d41b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_T1 &&, _T2 &&) const noexcept(noexcept(std::forward<_T1>(__t) || std::forward<_T2>(__u))) -> decltype(std::forward<_T1>(__t) || std::forward<_T2>(__u))",
						"i": "std::__1::logical_or::",
						"r": "template <class _T1, class _T2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr auto operator()(_T1&& __t, _T2&& __u) const ((std::forward<_T1>(__t) || std::forward<_T2>(__u)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9a79667a1c7fc33bb3d2b5e2013d30db17e35ca"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_transparent",
						"t": "std::logical_or<>::is_transparent",
						"i": "std::logical_or::is_transparent",
						"r": "typedef void is_transparent",
						"s": "std::__1",
						"u": "IS_TRANSPARENT",
						"q": "std::logical_or",
						"w": "STD::LOGICAL_OR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d41d0bc9b2c8f6fbf76f4f6525d4ab36f7bfeed4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/ranges_operations.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H",
						"r": "_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df30493b5c5cda5fe9c53ddb5f76ebadd356b76b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/is_transparent.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_IS_TRANSPARENT",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_IS_TRANSPARENT",
						"r": "_LIBCPP___FUNCTIONAL_IS_TRANSPARENT",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_IS_TRANSPARENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d3068c4ff4c16fb04be32da697b3dcfc0d09ecf"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_transparent",
						"t": "",
						"i": "std::__1::__is_transparent",
						"r": "template <class _Tp, class, class",
						"s": "std::__1",
						"u": "__IS_TRANSPARENT",
						"q": "std::__1::__is_transparent",
						"w": "STD::__1::__IS_TRANSPARENT",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3eef54eee075b697b98d1d00ef67313cf959d727"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/compose.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_COMPOSE_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_COMPOSE_H",
						"r": "_LIBCPP___FUNCTIONAL_COMPOSE_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_COMPOSE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8392390d16e2b1f43afae91fffb2695b1570225e"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/default_searcher.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H",
						"r": "_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4e17d54bd42c0c30a324d11ff45172efb8b7712"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "default_searcher",
						"t": "",
						"i": "std::__1::default_searcher",
						"r": "template <class _ForwardIterator, class _BinaryPredicate",
						"s": "std::__1",
						"u": "DEFAULT_SEARCHER",
						"q": "std::__1::default_searcher",
						"w": "STD::__1::DEFAULT_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "029cacc8f7da50d62aef3273bb2e35d43a8e652f"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "default_searcher<_ForwardIterator, _BinaryPredicate>",
						"t": "void (_ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::__1::default_searcher::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) default_searcher<_ForwardIterator, _BinaryPredicate>(_ForwardIterator __f, _ForwardIterator __l, _BinaryPredicate __p = _BinaryPredicate())",
						"s": "std::__1",
						"u": "DEFAULT_SEARCHER<_FORWARDITERATOR, _BINARYPREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "307f1e7fa38b8518fd1d40db9832df4a11f0f08e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "pair<_ForwardIterator2, _ForwardIterator2> (_ForwardIterator2, _ForwardIterator2) const",
						"i": "std::__1::default_searcher::",
						"r": "template <typename _ForwardIterator2> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) pair<_ForwardIterator2, _ForwardIterator2> operator()(_ForwardIterator2 __f, _ForwardIterator2 __l) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cb18ceecd358c83d6fb1cfa34a328151fa7b638"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_",
						"t": "_ForwardIterator",
						"i": "std::__1::default_searcher::__first_",
						"r": "_ForwardIterator __first_",
						"s": "std::__1",
						"u": "__FIRST_",
						"q": "std::__1::default_searcher",
						"w": "STD::__1::DEFAULT_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55cafea9228c17c0e5f987f8e1ca3c79055cfa92"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__last_",
						"t": "_ForwardIterator",
						"i": "std::__1::default_searcher::__last_",
						"r": "_ForwardIterator __last_",
						"s": "std::__1",
						"u": "__LAST_",
						"q": "std::__1::default_searcher",
						"w": "STD::__1::DEFAULT_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1ea1ed174f37b5f38f39ffe78860cf895d52d2c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred_",
						"t": "_BinaryPredicate",
						"i": "std::__1::default_searcher::__pred_",
						"r": "_BinaryPredicate __pred_",
						"s": "std::__1",
						"u": "__PRED_",
						"q": "std::__1::default_searcher",
						"w": "STD::__1::DEFAULT_SEARCHER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e2057cbab1facfde2230375e12fa568b1d401b1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for default_searcher>",
						"t": "auto (typename _Tag::__allow_ctad...) -> default_searcher<_Tag...>",
						"i": "std::__1::default_searcher(typename _Tag::__allow_ctad...)",
						"r": "template <class ..._Tag> default_searcher(typename _Tag::__allow_ctad ...)",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR DEFAULT_SEARCHER>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e701270d56a01448b74921106d82cf9348d2e25"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/function.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_FUNCTION_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_FUNCTION_H",
						"r": "_LIBCPP___FUNCTIONAL_FUNCTION_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_FUNCTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "723f300154e4014cf6e215f87fafce183a3eb1a5"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bad_function_call",
						"t": "std::bad_function_call",
						"i": "std::bad_function_call",
						"r": "bad_function_call : public exception",
						"s": "std::__1",
						"u": "BAD_FUNCTION_CALL",
						"q": "std::bad_function_call",
						"w": "STD::BAD_FUNCTION_CALL",
						"y": "std::exception",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f2d5f7527f5467d54f5cd8e01fc5a18810a6ca4"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bad_function_call",
						"t": "void () noexcept",
						"i": "std::__1::bad_function_call::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bad_function_call()",
						"s": "std::__1",
						"u": "BAD_FUNCTION_CALL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb3a0e9facae393188314444c8bbb0c89d3d262a"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "bad_function_call",
						"t": "void (const bad_function_call &) noexcept",
						"i": "std::__1::bad_function_call::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bad_function_call(const bad_function_call&)",
						"s": "std::__1",
						"u": "BAD_FUNCTION_CALL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "935f171744d0e0d2b29077ddb29692a2b1eeab09"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "bad_function_call &(const bad_function_call &) noexcept",
						"i": "std::__1::bad_function_call::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bad_function_call& operator",
						"s": "std::__1",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b814e5cdea4d0886813e96ab31da24ba214ff273"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~bad_function_call",
						"t": "void () noexcept",
						"i": "std::__1::bad_function_call::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) ~bad_function_call()",
						"s": "std::__1",
						"u": "~BAD_FUNCTION_CALL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "441743178525d0a0565dca61c1027680fb249536"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__throw_bad_function_call",
						"t": "void ()",
						"i": "std::__1::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void __throw_bad_function_call() [[noreturn]]",
						"s": "std::__1",
						"u": "__THROW_BAD_FUNCTION_CALL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0efe8cab1398d0a119941300d90ef532fe0a2dae"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function",
						"t": "",
						"i": "std::__1::function",
						"r": "template <class _Fp> function",
						"s": "std::__1",
						"u": "FUNCTION",
						"q": "std::__1::function",
						"w": "STD::__1::FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c1abed8ac2c117f542a1dcd961d175a736de59a"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__maybe_derive_from_unary_function",
						"t": "",
						"i": "std::__1::__function::__maybe_derive_from_unary_function",
						"r": "template <class _Rp> __maybe_derive_from_unary_function",
						"s": "std::__1::__function",
						"u": "__MAYBE_DERIVE_FROM_UNARY_FUNCTION",
						"q": "std::__1::__function::__maybe_derive_from_unary_function",
						"w": "STD::__1::__FUNCTION::__MAYBE_DERIVE_FROM_UNARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cda94f3af5e17863912e3fb3564d39db746541cd"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__maybe_derive_from_binary_function",
						"t": "",
						"i": "std::__1::__function::__maybe_derive_from_binary_function",
						"r": "template <class _Rp> __maybe_derive_from_binary_function",
						"s": "std::__1::__function",
						"u": "__MAYBE_DERIVE_FROM_BINARY_FUNCTION",
						"q": "std::__1::__function::__maybe_derive_from_binary_function",
						"w": "STD::__1::__FUNCTION::__MAYBE_DERIVE_FROM_BINARY_FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "942a2622cbc2dfedab3c7274fcb4c3c6b7fb22a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__not_null",
						"t": "bool (const _Fp &)",
						"i": "std::__1::__function::",
						"r": "template <class _Fp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __not_null(const _Fp&)",
						"s": "std::__1::__function",
						"u": "__NOT_NULL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52875f3ec2603295588ce384067f7611b5747cce"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__not_null",
						"t": "bool (_Fp *)",
						"i": "std::__1::__function::",
						"r": "template <class _Fp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __not_null(_Fp *__ptr)",
						"s": "std::__1::__function",
						"u": "__NOT_NULL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1fd4cc1dd6270e5e51e5bf61b34611d92c5ba3a4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__not_null",
						"t": "bool (_Ret _Class::*)",
						"i": "std::__1::__function::",
						"r": "template <class _Ret, class _Class> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __not_null(_Ret _Class::*__ptr)",
						"s": "std::__1::__function",
						"u": "__NOT_NULL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2ef6235086f79cd9d638c7b393f28eda696ac83"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__not_null",
						"t": "bool (const function<_Fp> &)",
						"i": "std::__1::__function::",
						"r": "template <class _Fp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool __not_null(const function<_Fp>& __f)",
						"s": "std::__1::__function",
						"u": "__NOT_NULL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6543ad0e44ac876dda8bc042608a36144c0162a3"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__alloc_func",
						"t": "",
						"i": "std::__1::__function::__alloc_func",
						"r": "template <class _Fp, class _Ap, class _FB> __alloc_func",
						"s": "std::__1::__function",
						"u": "__ALLOC_FUNC",
						"q": "std::__1::__function::__alloc_func",
						"w": "STD::__1::__FUNCTION::__ALLOC_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e7cf9c58347cf5bd936764a26834bb47a912fb2"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__default_alloc_func",
						"t": "",
						"i": "std::__1::__function::__default_alloc_func",
						"r": "template <class _Fp, class _FB> __default_alloc_func",
						"s": "std::__1::__function",
						"u": "__DEFAULT_ALLOC_FUNC",
						"q": "std::__1::__function::__default_alloc_func",
						"w": "STD::__1::__FUNCTION::__DEFAULT_ALLOC_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba082a46ebf52ed71e9169bd18742655456eebff"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "__compressed_pair<_Fp, _Ap>",
						"i": "__f_",
						"r": "__compressed_pair<_Fp, _Ap> __f_",
						"s": "",
						"u": "__F_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "158a4571e5bb7a032640f8a78389a1e56def75b7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Target",
						"t": "std::__function::__alloc_func<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2 (type-parameter-0-3...)>::_Target",
						"i": "std::__function::__alloc_func::_Target",
						"r": "typedef _Fp _Target __attribute__((nodebug))",
						"s": "",
						"u": "_TARGET",
						"q": "std::__function::__alloc_func",
						"w": "STD::__FUNCTION::__ALLOC_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54f4b7540a44e4eca46b132822aaa9b9b1c5dc33"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Alloc",
						"t": "std::__function::__alloc_func<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2 (type-parameter-0-3...)>::_Alloc",
						"i": "std::__function::__alloc_func::_Alloc",
						"r": "typedef _Ap _Alloc __attribute__((nodebug))",
						"s": "",
						"u": "_ALLOC",
						"q": "std::__function::__alloc_func",
						"w": "STD::__FUNCTION::__ALLOC_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8b5d73ea62ae6cb4a0140691fef6d085723d61f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "_Fp",
						"i": "__f_",
						"r": "_Fp __f_",
						"s": "",
						"u": "__F_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a9e065525994b203248d968889bfb2297904763"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Target",
						"t": "std::__function::__default_alloc_func<type-parameter-0-0, type-parameter-0-1 (type-parameter-0-2...)>::_Target",
						"i": "std::__function::__default_alloc_func::_Target",
						"r": "typedef _Fp _Target __attribute__((nodebug))",
						"s": "",
						"u": "_TARGET",
						"q": "std::__function::__default_alloc_func",
						"w": "STD::__FUNCTION::__DEFAULT_ALLOC_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54f4b7540a44e4eca46b132822aaa9b9b1c5dc33"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__base",
						"t": "",
						"i": "std::__1::__function::__base",
						"r": "template <class _Fp> __base",
						"s": "std::__1::__function",
						"u": "__BASE",
						"q": "std::__1::__function::__base",
						"w": "STD::__1::__FUNCTION::__BASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43be5a73a664b6324881303f007029582486224d"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__base<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (const __base<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "__base(const __base&)",
						"r": "__base<type-parameter-0-0 (type-parameter-0-1...)>(const __base<type-parameter-0-0 (type-parameter-0-1...)>&)",
						"s": "",
						"u": "__BASE<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c8b24a5efced395c61828b47f1c02ed282b2ab2"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "__base<type-parameter-0-0 (type-parameter-0-1...)> &(const __base<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "operator=(const __base&)",
						"r": "__base<type-parameter-0-0 (type-parameter-0-1...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c94006bf804057127dbc97cf1009e50be517c74f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "__base<type-parameter-0-0 (type-parameter-0-1...)> *() const",
						"i": "__clone()const",
						"r": "__base<type-parameter-0-0 (type-parameter-0-1...)> *__clone() const",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a55209690ec0b8daaad5b738939e695a9c43c577"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "void (__base<type-parameter-0-0 (type-parameter-0-1...)> *) const",
						"i": "__clone(__base*)const",
						"r": "void __clone(__base<type-parameter-0-0 (type-parameter-0-1...)> *) const",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7addc4e7a313abb2a02fc7002eb42ddf673c622"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy",
						"t": "void () noexcept",
						"i": "destroy()",
						"r": "void destroy()",
						"s": "",
						"u": "DESTROY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "482ae96fc26572b1172968d371dbbdb48da02445"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy_deallocate",
						"t": "void () noexcept",
						"i": "destroy_deallocate()",
						"r": "void destroy_deallocate()",
						"s": "",
						"u": "DESTROY_DEALLOCATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4242fa536437fd4fe0dd17b45542f620555b7f2"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "operator()",
						"t": "_Rp (_ArgTypes &&...)",
						"i": "operator()(_ArgTypes&&...)",
						"r": "_Rp operator()(_ArgTypes&&...)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e98bb95c8882b8c3517abedfb9e653868a65cbf"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target",
						"t": "const void *(const type_info &) const noexcept",
						"i": "target(const type_info&)const",
						"r": "const void *target(const type_info&) const",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18ac50bb59a64a9674840dce65412db6dac77883"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target_type",
						"t": "const std::type_info &() const noexcept",
						"i": "target_type()const",
						"r": "const std::type_info& target_type() const",
						"s": "",
						"u": "TARGET_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4a734a06ddb9fb82fa2f99e4c720280a7ef4418"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__func",
						"t": "",
						"i": "std::__1::__function::__func",
						"r": "template <class _FD, class _Alloc, class _FB> __func",
						"s": "std::__1::__function",
						"u": "__FUNC",
						"q": "std::__1::__function::__func",
						"w": "STD::__1::__FUNCTION::__FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3be558b8f61f941eb1ea30d0017ebae5c79b05e4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "__alloc_func<_Fp, _Alloc, _Rp (_ArgTypes...)>",
						"i": "__f_",
						"r": "__alloc_func<_Fp, _Alloc, _Rp (_ArgTypes...)> __f_",
						"s": "",
						"u": "__F_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f14e25e8182b9213223de59976b87d6f1d224791"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "__base<_Rp (_ArgTypes...)> *() const",
						"i": "__clone()const",
						"r": "__base<_Rp (_ArgTypes...)> *__clone() const __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3321b2b59cfe26c4897a8e8b682b7df06caecb4"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "void (__base<_Rp (_ArgTypes...)> *) const",
						"i": "__clone(__base*)const",
						"r": "void __clone(__base<_Rp (_ArgTypes...)> *) const __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b315af4c8a45ea24f9b8311203cdd5c2193c6f5a"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy",
						"t": "void () noexcept",
						"i": "destroy()",
						"r": "void destroy() __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "DESTROY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "076eb6583e9dec6db54957c9d96f2c2bd5f80c14"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy_deallocate",
						"t": "void () noexcept",
						"i": "destroy_deallocate()",
						"r": "void destroy_deallocate() __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "DESTROY_DEALLOCATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b8111766fd5222c3cdc2993febe482b90509ffb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "operator()",
						"t": "_Rp (_ArgTypes &&...)",
						"i": "operator()(_ArgTypes&&...)",
						"r": "_Rp operator()(_ArgTypes&&...__arg) __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac3393af82ae53b21c1fac72a649fc6aef2bfee2"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target",
						"t": "const void *(const type_info &) const noexcept",
						"i": "target(const type_info&)const",
						"r": "const void *target(const type_info&) const __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3751b6b22b0f5abceb7cb4ab4a03055524fdce62"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target_type",
						"t": "const std::type_info &() const noexcept",
						"i": "target_type()const",
						"r": "const std::type_info& target_type() const __attribute__((exclude_from_explicit_instantiation))",
						"s": "",
						"u": "TARGET_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa5dfe94dbae3700f64b60c019cbe2bb56272b24"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "__base<_Rp (_ArgTypes...)> *() const",
						"i": "__clone()const",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> __base<_Rp (_ArgTypes...)> *__clone() const",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27d0630090ff71733137e2717e445d40a580f7c8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "__clone",
						"t": "void (__base<_Rp (_ArgTypes...)> *) const",
						"i": "__clone(__base*)const",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> void __clone(__base<_Rp (_ArgTypes...)> *__p) const",
						"s": "",
						"u": "__CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d384f0419a007163c77cf234fc9a953b952d75bc"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy",
						"t": "void () noexcept",
						"i": "destroy()",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> void destroy()",
						"s": "",
						"u": "DESTROY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "afd5b103eda20499608b2460858faa7f35cd1a93"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "destroy_deallocate",
						"t": "void () noexcept",
						"i": "destroy_deallocate()",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> void destroy_deallocate()",
						"s": "",
						"u": "DESTROY_DEALLOCATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6264af56d55b962980e4a619e0237460b2218ad1"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "operator()",
						"t": "_Rp (_ArgTypes &&...)",
						"i": "operator()(_ArgTypes&&...)",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> _Rp operator()(_ArgTypes&&...__arg)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "46cd865130a7540cd1a437c8004fbfdae3d993c8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target",
						"t": "const void *(const type_info &) const noexcept",
						"i": "target(const type_info&)const",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> const void *target(const type_info& __ti) const",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6eda7e82ad3c200960d41cb8f60b63dc5527573b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": true,
						"is": false,
						"n": "target_type",
						"t": "const std::type_info &() const noexcept",
						"i": "target_type()const",
						"r": "template <class _Fp, class _Alloc, class _Rp, class ..._ArgTypes> const std::type_info& target_type() const",
						"s": "",
						"u": "TARGET_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e002733868db0d57d2e6e4cc441faf4b7bd271d5"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__value_func",
						"t": "",
						"i": "std::__1::__function::__value_func",
						"r": "template <class _Fp> __value_func",
						"s": "std::__1::__function",
						"u": "__VALUE_FUNC",
						"q": "std::__1::__function::__value_func",
						"w": "STD::__1::__FUNCTION::__VALUE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6463aa32f6d329874e4ef36f509dfeb86048cff7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__buf_",
						"t": "typename aligned_storage<3 * sizeof(void *)>::type",
						"i": "__buf_",
						"r": "typename aligned_storage<3 *sizeof(void *)>::type __buf_",
						"s": "",
						"u": "__BUF_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b5fbfce0cdf7912490039fceafab1a0a61bc8b6a"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__func",
						"t": "std::__function::__value_func<type-parameter-0-0 (type-parameter-0-1...)>::__func",
						"i": "std::__function::__value_func::__func",
						"r": "typedef __base<_Rp (_ArgTypes...)> __func",
						"s": "",
						"u": "__FUNC",
						"q": "std::__function::__value_func",
						"w": "STD::__FUNCTION::__VALUE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b97024327a106a5c6480004d450d2a47ddd9bf0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "__func *",
						"i": "__f_",
						"r": "__func *__f_",
						"s": "",
						"u": "__F_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c294d4044ab47bdc733ea7ccfe2c2a8d5ec37ff"
							}
						]
					},
					{
						"k": 26,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator bool",
						"t": "bool () const noexcept",
						"i": "operator bool()const",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) explicit operator bool() const",
						"s": "",
						"u": "OPERATOR BOOL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48960128424ec0b58ced3e2d55c841b12912a8dd"
							}
						]
					},
					{
						"k": 3,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_storage",
						"t": "std::__function::__policy_storage",
						"i": "std::__function::__policy_storage",
						"r": "__policy_storage",
						"s": "std::__1::__function",
						"u": "__POLICY_STORAGE",
						"q": "std::__function::__policy_storage",
						"w": "STD::__FUNCTION::__POLICY_STORAGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "70b5d3404095098f057df4961470e05192db7a39"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__small",
						"t": "char[16]",
						"i": "std::__1::__function::__policy_storage::__small",
						"r": "mutable char __small[16]",
						"s": "std::__1::__function",
						"u": "__SMALL",
						"q": "std::__1::__function::__policy_storage",
						"w": "STD::__1::__FUNCTION::__POLICY_STORAGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ed1fa6d8d123e1b390b54e200f1e9413d297710"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__large",
						"t": "void *",
						"i": "std::__1::__function::__policy_storage::__large",
						"r": "void *__large",
						"s": "std::__1::__function",
						"u": "__LARGE",
						"q": "std::__1::__function::__policy_storage",
						"w": "STD::__1::__FUNCTION::__POLICY_STORAGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "737de17b1576aebab20b747ce957002e412d6ae7"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__use_small_storage",
						"t": "",
						"i": "std::__1::__function::__use_small_storage",
						"r": "template <typename _Fun> __use_small_storage : public integral_constant<bool, sizeof(_Fun) <",
						"s": "std::__1::__function",
						"u": "__USE_SMALL_STORAGE",
						"q": "std::__1::__function::__use_small_storage",
						"w": "STD::__1::__FUNCTION::__USE_SMALL_STORAGE",
						"y": "std::__1::integral_constant",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "799a5977ad325b77dee1686c2990336d2b80fe48"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy",
						"t": "std::__function::__policy",
						"i": "std::__function::__policy",
						"r": "__policy",
						"s": "std::__1::__function",
						"u": "__POLICY",
						"q": "std::__function::__policy",
						"w": "STD::__FUNCTION::__POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de9904435b18751f4ceb3e79b644c4942aa1f21d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__clone",
						"t": "void *(*const)(const void *)",
						"i": "std::__1::__function::__policy::__clone",
						"r": "void *(*const __clone)(const void *)",
						"s": "std::__1::__function",
						"u": "__CLONE",
						"q": "std::__1::__function::__policy",
						"w": "STD::__1::__FUNCTION::__POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9754be948c1668b1cb62b87b3aa9febb173dff2a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__destroy",
						"t": "void (*const)(void *)",
						"i": "std::__1::__function::__policy::__destroy",
						"r": "void (*const __destroy)(void *)",
						"s": "std::__1::__function",
						"u": "__DESTROY",
						"q": "std::__1::__function::__policy",
						"w": "STD::__1::__FUNCTION::__POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f3f04e722cbf151de07ceba233f2a6859a65b7c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_null",
						"t": "const bool",
						"i": "std::__1::__function::__policy::__is_null",
						"r": "const bool __is_null",
						"s": "std::__1::__function",
						"u": "__IS_NULL",
						"q": "std::__1::__function::__policy",
						"w": "STD::__1::__FUNCTION::__POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64b6edad59512a3c3fc371553d3bb8385bbea6b6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__type_info",
						"t": "const std::type_info *const",
						"i": "std::__1::__function::__policy::__type_info",
						"r": "const std::type_info *const __type_info",
						"s": "std::__1::__function",
						"u": "__TYPE_INFO",
						"q": "std::__1::__function::__policy",
						"w": "STD::__1::__FUNCTION::__POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "699d69d90299bfa4beffd32a3827c76a5a32881a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__create",
						"t": "const __policy *()",
						"i": "std::__1::__function::__policy::",
						"r": "template <typename _Fun> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static const __policy *__create()",
						"s": "std::__1::__function",
						"u": "__CREATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e27d93e5976133d5a63806ca716059da0839f815"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__create_empty",
						"t": "const __policy *()",
						"i": "std::__1::__function::__policy::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static const __policy *__create_empty()",
						"s": "std::__1::__function",
						"u": "__CREATE_EMPTY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57ab3f2a6d819124acb6eacaeec8e86dfa6d0625"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__large_clone",
						"t": "void *(const void *)",
						"i": "std::__1::__function::__policy::",
						"r": "template <typename _Fun> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static void *__large_clone(const void *__s)",
						"s": "std::__1::__function",
						"u": "__LARGE_CLONE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d81f9b330a97012699e36be05c546036b9f8d53"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__large_destroy",
						"t": "void (void *)",
						"i": "std::__1::__function::__policy::",
						"r": "template <typename _Fun> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static void __large_destroy(void *__s)",
						"s": "std::__1::__function",
						"u": "__LARGE_DESTROY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2759e57b9d56efb18fff17058593f4e75f70516b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__choose_policy",
						"t": "const __policy *(false_type)",
						"i": "std::__1::__function::__policy::",
						"r": "template <typename _Fun> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static const __policy *__choose_policy(false_type)",
						"s": "std::__1::__function",
						"u": "__CHOOSE_POLICY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a642bd4efcda7b14c19a0eac106be62e9e5cc862"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__choose_policy",
						"t": "const __policy *(true_type)",
						"i": "std::__1::__function::__policy::",
						"r": "template <typename _Fun> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) static const __policy *__choose_policy(true_type)",
						"s": "std::__1::__function",
						"u": "__CHOOSE_POLICY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb78a01abad972bfa495373fc90c2f4773a4b2c7"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__fast_forward",
						"t": "std::__function::__fast_forward",
						"i": "std::__function::__fast_forward",
						"r": "using __fast_forward",
						"s": "std::__1::__function",
						"u": "__FAST_FORWARD",
						"q": "std::__function",
						"w": "STD::__FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "428ab09aecee747b03250b2afd3e02168f82e245"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__policy_invoker",
						"t": "",
						"i": "std::__1::__function::__policy_invoker",
						"r": "template <class _Fp> __policy_invoker",
						"s": "std::__1::__function",
						"u": "__POLICY_INVOKER",
						"q": "std::__1::__function::__policy_invoker",
						"w": "STD::__1::__FUNCTION::__POLICY_INVOKER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c94ae4ff7f30ae01188804723271eaf38b44a9cf"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__Call",
						"t": "std::__function::__policy_invoker<type-parameter-0-0 (type-parameter-0-1...)>::__Call",
						"i": "std::__function::__policy_invoker::__Call",
						"r": "typedef _Rp (*__Call)(const __policy_storage *, __fast_forward<_ArgTypes>...)",
						"s": "",
						"u": "__CALL",
						"q": "std::__function::__policy_invoker",
						"w": "STD::__FUNCTION::__POLICY_INVOKER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f70beaf684dbc3351197df5e6c8d3615909331d3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__call_",
						"t": "__Call",
						"i": "__call_",
						"r": "__Call __call_",
						"s": "",
						"u": "__CALL_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf2e902083eaf7f880fbe6e8f41a2bd7b91ce276"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__policy_func",
						"t": "",
						"i": "std::__1::__function::__policy_func",
						"r": "template <class _Fp> __policy_func",
						"s": "std::__1::__function",
						"u": "__POLICY_FUNC",
						"q": "std::__1::__function::__policy_func",
						"w": "STD::__1::__FUNCTION::__POLICY_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87dea7bccb4df61ba693d938364c4c41ce21ed70"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__buf_",
						"t": "__policy_storage",
						"i": "__buf_",
						"r": "__policy_storage __buf_",
						"s": "",
						"u": "__BUF_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9954c1c79fb3e36f7014fd12b57e46a2d06b0096"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoker",
						"t": "std::__function::__policy_func<type-parameter-0-0 (type-parameter-0-1...)>::__invoker",
						"i": "std::__function::__policy_func::__invoker",
						"r": "typedef __function::__policy_invoker<_Rp (_ArgTypes...)> __invoker",
						"s": "",
						"u": "__INVOKER",
						"q": "std::__function::__policy_func",
						"w": "STD::__FUNCTION::__POLICY_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c01bdde949a5b61249b6edb48fc48172c421ba06"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoker_",
						"t": "__invoker",
						"i": "__invoker_",
						"r": "__invoker __invoker_",
						"s": "",
						"u": "__INVOKER_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "410b51f14960c434b00d9e276e97fc820fd15960"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_",
						"t": "const __policy *",
						"i": "__policy_",
						"r": "const __policy *__policy_",
						"s": "",
						"u": "__POLICY_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b81bfa5647d7a99a788974ef43dfdee5d7d2d569"
							}
						]
					},
					{
						"k": 26,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator bool",
						"t": "bool () const noexcept",
						"i": "operator bool()const",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) explicit operator bool() const",
						"s": "",
						"u": "OPERATOR BOOL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48960128424ec0b58ced3e2d55c841b12912a8dd"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__func",
						"t": "std::function<type-parameter-0-0 (type-parameter-0-1...)>::__func",
						"i": "std::function::__func",
						"r": "typedef __function::__value_func<_Rp (_ArgTypes...)> __func",
						"s": "",
						"u": "__FUNC",
						"q": "std::function",
						"w": "STD::FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9dd582b82a3cf1b4f57322958d8477cc756dc391"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "__func",
						"i": "__f_",
						"r": "__func __f_",
						"s": "",
						"u": "__F_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65b5c0e1eb06c5e02fc8130ab27763de3678642a"
							}
						]
					},
					{
						"k": 31,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__callable",
						"t": "",
						"i": "__callable",
						"r": "template <class _Fp, bool",
						"s": "",
						"u": "__CALLABLE",
						"q": "__callable",
						"w": "__CALLABLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b50b89af198c41ee1766c015074237538f5f4ac8"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "value",
						"r": "static const bool value",
						"s": "",
						"u": "VALUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "900e43d4a5cb8396db2823a594408ad2e8f4054b"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "value",
						"r": "static const bool value",
						"s": "",
						"u": "VALUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3322dc8d14d2639afdec166151ee537c20fe6d2e"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_EnableIfLValueCallable",
						"t": "std::function<type-parameter-0-0 (type-parameter-0-1...)>::_EnableIfLValueCallable",
						"i": "std::function::_EnableIfLValueCallable",
						"r": "using _EnableIfLValueCallable",
						"s": "",
						"u": "_ENABLEIFLVALUECALLABLE",
						"q": "std::function",
						"w": "STD::FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df4334e3627848bd483bbc746f6c652369daac92"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "result_type",
						"t": "std::function<type-parameter-0-0 (type-parameter-0-1...)>::result_type",
						"i": "std::function::result_type",
						"r": "typedef _Rp result_type",
						"s": "",
						"u": "RESULT_TYPE",
						"q": "std::function",
						"w": "STD::FUNCTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3609acf618d47960cf8f75c41e2966ffba4838bc"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (const function<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "function(const function&)",
						"r": "function<type-parameter-0-0 (type-parameter-0-1...)>(const function<type-parameter-0-0 (type-parameter-0-1...)>&) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d2a4f559b5988d4a53c86a1bd1c3425445b85dc"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (function<type-parameter-0-0 (type-parameter-0-1...)> &&) noexcept",
						"i": "function(function&&)",
						"r": "function<type-parameter-0-0 (type-parameter-0-1...)>(function<type-parameter-0-0 (type-parameter-0-1...)>&&) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c45d47428e673e47c79012f58e3be8976716ddcc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (_Fp)",
						"i": "function(_Fp)",
						"r": "template <class _Fp, class",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ce442e94a27b80a526352eda5ebebdf12b7fbb7"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<type-parameter-0-0 (type-parameter-0-1...)> &(const function<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "operator=(const function&)",
						"r": "function<type-parameter-0-0 (type-parameter-0-1...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "983947c002f646d0bd1935fc6555c586c764156b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<type-parameter-0-0 (type-parameter-0-1...)> &(function<type-parameter-0-0 (type-parameter-0-1...)> &&) noexcept",
						"i": "operator=(function&&)",
						"r": "function<type-parameter-0-0 (type-parameter-0-1...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19312e1b6bb8af8f22f8cdf98aaae1436c1232d0"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<type-parameter-0-0 (type-parameter-0-1...)> &(nullptr_t) noexcept",
						"i": "operator=(nullptr_t)",
						"r": "function<type-parameter-0-0 (type-parameter-0-1...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f26febba55e124a5e4375e32fe57547f4819c704"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<type-parameter-0-0 (type-parameter-0-1...)> &(_Fp &&)",
						"i": "operator=(_Fp&&)",
						"r": "template <class _Fp, class",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f5723035f7a690924e4853284c2b24b2d47460f"
							}
						]
					},
					{
						"k": 25,
						"d": false,
						"iv": false,
						"is": false,
						"n": "~function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void ()",
						"i": "~function()",
						"r": "~function<type-parameter-0-0 (type-parameter-0-1...)>() __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "~FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f71104260401c7c5d3efb8bed17741c3339b42ba"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "swap",
						"t": "void (function<type-parameter-0-0 (type-parameter-0-1...)> &) noexcept",
						"i": "swap(function&)",
						"r": "void swap(function<type-parameter-0-0 (type-parameter-0-1...)>&) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75d93e3fca7f44cd0ee2285ee153cd7f18e0b0fd"
							}
						]
					},
					{
						"k": 26,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator bool",
						"t": "bool () const noexcept",
						"i": "operator bool()const",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) explicit operator bool() const",
						"s": "",
						"u": "OPERATOR BOOL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48960128424ec0b58ced3e2d55c841b12912a8dd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (const function<_R2 (_ArgTypes2...)> &) const",
						"i": "operator==(const function&)const=delete",
						"r": "template <class _R2, class ..._ArgTypes2> bool operator",
						"s": "",
						"u": "OPERATOR==",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cccc15eeb0045ba1bd372e34d3464ea10a93ddf6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator!=",
						"t": "bool (const function<_R2 (_ArgTypes2...)> &) const",
						"i": "operator!=(const function&)const=delete",
						"r": "template <class _R2, class ..._ArgTypes2> bool operator!",
						"s": "",
						"u": "OPERATOR!=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a99a17368bafb3fa20732390cd9b0eb320cd40a"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Rp (_ArgTypes...) const",
						"i": "operator()(_ArgTypes...)const",
						"r": "_Rp operator()(_ArgTypes ...) const __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01b88100ee41047ba45343271336286871f1ce78"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target_type",
						"t": "const std::type_info &() const noexcept",
						"i": "target_type()const",
						"r": "const std::type_info& target_type() const __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "TARGET_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1e32b1c3c22197a4ea90297bfa5e3657e8f920f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target",
						"t": "_Tp *() noexcept",
						"i": "target()",
						"r": "template <typename _Tp> _Tp *target() __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c08ea6c70ace2e5fbbfc305327564cf6840ad4f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target",
						"t": "const _Tp *() const noexcept",
						"i": "target()const",
						"r": "template <typename _Tp> const _Tp *target() const __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\")))",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d96155b6477c6d7065f0f0f05f90b06b93a89235"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for function>",
						"t": "auto (_Rp (*)(_Ap...)) -> function<_Rp (_Ap...)>",
						"i": "std::__1::function(_Rp(*)(_Ap...))",
						"r": "template <class _Rp, class ..._Ap> function(_Rp (*)(_Ap...))",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR FUNCTION>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "609a545c7fd700291a05aec0880dcce26b2f6045"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "<deduction guide for function>",
						"t": "auto (_Fp) -> function<_Stripped>",
						"i": "std::__1::function(_Fp)",
						"r": "template <class _Fp, class _Stripped",
						"s": "std::__1",
						"u": "<DEDUCTION GUIDE FOR FUNCTION>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2ae6868f20f9db04a45010947a395af90b95267"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (const function<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "function(const function&)",
						"r": "template <class _Rp, class ..._ArgTypes> function<type-parameter-0-0 (type-parameter-0-1...)>(const function<type-parameter-0-0 (type-parameter-0-1...)>& __f)",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae6ea8c36122408fd1e962b6e3801e349ae4b5d0"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (function<type-parameter-0-0 (type-parameter-0-1...)> &&) noexcept",
						"i": "function(function&&)",
						"r": "template <class _Rp, class ..._ArgTypes> function<type-parameter-0-0 (type-parameter-0-1...)>(function<type-parameter-0-0 (type-parameter-0-1...)>&& __f)",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "79bba53f4d8fcc9fa9b5839ef21ed90fb64f2464"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void (_Fp)",
						"i": "function(_Fp)",
						"r": "template <class _Rp, class ..._ArgTypes> template <class _Fp, class",
						"s": "",
						"u": "FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f927243e2530949f519a7942856e9d4b05d9d0b0"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<_Rp (_ArgTypes...)> &(const function<type-parameter-0-0 (type-parameter-0-1...)> &)",
						"i": "operator=(const function&)",
						"r": "template <class _Rp, class ..._ArgTypes> function<_Rp (_ArgTypes...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f5bbe56d24d3a0e60382d8b4a046b5334756dbd"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<_Rp (_ArgTypes...)> &(function<type-parameter-0-0 (type-parameter-0-1...)> &&) noexcept",
						"i": "operator=(function&&)",
						"r": "template <class _Rp, class ..._ArgTypes> function<_Rp (_ArgTypes...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fe26f08ba0f4d6d7d707a7b22c306e44010a306"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<_Rp (_ArgTypes...)> &(nullptr_t) noexcept",
						"i": "operator=(nullptr_t)",
						"r": "template <class _Rp, class ..._ArgTypes> function<_Rp (_ArgTypes...)>& operator",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ebac2512ee1540ff6fdb2545debb3b9003fe7f8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "function<_Rp (_ArgTypes...)> &(_Fp &&)",
						"i": "operator=(_Fp&&)",
						"r": "template <class _Rp, class ..._ArgTypes> template <class _Fp, class",
						"s": "",
						"u": "OPERATOR=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "acb93ca6d6d3b2b8f14e75f617ca7e0588460190"
							}
						]
					},
					{
						"k": 25,
						"d": false,
						"iv": false,
						"is": false,
						"n": "~function<type-parameter-0-0 (type-parameter-0-1...)>",
						"t": "void ()",
						"i": "~function()",
						"r": "template <class _Rp, class ..._ArgTypes> ~function<type-parameter-0-0 (type-parameter-0-1...)>()",
						"s": "",
						"u": "~FUNCTION<TYPE-PARAMETER-0-0 (TYPE-PARAMETER-0-1...)>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "187c28f0c0e4c712163980212a8d9d072546392e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "swap",
						"t": "void (function<type-parameter-0-0 (type-parameter-0-1...)> &) noexcept",
						"i": "swap(function&)",
						"r": "template <class _Rp, class ..._ArgTypes> void swap(function<type-parameter-0-0 (type-parameter-0-1...)>& __f)",
						"s": "",
						"u": "SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c67510566603796af0dc09d6899f60091b06602"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Rp (_ArgTypes...) const",
						"i": "operator()(_ArgTypes...)const",
						"r": "template <class _Rp, class ..._ArgTypes> _Rp operator()(_ArgTypes ...__arg) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cd878c3f16ae80858ae88111e86973363f8d8c5"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target_type",
						"t": "const std::type_info &() const noexcept",
						"i": "target_type()const",
						"r": "template <class _Rp, class ..._ArgTypes> const std::type_info& target_type() const",
						"s": "",
						"u": "TARGET_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "31044c32c0eb1685e54c573e7421af114bb2e1d1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target",
						"t": "_Tp *() noexcept",
						"i": "target()",
						"r": "template <class _Rp, class ..._ArgTypes> template <typename _Tp> _Tp *target()",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e99cefd7f66d17d67776571a08bbb358818a9209"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "target",
						"t": "const _Tp *() const noexcept",
						"i": "target()const",
						"r": "template <class _Rp, class ..._ArgTypes> template <typename _Tp> const _Tp *target() const",
						"s": "",
						"u": "TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "644cfbfecf094d156339c195f7cb6dff393a7f2f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (const function<_Rp (_ArgTypes...)> &, nullptr_t) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator",
						"s": "std::__1",
						"u": "OPERATOR==",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0b78d7a093b9fdf7dd929dc141ddd0506e80cc9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (nullptr_t, const function<_Rp (_ArgTypes...)> &) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator",
						"s": "std::__1",
						"u": "OPERATOR==",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23ef45efca91312760dd37e305efcb6c773b6651"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator!=",
						"t": "bool (const function<_Rp (_ArgTypes...)> &, nullptr_t) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator!",
						"s": "std::__1",
						"u": "OPERATOR!=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa3a45b949020db69d05bdbb2b4242d2ca5d1981"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator!=",
						"t": "bool (nullptr_t, const function<_Rp (_ArgTypes...)> &) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) bool operator!",
						"s": "std::__1",
						"u": "OPERATOR!=",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "870f2a09e57123ab5dc83e54bb40676439d622bd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "swap",
						"t": "void (function<_Rp (_ArgTypes...)> &, function<_Rp (_ArgTypes...)> &) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) void swap(function<_Rp (_ArgTypes...)>& __x, function<_Rp (_ArgTypes...)>& __y)",
						"s": "std::__1",
						"u": "SWAP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8647681e8cde66566407693f41074ccd6a5472f"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/mem_fn.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_MEM_FN_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_MEM_FN_H",
						"r": "_LIBCPP___FUNCTIONAL_MEM_FN_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_MEM_FN_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8db56fcde713c45b5a0c147cb057de8cbef66cdb"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mem_fn",
						"t": "",
						"i": "std::__1::__mem_fn",
						"r": "template <class _Tp> __mem_fn : public __weak_result_type<_Tp>",
						"s": "std::__1",
						"u": "__MEM_FN",
						"q": "std::__1::__mem_fn",
						"w": "STD::__1::__MEM_FN",
						"y": "std::__1::__weak_result_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d31a7c79663c5381e3b0fc6343b26de8dcebb20"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "std::__mem_fn::type",
						"i": "std::__mem_fn::type",
						"r": "typedef _Tp type",
						"s": "std::__1",
						"u": "TYPE",
						"q": "std::__mem_fn",
						"w": "STD::__MEM_FN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78cc64619d4289f5678dbfdb028da3d5780462ae"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__f_",
						"t": "type",
						"i": "std::__1::__mem_fn::__f_",
						"r": "type __f_",
						"s": "std::__1",
						"u": "__F_",
						"q": "std::__1::__mem_fn",
						"w": "STD::__1::__MEM_FN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16952c6dcf142c6c84e6d25e7883e947cf823fc0"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mem_fn<_Tp>",
						"t": "void (type) noexcept",
						"i": "std::__1::__mem_fn::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __mem_fn<_Tp>(type __f)",
						"s": "std::__1",
						"u": "__MEM_FN<_TP>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6e2b84007fb6799ca85380ce483a29cd56e1f0e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename __invoke_return<type, _ArgTypes...>::type (_ArgTypes &&...) const",
						"i": "std::__1::__mem_fn::",
						"r": "template <class ..._ArgTypes> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) typename __invoke_return<type, _ArgTypes...>::type operator()(_ArgTypes&&...__args) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0bb552762aea0e42f950009a2c16148f8758642e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mem_fn",
						"t": "__mem_fn<_Rp _Tp::*> (_Rp _Tp::*) noexcept",
						"i": "std::__1::",
						"r": "template <class _Rp, class _Tp> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) __mem_fn<_Rp _Tp::*> mem_fn(_Rp _Tp::*__pm)",
						"s": "std::__1",
						"u": "MEM_FN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b5a31f5b54f015aa5b890c736a3321ee8da82e4"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/mem_fun_ref.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H",
						"r": "_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d807b918c4b38f983938f89288ebcd2420c56aed"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/not_fn.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_NOT_FN_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_NOT_FN_H",
						"r": "_LIBCPP___FUNCTIONAL_NOT_FN_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_NOT_FN_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e6bc1011096a54bc056f7cc79d84642a0a6b5e9"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_fn_op",
						"t": "std::__not_fn_op",
						"i": "std::__not_fn_op",
						"r": "__not_fn_op",
						"s": "std::__1",
						"u": "__NOT_FN_OP",
						"q": "std::__not_fn_op",
						"w": "STD::__NOT_FN_OP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5018c83673dda875b23ceab707b551c47ea5a61e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "auto (_Args &&...) const noexcept(noexcept(!std::invoke(std::forward<_Args>(__args)...))) -> decltype(!std::invoke(std::forward<_Args>(__args)...))",
						"i": "std::__1::__not_fn_op::",
						"r": "template <class ..._Args> __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) auto operator()(_Args&&...__args) const ((!std::invoke(std::forward<_Args>(__args)...)))",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb00f74be4fdd91e8a5b95b6f5d1b07f6b39d197"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_fn_t",
						"t": "",
						"i": "std::__1::__not_fn_t",
						"r": "template <class _Fn> __not_fn_t : __perfect_forward<__not_fn_op, _Fn>",
						"s": "std::__1",
						"u": "__NOT_FN_T",
						"q": "std::__1::__not_fn_t",
						"w": "STD::__1::__NOT_FN_T",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9316115bb8a044bc53ea511ccd446f26197b4c08"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "not_fn",
						"t": "auto (_Fn &&)",
						"i": "std::__1::",
						"r": "template <class _Fn, class",
						"s": "std::__1",
						"u": "NOT_FN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65d1754f7da69ebc67cd15e5507943b53ad58b3b"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/pointer_to_binary_function.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H",
						"r": "_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aec9bcbd51c628a1eccc095506301cac05a6de90"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/pointer_to_unary_function.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H",
						"r": "_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "679cd47d9473942ce3700b432ea91f00467a9ce9"
							}
						]
					}
				]
			}
		},
		{
			"key": "c++/v1/__functional/unary_negate.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H",
						"t": "",
						"i": "_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H",
						"r": "_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H",
						"s": "",
						"u": "_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa068aa24d3bfdb1ebd51c2e436b6c39e7a28774"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unary_negate",
						"t": "",
						"i": "std::__1::unary_negate",
						"r": "template <class _Predicate> __attribute__((deprecated(\"\"))) unary_negate : public __unary_function<typename _Predicate::argument_type, bool>",
						"s": "std::__1",
						"u": "UNARY_NEGATE",
						"q": "std::__1::unary_negate",
						"w": "STD::__1::UNARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c327c11cf3ecb1d0ea6f72700f2a5df47b448cd7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pred_",
						"t": "_Predicate",
						"i": "std::__1::unary_negate::__pred_",
						"r": "_Predicate __pred_",
						"s": "std::__1",
						"u": "__PRED_",
						"q": "std::__1::unary_negate",
						"w": "STD::__1::UNARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cde02bb162a34859639c1d353ac85c5e476414b"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unary_negate<_Predicate>",
						"t": "void (const _Predicate &)",
						"i": "std::__1::unary_negate::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr explicit unary_negate<_Predicate>(const _Predicate& __pred)",
						"s": "std::__1",
						"u": "UNARY_NEGATE<_PREDICATE>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b07917e8920de15cb168da38b689659e922853b6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const typename _Predicate::argument_type &) const",
						"i": "std::__1::unary_negate::",
						"r": "__attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr bool operator()(const typename _Predicate::argument_type& __x) const",
						"s": "std::__1",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "daed42cb0cb329b80fd985a38d91e7e071d25599"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "not1",
						"t": "unary_negate<_Predicate> (const _Predicate &)",
						"i": "std::__1::",
						"r": "template <class _Predicate> __attribute__((deprecated(\"\"))) __attribute__((exclude_from_explicit_instantiation)) __attribute__((abi_tag(\"ne180100\"))) constexpr unary_negate<_Predicate> not1(const _Predicate& __pred)",
						"s": "std::__1",
						"u": "NOT1",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b393f837af20d6a8efe3509a00ab4b529da0eaf"
							}
						]
					}
				]
			}
		}
	]
}