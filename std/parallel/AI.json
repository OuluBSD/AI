{
	"saved_hash": "808d52347f5e0d962a428c53cef4e1501d8e8abf",
	"files": [
		{
			"key": "parallel/numeric",
			"value": {
				"items": [

				]
			}
		},
		{
			"key": "parallel/numericfwd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_NUMERICFWD_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_NUMERICFWD_H",
						"r": "_GLIBCXX_PARALLEL_NUMERICFWD_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_NUMERICFWD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac1a282347068cea67d1010e00cedea50c8c6a0f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp)",
						"r": "template <typename _IIter, typename _Tp> _Tp accumulate(_IIter, _IIter, _Tp)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5934ba3b514f6624f5e820ed764dc17b0be8b2d3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp> _Tp accumulate(_IIter, _IIter, _Tp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18bc007ac7c2b2b3ca42aafd100a1362679e3f5b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Tp> _Tp accumulate(_IIter, _IIter, _Tp, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95e9f15927716d5613dcbd2ca48c29baf34f653a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__accumulate_switch",
						"t": "_Tp (_IIter, _IIter, _Tp, _Tag)",
						"i": "std::__parallel::__accumulate_switch(_IIter,_IIter,_Tp,_Tag)",
						"r": "template <typename _IIter, typename _Tp, typename _Tag> _Tp __accumulate_switch(_IIter, _IIter, _Tp, _Tag)",
						"s": "std::__parallel",
						"u": "__ACCUMULATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48db68f019f3143235ec89603c2bcfe20e6a4daa"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp, _BinaryOper)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp,_BinaryOper)",
						"r": "template <typename _IIter, typename _Tp, typename _BinaryOper> _Tp accumulate(_IIter, _IIter, _Tp, _BinaryOper)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da91d8a9e13a47540fafa555e3da851e8827ee7d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp, _BinaryOper, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp,_BinaryOper,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp, typename _BinaryOper> _Tp accumulate(_IIter, _IIter, _Tp, _BinaryOper, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f563a8fe857eeb689650438ec9f739320e49dce0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "accumulate",
						"t": "_Tp (_IIter, _IIter, _Tp, _BinaryOper, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::accumulate(_IIter,_IIter,_Tp,_BinaryOper,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Tp, typename _BinaryOper> _Tp accumulate(_IIter, _IIter, _Tp, _BinaryOper, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "ACCUMULATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8dc742fd1da6af4ffdd29a24f8388fae0e91905b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__accumulate_switch",
						"t": "_Tp (_IIter, _IIter, _Tp, _BinaryOper, _Tag)",
						"i": "std::__parallel::__accumulate_switch(_IIter,_IIter,_Tp,_BinaryOper,_Tag)",
						"r": "template <typename _IIter, typename _Tp, typename _BinaryOper, typename _Tag> _Tp __accumulate_switch(_IIter, _IIter, _Tp, _BinaryOper, _Tag)",
						"s": "std::__parallel",
						"u": "__ACCUMULATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c061ae366e61c8a2c944622513a7107ba62f6fb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__accumulate_switch",
						"t": "_Tp (_RAIter, _RAIter, _Tp, _BinaryOper, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__accumulate_switch(_RAIter,_RAIter,_Tp,_BinaryOper,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Tp, typename _BinaryOper> _Tp __accumulate_switch(_RAIter, _RAIter, _Tp, _BinaryOper, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__ACCUMULATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e27b574277a08d532c849f7ba4c1ae0f79bf4af9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter)",
						"r": "template <typename _IIter, typename _OIter> _OIter adjacent_difference(_IIter, _IIter, _OIter)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "768a01fab31c10022799fa594103a90dfae9cc29"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter,_BinaryOper)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter adjacent_difference(_IIter, _IIter, _OIter, _BinaryOper)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca8260c6af5c11e3f522f9f7af3b5181db50b91b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter> _OIter adjacent_difference(_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8007c6816e0a41df1f4f63b3c0a6d2a48616b60b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter,_BinaryOper,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter adjacent_difference(_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c8cd4cd1a25e40f67d35c63c8708f2355eeed4f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _OIter> _OIter adjacent_difference(_IIter, _IIter, _OIter, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84cc8aac30634ccfe2feb78ca86a59a409f9d5e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::adjacent_difference(_IIter,_IIter,_OIter,_BinaryOper,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter adjacent_difference(_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a88757cebba6b3376390c32561658c46bf1bd66"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_difference_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)",
						"i": "std::__parallel::__adjacent_difference_switch(_IIter,_IIter,_OIter,_BinaryOper,_Tag1,_Tag2)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper, typename _Tag1, typename _Tag2> _OIter __adjacent_difference_switch(_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)",
						"s": "std::__parallel",
						"u": "__ADJACENT_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "30a74c68f969c92764c78d70073416457e290aad"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_difference_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__adjacent_difference_switch(_IIter,_IIter,_OIter,_BinaryOper,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter __adjacent_difference_switch(_IIter, _IIter, _OIter, _BinaryOper, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__ADJACENT_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90582c7e390ef50af570dcc669f7166d295ddcca"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd903da332055d6eb8c380dc33e7c8c60f6b1480"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32279f3041c73aea21a90d71b763487c699f218f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93f1a356ba94a9f7f12dfe7263d38be27d62e15f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp,_BinaryFunction1,_BinaryFunction2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp, typename _BinaryFunction1, typename _BinaryFunction2> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5722ca3328f06ed9d7853d0233f12a35c810c888"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp,_BinaryFunction1,_BinaryFunction2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp, typename _BinaryFunction1, typename _BinaryFunction2> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ac4a5d7ae46dc34e8047bf51d5a4eba3d4e91ca"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inner_product",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::inner_product(_IIter1,_IIter1,_IIter2,_Tp,_BinaryFunction1,_BinaryFunction2,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp, typename _BinaryFunction1, typename _BinaryFunction2> _Tp inner_product(_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "INNER_PRODUCT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17ad4105615e3cac4fe9b2610b31bc77eeecf16a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__inner_product_switch",
						"t": "_Tp (_RAIter1, _RAIter1, _RAIter2, _Tp, _BinaryFunction1, _BinaryFunction2, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__inner_product_switch(_RAIter1,_RAIter1,_RAIter2,_Tp,_BinaryFunction1,_BinaryFunction2,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Tp, typename _BinaryFunction1, typename _BinaryFunction2> _Tp __inner_product_switch(_RAIter1, _RAIter1, _RAIter2, _Tp, _BinaryFunction1, _BinaryFunction2, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__INNER_PRODUCT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41e48c3ca7c1797ed7f04e8b51bc70b2198a42d9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__inner_product_switch",
						"t": "_Tp (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, _Tag1, _Tag2)",
						"i": "std::__parallel::__inner_product_switch(_IIter1,_IIter1,_IIter2,_Tp,_BinaryFunction1,_BinaryFunction2,_Tag1,_Tag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Tp, typename _BinaryFunction1, typename _BinaryFunction2, typename _Tag1, typename _Tag2> _Tp __inner_product_switch(_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, _Tag1, _Tag2)",
						"s": "std::__parallel",
						"u": "__INNER_PRODUCT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52a50f1fc47e5be526937fe1667bf06808cce40a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sum",
						"t": "_OIter (_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sum(_IIter,_IIter,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter> _OIter partial_sum(_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SUM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3484cd0163ad146edcb506ec6096343ad9fc8a1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sum",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sum(_IIter,_IIter,_OIter,_BinaryOper,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter partial_sum(_IIter, _IIter, _OIter, _BinaryOper, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SUM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25af955ad21eb85c535dc6fb7031498e992eaac0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sum",
						"t": "_OIter (_IIter, _IIter, _OIter)",
						"i": "std::__parallel::partial_sum(_IIter,_IIter,_OIter)",
						"r": "template <typename _IIter, typename _OIter> _OIter partial_sum(_IIter, _IIter, _OIter __result)",
						"s": "std::__parallel",
						"u": "PARTIAL_SUM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd3a2df53fc1dbd636c930e3454919f305e8ffcd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sum",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper)",
						"i": "std::__parallel::partial_sum(_IIter,_IIter,_OIter,_BinaryOper)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter partial_sum(_IIter, _IIter, _OIter, _BinaryOper)",
						"s": "std::__parallel",
						"u": "PARTIAL_SUM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f36b78ebcd8b712b4739523c621580eef27f6cc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partial_sum_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)",
						"i": "std::__parallel::__partial_sum_switch(_IIter,_IIter,_OIter,_BinaryOper,_Tag1,_Tag2)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper, typename _Tag1, typename _Tag2> _OIter __partial_sum_switch(_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)",
						"s": "std::__parallel",
						"u": "__PARTIAL_SUM_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "02b2d9c8206a34188868e6192403e9a721dacef0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partial_sum_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _BinaryOper, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__partial_sum_switch(_IIter,_IIter,_OIter,_BinaryOper,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _IIter, typename _OIter, typename _BinaryOper> _OIter __partial_sum_switch(_IIter, _IIter, _OIter, _BinaryOper, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__PARTIAL_SUM_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fdf31641bffe4b9d114f0f668237a90ff327120"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/partial_sum.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_PARTIAL_SUM_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_PARTIAL_SUM_H",
						"r": "_GLIBCXX_PARALLEL_PARTIAL_SUM_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_PARTIAL_SUM_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18cd6be3b32ee61b0ba503c7b3c5d9941316501b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_partial_sum_basecase",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _BinaryOperation, typename std::iterator_traits<_IIter>::value_type)",
						"i": "__gnu_parallel::__parallel_partial_sum_basecase(_IIter,_IIter,_OutputIterator,_BinaryOperation,typename std::iterator_traits::value_type)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _BinaryOperation> _OutputIterator __parallel_partial_sum_basecase(_IIter __begin, _IIter __end, _OutputIterator __result, _BinaryOperation __bin_op, typename std::iterator_traits<_IIter>::value_type __value)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_PARTIAL_SUM_BASECASE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9f8187360caa775ada5b4116c777ddea4d4620c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_partial_sum_linear",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _BinaryOperation, typename std::iterator_traits<_IIter>::difference_type)",
						"i": "__gnu_parallel::__parallel_partial_sum_linear(_IIter,_IIter,_OutputIterator,_BinaryOperation,typename std::iterator_traits::difference_type)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _BinaryOperation> _OutputIterator __parallel_partial_sum_linear(_IIter __begin, _IIter __end, _OutputIterator __result, _BinaryOperation __bin_op, typename std::iterator_traits<_IIter>::difference_type __n)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_PARTIAL_SUM_LINEAR",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b8e38afa8930b44e96b39b3a0b2917a19a7f623"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_partial_sum",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _BinaryOperation)",
						"i": "__gnu_parallel::__parallel_partial_sum(_IIter,_IIter,_OutputIterator,_BinaryOperation)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _BinaryOperation> _OutputIterator __parallel_partial_sum(_IIter __begin, _IIter __end, _OutputIterator __result, _BinaryOperation __bin_op)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_PARTIAL_SUM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c675227f6ed8919bc7b55bfe0ac109bfb03fbf5"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/algobase.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ALGOBASE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ALGOBASE_H",
						"r": "_GLIBCXX_PARALLEL_ALGOBASE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ALGOBASE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "326e7ecc4ea6ffa2d1263ffddcb94593ee01bd07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> pair<_IIter1, _IIter2> mismatch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16a1a6891231881cc559379a639cc4685f0588bd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> pair<_IIter1, _IIter2> mismatch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1efff5c3c167ba716f6921452a04310c2c3b9e09"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__mismatch_switch(_IIter1,_IIter1,_IIter2,_Predicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IteratorTag1, typename _IteratorTag2> pair<_IIter1, _IIter2> __mismatch_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _Predicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a03be564881feb6475d0cfd529eb49c4456f8b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__mismatch_switch(_RAIter1,_RAIter1,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> pair<_RAIter1, _RAIter2> __mismatch_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8318012174680d932d976d568f055270b3fab40"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> pair<_IIter1, _IIter2> mismatch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fd98d35949274c884951391999184b4da84a9d0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> pair<_IIter1, _IIter2> mismatch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df61ab133a6f89b364930e9fbe87e1975c659c9c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_InputIterator1,_InputIterator1,_InputIterator2,_InputIterator2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e85a4dbdbbcbe3f0ef67f18427850c26484f6b7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_InputIterator1,_InputIterator1,_InputIterator2,_InputIterator2,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __binary_pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "435f2e2b2a5d6ac10f16ab0b8151c6054e345a23"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__mismatch_switch(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IteratorTag1, typename _IteratorTag2> pair<_IIter1, _IIter2> __mismatch_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _Predicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f70fd1a4a459f0bac7fdcce35668f599f2328a69"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__mismatch_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> pair<_RAIter1, _RAIter2> __mismatch_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b696fad78b1d016d0242e04007d990664da66a6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _IIter2)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> pair<_IIter1, _IIter2> mismatch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e7dfa5fac27623478172e96913e9e8f659ba422"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)",
						"i": "std::__parallel::mismatch(_InputIterator1,_InputIterator1,_InputIterator2,_InputIterator2,_BinaryPredicate)",
						"r": "template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __begin1, _InputIterator1 __end1, _InputIterator2 __begin2, _InputIterator2 __end2, _BinaryPredicate __binary_pred)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f193ff8723bed0ac81947f48907702fc9cb0f6a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75a514574804cdf4e4637d20a447781042abb00c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a9d1efcd384135f81d10c0811edb8bba05a1187"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7421b1e3263cd82ad718c342671cff0a1c71c56f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _Predicate)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba1674a746cd66245925206206d20ffb11e07291"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "583e210a48d06cbc56b6a0a0d0bf6003d434ede8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_IIter2,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _BinaryPredicate __binary_pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "205ac1d83d2983629c307e2a89053726419da344"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_switch",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__equal_switch(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IteratorTag1, typename _IteratorTag2> bool __equal_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _Predicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__EQUAL_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e38fc409ab9e8d5c2372b4df8df43fbc364c4e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_switch",
						"t": "bool (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__equal_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> bool __equal_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__EQUAL_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "298b6c712489fdda0a9f1ca2ef713170c6d8758c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef428dd03a9c7e858995063f43fa1cc3573545ca"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _BinaryPredicate)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_IIter2,_BinaryPredicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> bool equal(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _BinaryPredicate __binary_pred)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ebfa5feee7ac16476acb809fca5a44b1024a0bd2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> bool lexicographical_compare(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "46dd9ad3cb65b8914c4014be0c5a911804b4d939"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool lexicographical_compare(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "184bd71a61c0ff29369b6c4d81f589f37af1d7f4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lexicographical_compare_switch",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__lexicographical_compare_switch(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IteratorTag1, typename _IteratorTag2> bool __lexicographical_compare_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _Predicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__LEXICOGRAPHICAL_COMPARE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fc72d8a752d143e7ee396922d2e6b9a52184e69"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lexicographical_compare_switch",
						"t": "bool (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__lexicographical_compare_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> bool __lexicographical_compare_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__LEXICOGRAPHICAL_COMPARE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20462e98cf9adbbe3e23e7212d2b1ea6e9dd10aa"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> bool lexicographical_compare(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25e3f510429e4512d44ebe38c912d5a3a5cc58b2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool lexicographical_compare(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88bfa8ff8b295fea0d2d4514e3f51d3be8eaa07f"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/base.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_BASE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_BASE_H",
						"r": "_GLIBCXX_PARALLEL_BASE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_BASE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3c222a1c9301931a55cbda8e733cb94b0754ba8"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_max_threads",
						"t": "_ThreadIndex ()",
						"i": "__gnu_parallel::__get_max_threads()",
						"r": "__gnu_parallel::_ThreadIndex __get_max_threads()",
						"s": "__gnu_parallel",
						"u": "__GET_MAX_THREADS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6033259152eb9e0473d5e01d264766dc4f4b0133"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_parallel",
						"t": "bool (const _Parallelism)",
						"i": "__gnu_parallel::__is_parallel(const _Parallelism)",
						"r": "bool __is_parallel(const __gnu_parallel::_Parallelism __p)",
						"s": "__gnu_parallel",
						"u": "__IS_PARALLEL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "138ee33e9c0f91cdac26e7560cbc77ee0b3cf581"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__rd_log2",
						"t": "_Size (_Size)",
						"i": "__gnu_parallel::__rd_log2(_Size)",
						"r": "template <typename _Size> _Size __rd_log2(_Size __n)",
						"s": "__gnu_parallel",
						"u": "__RD_LOG2",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c5eb36bf2ed79326c636440bf0605ba377d96d28"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__encode2",
						"t": "_CASable (int, int)",
						"i": "__gnu_parallel::__encode2(int,int)",
						"r": "__gnu_parallel::_CASable __encode2(int __a, int __b)",
						"s": "__gnu_parallel",
						"u": "__ENCODE2",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4562f045365a1c6519c799b4434e958aac56696b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__decode2",
						"t": "void (_CASable, int &, int &)",
						"i": "__gnu_parallel::__decode2(_CASable,int&,int&)",
						"r": "void __decode2(__gnu_parallel::_CASable __x, int& __a, int& __b)",
						"s": "__gnu_parallel",
						"u": "__DECODE2",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75e20fadc11456f4815aa54ef75ba4d1de41969d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "const _Tp &(const _Tp &, const _Tp &)",
						"i": "__gnu_parallel::min(const _Tp&,const _Tp&)",
						"r": "template <typename _Tp> const _Tp& min(const _Tp& __a, const _Tp& __b)",
						"s": "__gnu_parallel",
						"u": "MIN",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37c0038b40b1556e1c9d562099322abb9df854be"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "const _Tp &(const _Tp &, const _Tp &)",
						"i": "__gnu_parallel::max(const _Tp&,const _Tp&)",
						"r": "template <typename _Tp> const _Tp& max(const _Tp& __a, const _Tp& __b)",
						"s": "__gnu_parallel",
						"u": "MAX",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a50cddfa9bc22a0d21ce0b58f75c1a7ce604e79"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_EqualFromLess",
						"t": "",
						"i": "__gnu_parallel::_EqualFromLess",
						"r": "template <typename _T1, typename _T2, typename _Compare> _EqualFromLess : public binary_function<_T1, _T2, bool>",
						"s": "__gnu_parallel",
						"u": "_EQUALFROMLESS",
						"q": "__gnu_parallel::_EqualFromLess",
						"w": "__GNU_PARALLEL::_EQUALFROMLESS",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b789d3eaf83a9fc357720dd8cc321c8c2818edb3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::_EqualFromLess::_M_comp",
						"r": "_Compare& _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_EqualFromLess",
						"w": "__GNU_PARALLEL::_EQUALFROMLESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4186351d175eca3dd2a9a598eca7f4410d3f46bb"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_EqualFromLess<_T1, _T2, _Compare>",
						"t": "void (_Compare &)",
						"i": "__gnu_parallel::_EqualFromLess::_EqualFromLess(_Compare&)",
						"r": "_EqualFromLess<_T1, _T2, _Compare>(_Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "_EQUALFROMLESS<_T1, _T2, _COMPARE>",
						"q": "__gnu_parallel::_EqualFromLess",
						"w": "__GNU_PARALLEL::_EQUALFROMLESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbb6b94f580966e2e9dd2f4e487963177ee00fc5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &, const _T2 &)",
						"i": "__gnu_parallel::_EqualFromLess::operator()(const _T1&,const _T2&)",
						"r": "bool operator()(const _T1& __a, const _T2& __b)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_EqualFromLess",
						"w": "__GNU_PARALLEL::_EQUALFROMLESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e08fef56e938a65c812998fffb2cd4837a2c7c65"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unary_negate",
						"t": "",
						"i": "__gnu_parallel::__unary_negate",
						"r": "template <typename _Predicate, typename argument_type> __unary_negate : public unary_function<argument_type, bool>",
						"s": "__gnu_parallel",
						"u": "__UNARY_NEGATE",
						"q": "__gnu_parallel::__unary_negate",
						"w": "__GNU_PARALLEL::__UNARY_NEGATE",
						"y": "std::unary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de0e973504daa25b069dc8441fcb106b7abc7258"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pred",
						"t": "_Predicate",
						"i": "__gnu_parallel::__unary_negate::_M_pred",
						"r": "_Predicate _M_pred",
						"s": "__gnu_parallel",
						"u": "_M_PRED",
						"q": "__gnu_parallel::__unary_negate",
						"w": "__GNU_PARALLEL::__UNARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3d295cd05a1d8101cd9b0fbec012822a1f6d9fa"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unary_negate<_Predicate, argument_type>",
						"t": "void (const _Predicate &)",
						"i": "__gnu_parallel::__unary_negate::__unary_negate(const _Predicate&)",
						"r": "explicit __unary_negate<_Predicate, argument_type>(const _Predicate& __x)",
						"s": "__gnu_parallel",
						"u": "__UNARY_NEGATE<_PREDICATE, ARGUMENT_TYPE>",
						"q": "__gnu_parallel::__unary_negate",
						"w": "__GNU_PARALLEL::__UNARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4e25223d1b952ee070e01b95d7673962927cc4f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const argument_type &)",
						"i": "__gnu_parallel::__unary_negate::operator()(const argument_type&)",
						"r": "bool operator()(const argument_type& __x)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__unary_negate",
						"w": "__GNU_PARALLEL::__UNARY_NEGATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a89351329c6177e59d6b41da6b65987b0e3d697"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binder1st",
						"t": "",
						"i": "__gnu_parallel::__binder1st",
						"r": "template <typename _Operation, typename _FirstArgumentType, typename _SecondArgumentType, typename _ResultType> __binder1st : public unary_function<_SecondArgumentType, _ResultType>",
						"s": "__gnu_parallel",
						"u": "__BINDER1ST",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "std::unary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3c28e86514ad9ffa9c1bd3235ee0e58fd02e9c3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_op",
						"t": "_Operation",
						"i": "__gnu_parallel::__binder1st::_M_op",
						"r": "_Operation _M_op",
						"s": "__gnu_parallel",
						"u": "_M_OP",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "304ed58a006d8d3fe0e95c09dbb79500fea5c628"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_value",
						"t": "_FirstArgumentType",
						"i": "__gnu_parallel::__binder1st::_M_value",
						"r": "_FirstArgumentType _M_value",
						"s": "__gnu_parallel",
						"u": "_M_VALUE",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fffd3b9d52a780bbeceeff407605b2078c39471f"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binder1st<_Operation, _FirstArgumentType, _SecondArgumentType, _ResultType>",
						"t": "void (const _Operation &, const _FirstArgumentType &)",
						"i": "__gnu_parallel::__binder1st::__binder1st(const _Operation&,const _FirstArgumentType&)",
						"r": "__binder1st<_Operation, _FirstArgumentType, _SecondArgumentType, _ResultType>(const _Operation& __x, const _FirstArgumentType& __y)",
						"s": "__gnu_parallel",
						"u": "__BINDER1ST<_OPERATION, _FIRSTARGUMENTTYPE, _SECONDARGUMENTTYPE, _RESULTTYPE>",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e294ac62096e13498f146f1f805a733b42dac16"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_ResultType (const _SecondArgumentType &)",
						"i": "__gnu_parallel::__binder1st::operator()(const _SecondArgumentType&)",
						"r": "_ResultType operator()(const _SecondArgumentType& __x)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa91a2d90fdd06da967b6b816f64a87fb065ef35"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_ResultType (_SecondArgumentType &) const",
						"i": "__gnu_parallel::__binder1st::operator()(_SecondArgumentType&)const",
						"r": "_ResultType operator()(_SecondArgumentType& __x) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__binder1st",
						"w": "__GNU_PARALLEL::__BINDER1ST",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bd30c847d5d573905e5469d47a239541d5ab683"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binder2nd",
						"t": "",
						"i": "__gnu_parallel::__binder2nd",
						"r": "template <typename _Operation, typename _FirstArgumentType, typename _SecondArgumentType, typename _ResultType> __binder2nd : public unary_function<_FirstArgumentType, _ResultType>",
						"s": "__gnu_parallel",
						"u": "__BINDER2ND",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "std::unary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de57bbb239d20468de1fa71f5a4cb287e0aa2a26"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_op",
						"t": "_Operation",
						"i": "__gnu_parallel::__binder2nd::_M_op",
						"r": "_Operation _M_op",
						"s": "__gnu_parallel",
						"u": "_M_OP",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "304ed58a006d8d3fe0e95c09dbb79500fea5c628"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_value",
						"t": "_SecondArgumentType",
						"i": "__gnu_parallel::__binder2nd::_M_value",
						"r": "_SecondArgumentType _M_value",
						"s": "__gnu_parallel",
						"u": "_M_VALUE",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39c1c712f8a2a37268018befae91c25cae1d4d95"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binder2nd<_Operation, _FirstArgumentType, _SecondArgumentType, _ResultType>",
						"t": "void (const _Operation &, const _SecondArgumentType &)",
						"i": "__gnu_parallel::__binder2nd::__binder2nd(const _Operation&,const _SecondArgumentType&)",
						"r": "__binder2nd<_Operation, _FirstArgumentType, _SecondArgumentType, _ResultType>(const _Operation& __x, const _SecondArgumentType& __y)",
						"s": "__gnu_parallel",
						"u": "__BINDER2ND<_OPERATION, _FIRSTARGUMENTTYPE, _SECONDARGUMENTTYPE, _RESULTTYPE>",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69f52e916331244d0075de9fdf34b64d86a21ada"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_ResultType (const _FirstArgumentType &) const",
						"i": "__gnu_parallel::__binder2nd::operator()(const _FirstArgumentType&)const",
						"r": "_ResultType operator()(const _FirstArgumentType& __x) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5c1baf77b0199fd10680a0ccb6416ae3b826917"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_ResultType (_FirstArgumentType &)",
						"i": "__gnu_parallel::__binder2nd::operator()(_FirstArgumentType&)",
						"r": "_ResultType operator()(_FirstArgumentType& __x)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__binder2nd",
						"w": "__GNU_PARALLEL::__BINDER2ND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e515bcac7d534c620828548ea92ac335810575b6"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_EqualTo",
						"t": "",
						"i": "__gnu_parallel::_EqualTo",
						"r": "template <typename _T1, typename _T2> _EqualTo : binary_function<_T1, _T2, bool>",
						"s": "__gnu_parallel",
						"u": "_EQUALTO",
						"q": "__gnu_parallel::_EqualTo",
						"w": "__GNU_PARALLEL::_EQUALTO",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80ac6c23c98dd0d8d837f4a88f8dfe946f681f67"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &, const _T2 &) const",
						"i": "__gnu_parallel::_EqualTo::operator()(const _T1&,const _T2&)const",
						"r": "bool operator()(const _T1& __t1, const _T2& __t2) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_EqualTo",
						"w": "__GNU_PARALLEL::_EQUALTO",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0a9bda7ed4fb5a66b80e610eccdf25cf6f63f63"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Less",
						"t": "",
						"i": "__gnu_parallel::_Less",
						"r": "template <typename _T1, typename _T2> _Less : binary_function<_T1, _T2, bool>",
						"s": "__gnu_parallel",
						"u": "_LESS",
						"q": "__gnu_parallel::_Less",
						"w": "__GNU_PARALLEL::_LESS",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8d97c6bd9fb78f4b9434801eb92f43bd757a22b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T1 &, const _T2 &) const",
						"i": "__gnu_parallel::_Less::operator()(const _T1&,const _T2&)const",
						"r": "bool operator()(const _T1& __t1, const _T2& __t2) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Less",
						"w": "__GNU_PARALLEL::_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d117537a1768d8d43a9fb52d08e7035c50feb2f0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const _T2 &, const _T1 &) const",
						"i": "__gnu_parallel::_Less::operator()(const _T2&,const _T1&)const",
						"r": "bool operator()(const _T2& __t2, const _T1& __t1) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Less",
						"w": "__GNU_PARALLEL::_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c3efd1eafccd3bcae7d99df93580fc272b9e245"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Plus",
						"t": "",
						"i": "__gnu_parallel::_Plus",
						"r": "template <typename _Tp1, typename _Tp2, typename _Result",
						"s": "__gnu_parallel",
						"u": "_PLUS",
						"q": "__gnu_parallel::_Plus",
						"w": "__GNU_PARALLEL::_PLUS",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a0bdc738309d064a1b2e53de0c5c58e91a75740e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Result (const _Tp1 &, const _Tp2 &) const",
						"i": "__gnu_parallel::_Plus::operator()(const _Tp1&,const _Tp2&)const",
						"r": "_Result operator()(const _Tp1& __x, const _Tp2& __y) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Plus",
						"w": "__GNU_PARALLEL::_PLUS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f52e65545a8833ded084d970846868f2852b77b9"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Multiplies",
						"t": "",
						"i": "__gnu_parallel::_Multiplies",
						"r": "template <typename _Tp1, typename _Tp2, typename _Result",
						"s": "__gnu_parallel",
						"u": "_MULTIPLIES",
						"q": "__gnu_parallel::_Multiplies",
						"w": "__GNU_PARALLEL::_MULTIPLIES",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de4b14f68afe5032cba40619f88f5d4840d9e72f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Result (const _Tp1 &, const _Tp2 &) const",
						"i": "__gnu_parallel::_Multiplies::operator()(const _Tp1&,const _Tp2&)const",
						"r": "_Result operator()(const _Tp1& __x, const _Tp2& __y) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Multiplies",
						"w": "__GNU_PARALLEL::_MULTIPLIES",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48b8816fc3ba796e609eca28a106d5155d1ad969"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PseudoSequenceIterator",
						"t": "",
						"i": "__gnu_parallel::_PseudoSequenceIterator",
						"r": "template <typename _Tp, typename _DifferenceTp> _PseudoSequenceIterator",
						"s": "__gnu_parallel",
						"u": "_PSEUDOSEQUENCEITERATOR",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9e5bd478ba8b4d196e056e9925962205ab44068"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_PseudoSequenceIterator::_DifferenceType",
						"i": "__gnu_parallel::_PseudoSequenceIterator::_DifferenceType",
						"r": "typedef _DifferenceTp _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a9bd399321bf880e7635133fc1dedfc3be194a5"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PseudoSequenceIterator<_Tp, _DifferenceTp>",
						"t": "void (const _Tp &, _DifferenceType)",
						"i": "__gnu_parallel::_PseudoSequenceIterator::_PseudoSequenceIterator(const _Tp&,_DifferenceType)",
						"r": "_PseudoSequenceIterator<_Tp, _DifferenceTp>(const _Tp& __val, __gnu_parallel::_PseudoSequenceIterator::_DifferenceType __pos)",
						"s": "__gnu_parallel",
						"u": "_PSEUDOSEQUENCEITERATOR<_TP, _DIFFERENCETP>",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6eafa2274d5f12e07707869a475ba7baed1f0d6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_PseudoSequenceIterator<_Tp, _DifferenceTp> &()",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator++()",
						"r": "_PseudoSequenceIterator<_Tp, _DifferenceTp>& operator++()",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15af35531a6003277b7b46cfa583fa8731ee864f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_PseudoSequenceIterator<_Tp, _DifferenceTp> (int)",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator++(int)",
						"r": "_PseudoSequenceIterator<_Tp, _DifferenceTp> operator++(int)",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8069db69cc01b13449af338773d06f911314cb1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator*",
						"t": "const _Tp &() const",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator*()const",
						"r": "const _Tp& operator*() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR*",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "827d706c84f1c7f788870f42ac2d6d693571faa1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator[]",
						"t": "const _Tp &(_DifferenceType) const",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator[](_DifferenceType)const",
						"r": "const _Tp& operator[](__gnu_parallel::_PseudoSequenceIterator::_DifferenceType) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR[]",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59ba5fb5db5fed7bf1893b03f983afaf247d4c2e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (const _PseudoSequenceIterator<_Tp, _DifferenceTp> &)",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator==(const _PseudoSequenceIterator&)",
						"r": "bool operator",
						"s": "__gnu_parallel",
						"u": "OPERATOR==",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "050506b16b5f572fb8bea47f7ef03338e4648ea1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator!=",
						"t": "bool (const _PseudoSequenceIterator<_Tp, _DifferenceTp> &)",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator!=(const _PseudoSequenceIterator&)",
						"r": "bool operator!",
						"s": "__gnu_parallel",
						"u": "OPERATOR!=",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad54cfcdc3c31b71593b1ad6f1e68621d2c97429"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator-",
						"t": "_DifferenceType (const _PseudoSequenceIterator<_Tp, _DifferenceTp> &)",
						"i": "__gnu_parallel::_PseudoSequenceIterator::operator-(const _PseudoSequenceIterator&)",
						"r": "__gnu_parallel::_PseudoSequenceIterator::_DifferenceType operator-(const _PseudoSequenceIterator<_Tp, _DifferenceTp>& __i2)",
						"s": "__gnu_parallel",
						"u": "OPERATOR-",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b970c200fc96d88f43d7b3805ca747e7fa0af769"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_val",
						"t": "const _Tp &",
						"i": "__gnu_parallel::_PseudoSequenceIterator::_M_val",
						"r": "const _Tp& _M_val",
						"s": "__gnu_parallel",
						"u": "_M_VAL",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9954aea9c57fef121abbf780a82de73406dbeb04"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pos",
						"t": "_DifferenceType",
						"i": "__gnu_parallel::_PseudoSequenceIterator::_M_pos",
						"r": "__gnu_parallel::_PseudoSequenceIterator::_DifferenceType _M_pos",
						"s": "__gnu_parallel",
						"u": "_M_POS",
						"q": "__gnu_parallel::_PseudoSequenceIterator",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCEITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89381c4e05b45a3b0655e5eb2e95439aeb4d5295"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PseudoSequence",
						"t": "",
						"i": "__gnu_parallel::_PseudoSequence",
						"r": "template <typename _Tp, typename _DifferenceTp> _PseudoSequence",
						"s": "__gnu_parallel",
						"u": "_PSEUDOSEQUENCE",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f39ccb3956fc6c0fa6e31afa69ccd2785c378f76"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_PseudoSequence::_DifferenceType",
						"i": "__gnu_parallel::_PseudoSequence::_DifferenceType",
						"r": "typedef _DifferenceTp _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a9bd399321bf880e7635133fc1dedfc3be194a5"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "iterator",
						"t": "__gnu_parallel::_PseudoSequence::iterator",
						"i": "__gnu_parallel::_PseudoSequence::iterator",
						"r": "typedef _PseudoSequenceIterator<_Tp, uint64_t> iterator",
						"s": "__gnu_parallel",
						"u": "ITERATOR",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e49e9eae497dc6d196d167fbf2ededf114fadd31"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PseudoSequence<_Tp, _DifferenceTp>",
						"t": "void (const _Tp &, _DifferenceType)",
						"i": "__gnu_parallel::_PseudoSequence::_PseudoSequence(const _Tp&,_DifferenceType)",
						"r": "_PseudoSequence<_Tp, _DifferenceTp>(const _Tp& __val, __gnu_parallel::_PseudoSequence::_DifferenceType __count)",
						"s": "__gnu_parallel",
						"u": "_PSEUDOSEQUENCE<_TP, _DIFFERENCETP>",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e66982759cc9acd7607d809cbb4f3c5817e5cbf"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "begin",
						"t": "iterator () const",
						"i": "__gnu_parallel::_PseudoSequence::begin()const",
						"r": "__gnu_parallel::_PseudoSequence::iterator begin() const",
						"s": "__gnu_parallel",
						"u": "BEGIN",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfc7696179e454f26462900a6f8401f19e1dfe26"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "end",
						"t": "iterator () const",
						"i": "__gnu_parallel::_PseudoSequence::end()const",
						"r": "__gnu_parallel::_PseudoSequence::iterator end() const",
						"s": "__gnu_parallel",
						"u": "END",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c239e42c42a6b935a319ae62ab80c76539b2e8a4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_val",
						"t": "const _Tp &",
						"i": "__gnu_parallel::_PseudoSequence::_M_val",
						"r": "const _Tp& _M_val",
						"s": "__gnu_parallel",
						"u": "_M_VAL",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9954aea9c57fef121abbf780a82de73406dbeb04"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_count",
						"t": "_DifferenceType",
						"i": "__gnu_parallel::_PseudoSequence::_M_count",
						"r": "__gnu_parallel::_PseudoSequence::_DifferenceType _M_count",
						"s": "__gnu_parallel",
						"u": "_M_COUNT",
						"q": "__gnu_parallel::_PseudoSequence",
						"w": "__GNU_PARALLEL::_PSEUDOSEQUENCE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e04ef74836e04984a62c47bb1a72af76e85ec129"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__median_of_three_iterators",
						"t": "_RAIter (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "__gnu_parallel::__median_of_three_iterators(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> _RAIter __median_of_three_iterators(_RAIter __a, _RAIter __b, _RAIter __c, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__MEDIAN_OF_THREE_ITERATORS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba17ce6956f7ee6fb382b1f0d2a995db07eb0974"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ASSERT",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ASSERT",
						"r": "_GLIBCXX_PARALLEL_ASSERT",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ASSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20af446d41072073515021dbee9ac175edf8bc6f"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/features.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_FEATURES_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_FEATURES_H",
						"r": "_GLIBCXX_PARALLEL_FEATURES_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_FEATURES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4730ce363cb46820f7c6de2757b445cca09fc78b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_MERGESORT",
						"t": "",
						"i": "_GLIBCXX_MERGESORT",
						"r": "_GLIBCXX_MERGESORT",
						"s": "",
						"u": "_GLIBCXX_MERGESORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7614f2edf47b13fb93d22079bb9b012049cb88bd"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_QUICKSORT",
						"t": "",
						"i": "_GLIBCXX_QUICKSORT",
						"r": "_GLIBCXX_QUICKSORT",
						"s": "",
						"u": "_GLIBCXX_QUICKSORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d900a0fdd72f37a638fc81f4e39f1f796be25a1"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_GLIBCXX_BAL_QUICKSORT",
						"t": "",
						"i": "_GLIBCXX_BAL_QUICKSORT",
						"r": "_GLIBCXX_BAL_QUICKSORT",
						"s": "",
						"u": "_GLIBCXX_BAL_QUICKSORT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2f6937555291b4af1fd564e425448db9d1167e8"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_FIND_GROWING_BLOCKS",
						"t": "",
						"i": "_GLIBCXX_FIND_GROWING_BLOCKS",
						"r": "_GLIBCXX_FIND_GROWING_BLOCKS",
						"s": "",
						"u": "_GLIBCXX_FIND_GROWING_BLOCKS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "656c7361f17e905b334ae98b9dc87ef30dc95351"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS",
						"t": "",
						"i": "_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS",
						"r": "_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS",
						"s": "",
						"u": "_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15b61866bd4657e91c000acbb0bd25165502bc23"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_FIND_EQUAL_SPLIT",
						"t": "",
						"i": "_GLIBCXX_FIND_EQUAL_SPLIT",
						"r": "_GLIBCXX_FIND_EQUAL_SPLIT",
						"s": "",
						"u": "_GLIBCXX_FIND_EQUAL_SPLIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01624bc0de36badc53b677ec20e4ceb360212a95"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_TREE_INITIAL_SPLITTING",
						"t": "",
						"i": "_GLIBCXX_TREE_INITIAL_SPLITTING",
						"r": "_GLIBCXX_TREE_INITIAL_SPLITTING",
						"s": "",
						"u": "_GLIBCXX_TREE_INITIAL_SPLITTING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd03d168a6f5d7b61519062ef91a513b286afad7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_TREE_DYNAMIC_BALANCING",
						"t": "",
						"i": "_GLIBCXX_TREE_DYNAMIC_BALANCING",
						"r": "_GLIBCXX_TREE_DYNAMIC_BALANCING",
						"s": "",
						"u": "_GLIBCXX_TREE_DYNAMIC_BALANCING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a68b08ae3862cd018d5ee978a77e02e4a4af2adb"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_TREE_FULL_COPY",
						"t": "",
						"i": "_GLIBCXX_TREE_FULL_COPY",
						"r": "_GLIBCXX_TREE_FULL_COPY",
						"s": "",
						"u": "_GLIBCXX_TREE_FULL_COPY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06be597be27340803ac921c10c074469154b44f8"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/basic_iterator.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_BASIC_ITERATOR_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_BASIC_ITERATOR_H",
						"r": "_GLIBCXX_PARALLEL_BASIC_ITERATOR_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_BASIC_ITERATOR_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e07d3da3e77e11c3b2645967456158c69f67eec0"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/parallel.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_PARALLEL_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_PARALLEL_H",
						"r": "_GLIBCXX_PARALLEL_PARALLEL_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_PARALLEL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba03668d69d82ec65b3cb4a9773c066dc6265f3f"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/compiletime_settings.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_VERBOSE_LEVEL",
						"t": "",
						"i": "_GLIBCXX_VERBOSE_LEVEL",
						"r": "_GLIBCXX_VERBOSE_LEVEL",
						"s": "",
						"u": "_GLIBCXX_VERBOSE_LEVEL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e4e2adebc70b943b7b8f7374c8c34aedfbcc00a"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_CALL",
						"t": "",
						"i": "_GLIBCXX_CALL",
						"r": "_GLIBCXX_CALL",
						"s": "",
						"u": "_GLIBCXX_CALL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8db05d2528debbb8212a248928f77a1a950a8bce"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_SCALE_DOWN_FPU",
						"t": "",
						"i": "_GLIBCXX_SCALE_DOWN_FPU",
						"r": "_GLIBCXX_SCALE_DOWN_FPU",
						"s": "",
						"u": "_GLIBCXX_SCALE_DOWN_FPU",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a5e3610e689e0c3a6dfb3c9baef62318f2a4310"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ASSERTIONS",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ASSERTIONS",
						"r": "_GLIBCXX_PARALLEL_ASSERTIONS",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ASSERTIONS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8fb9a55294fe23db8019f3d88edee76bed5a1ea6"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1",
						"t": "",
						"i": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1",
						"r": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1",
						"s": "",
						"u": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab6f3bf1a358cd9a8acf8f0c3e0a491454967b74"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB",
						"t": "",
						"i": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB",
						"r": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB",
						"s": "",
						"u": "_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b816136285fda8b941130d898c081e703a8cd038"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/types.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_TYPES_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_TYPES_H",
						"r": "_GLIBCXX_PARALLEL_TYPES_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_TYPES_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1efbb73ab978b27f571d2c9039f5b11668d91f50"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Parallelism",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::_Parallelism",
						"r": "enum _Parallelism",
						"s": "__gnu_parallel",
						"u": "_PARALLELISM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63b4802952338e7a3026494aec574ecdacd189b0"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sequential",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::sequential",
						"r": "sequential",
						"s": "__gnu_parallel",
						"u": "SEQUENTIAL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b37299e1f1f93a4a25f4a4f58451d67c881992ea"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_unbalanced",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::parallel_unbalanced",
						"r": "parallel_unbalanced",
						"s": "__gnu_parallel",
						"u": "PARALLEL_UNBALANCED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b9a96776b09c860c8ee88741b51f70e544b47e6"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_balanced",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::parallel_balanced",
						"r": "parallel_balanced",
						"s": "__gnu_parallel",
						"u": "PARALLEL_BALANCED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce48cd6d1fc579a8b8347131aa55f36d01896a07"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_omp_loop",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::parallel_omp_loop",
						"r": "parallel_omp_loop",
						"s": "__gnu_parallel",
						"u": "PARALLEL_OMP_LOOP",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b586714e82685764d1d3ed605d22df3a4a9d4906"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_omp_loop_static",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::parallel_omp_loop_static",
						"r": "parallel_omp_loop_static",
						"s": "__gnu_parallel",
						"u": "PARALLEL_OMP_LOOP_STATIC",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b340b5723aa4c8284dcd26a6a5d6504aee709fa"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_taskqueue",
						"t": "__gnu_parallel::_Parallelism",
						"i": "__gnu_parallel::parallel_taskqueue",
						"r": "parallel_taskqueue",
						"s": "__gnu_parallel",
						"u": "PARALLEL_TASKQUEUE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41febb69ed09e401b4e98c24a30f9cf0bb4d4168"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_AlgorithmStrategy",
						"t": "__gnu_parallel::_AlgorithmStrategy",
						"i": "__gnu_parallel::_AlgorithmStrategy",
						"r": "enum _AlgorithmStrategy",
						"s": "__gnu_parallel",
						"u": "_ALGORITHMSTRATEGY",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39255c93f0e714677c43a0955adb966fed7aed52"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "heuristic",
						"t": "__gnu_parallel::_AlgorithmStrategy",
						"i": "__gnu_parallel::heuristic",
						"r": "heuristic",
						"s": "__gnu_parallel",
						"u": "HEURISTIC",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bbc8584d502dd8faf14f7b0384699a91cd872823"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "force_sequential",
						"t": "__gnu_parallel::_AlgorithmStrategy",
						"i": "__gnu_parallel::force_sequential",
						"r": "force_sequential",
						"s": "__gnu_parallel",
						"u": "FORCE_SEQUENTIAL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "465ec9d5c79550bf7f598c85c133ac1383e277a0"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "force_parallel",
						"t": "__gnu_parallel::_AlgorithmStrategy",
						"i": "__gnu_parallel::force_parallel",
						"r": "force_parallel",
						"s": "__gnu_parallel",
						"u": "FORCE_PARALLEL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06281626cee681321715611aed8d45dbfc37a195"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_SortAlgorithm",
						"t": "__gnu_parallel::_SortAlgorithm",
						"i": "__gnu_parallel::_SortAlgorithm",
						"r": "enum _SortAlgorithm",
						"s": "__gnu_parallel",
						"u": "_SORTALGORITHM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c99b1da9b99d6a0b9f4d2c1e38c8fd91a8ac7892"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "MWMS",
						"t": "__gnu_parallel::_SortAlgorithm",
						"i": "__gnu_parallel::MWMS",
						"r": "MWMS",
						"s": "__gnu_parallel",
						"u": "MWMS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f71fe516751d45e164e904c5296d5f7dbed06114"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "QS",
						"t": "__gnu_parallel::_SortAlgorithm",
						"i": "__gnu_parallel::QS",
						"r": "QS",
						"s": "__gnu_parallel",
						"u": "QS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e1e7e60ab0f3524e522a556bffe92134b0aada2"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "QS_BALANCED",
						"t": "__gnu_parallel::_SortAlgorithm",
						"i": "__gnu_parallel::QS_BALANCED",
						"r": "QS_BALANCED",
						"s": "__gnu_parallel",
						"u": "QS_BALANCED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c773f171b367f8d1ce81e66a1ea0b5ca576bc10"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_MultiwayMergeAlgorithm",
						"t": "__gnu_parallel::_MultiwayMergeAlgorithm",
						"i": "__gnu_parallel::_MultiwayMergeAlgorithm",
						"r": "enum _MultiwayMergeAlgorithm",
						"s": "__gnu_parallel",
						"u": "_MULTIWAYMERGEALGORITHM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44f5d0fd10081601999ed4514148b1c5c259697f"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LOSER_TREE",
						"t": "__gnu_parallel::_MultiwayMergeAlgorithm",
						"i": "__gnu_parallel::LOSER_TREE",
						"r": "LOSER_TREE",
						"s": "__gnu_parallel",
						"u": "LOSER_TREE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbe3f02afec356c241be55ee2af2506d006a5ce0"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PartialSumAlgorithm",
						"t": "__gnu_parallel::_PartialSumAlgorithm",
						"i": "__gnu_parallel::_PartialSumAlgorithm",
						"r": "enum _PartialSumAlgorithm",
						"s": "__gnu_parallel",
						"u": "_PARTIALSUMALGORITHM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e098e4d160dc86b267b2694b3675396f992e7f2"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "RECURSIVE",
						"t": "__gnu_parallel::_PartialSumAlgorithm",
						"i": "__gnu_parallel::RECURSIVE",
						"r": "RECURSIVE",
						"s": "__gnu_parallel",
						"u": "RECURSIVE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2c4a8bcf4efc09f908cb4e40d7d6f381c3c3ef0"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LINEAR",
						"t": "__gnu_parallel::_PartialSumAlgorithm",
						"i": "__gnu_parallel::LINEAR",
						"r": "LINEAR",
						"s": "__gnu_parallel",
						"u": "LINEAR",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "267343a7bc9a0146c52f22655f7cef4203c4c12b"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_SplittingAlgorithm",
						"t": "__gnu_parallel::_SplittingAlgorithm",
						"i": "__gnu_parallel::_SplittingAlgorithm",
						"r": "enum _SplittingAlgorithm",
						"s": "__gnu_parallel",
						"u": "_SPLITTINGALGORITHM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "841a6293f3803ef5229b1f65ec00b464b285ff4b"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SAMPLING",
						"t": "__gnu_parallel::_SplittingAlgorithm",
						"i": "__gnu_parallel::SAMPLING",
						"r": "SAMPLING",
						"s": "__gnu_parallel",
						"u": "SAMPLING",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b218a2d7fc7be451cb3fba01b165d7f9a6f72c21"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EXACT",
						"t": "__gnu_parallel::_SplittingAlgorithm",
						"i": "__gnu_parallel::EXACT",
						"r": "EXACT",
						"s": "__gnu_parallel",
						"u": "EXACT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f01132c9bff488533ab06c78fc208d024b1fc6a"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_FindAlgorithm",
						"t": "__gnu_parallel::_FindAlgorithm",
						"i": "__gnu_parallel::_FindAlgorithm",
						"r": "enum _FindAlgorithm",
						"s": "__gnu_parallel",
						"u": "_FINDALGORITHM",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87c3e48ca3220da1443370c3285d794f0e4efb22"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GROWING_BLOCKS",
						"t": "__gnu_parallel::_FindAlgorithm",
						"i": "__gnu_parallel::GROWING_BLOCKS",
						"r": "GROWING_BLOCKS",
						"s": "__gnu_parallel",
						"u": "GROWING_BLOCKS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95a6708db298e15ba4e2efecea1d93359f3c0fb0"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CONSTANT_SIZE_BLOCKS",
						"t": "__gnu_parallel::_FindAlgorithm",
						"i": "__gnu_parallel::CONSTANT_SIZE_BLOCKS",
						"r": "CONSTANT_SIZE_BLOCKS",
						"s": "__gnu_parallel",
						"u": "CONSTANT_SIZE_BLOCKS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04a6e73a4807295a88002493efd33eb5d44da135"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EQUAL_SPLIT",
						"t": "__gnu_parallel::_FindAlgorithm",
						"i": "__gnu_parallel::EQUAL_SPLIT",
						"r": "EQUAL_SPLIT",
						"s": "__gnu_parallel",
						"u": "EQUAL_SPLIT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5272b9494840ad73f84fe62503ea18902112ce04"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_SequenceIndex",
						"t": "__gnu_parallel::_SequenceIndex",
						"i": "__gnu_parallel::_SequenceIndex",
						"r": "typedef uint64_t _SequenceIndex",
						"s": "__gnu_parallel",
						"u": "_SEQUENCEINDEX",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "uint64_t",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ddcdec875c1304d37c4cf5a064a8c1e6669a894"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ThreadIndex",
						"t": "__gnu_parallel::_ThreadIndex",
						"i": "__gnu_parallel::_ThreadIndex",
						"r": "typedef uint16_t _ThreadIndex",
						"s": "__gnu_parallel",
						"u": "_THREADINDEX",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "uint16_t",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "becfee9992a5477e2b33a1152b53271e9d4bde57"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_CASable",
						"t": "__gnu_parallel::_CASable",
						"i": "__gnu_parallel::_CASable",
						"r": "typedef int64_t _CASable",
						"s": "__gnu_parallel",
						"u": "_CASABLE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "int64_t",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c6576c552e3a9d69783a8bdab4af421a7223aac"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "_CASable_bits",
						"t": "const int",
						"i": "__gnu_parallel::_CASable_bits",
						"r": "static const int _CASable_bits",
						"s": "__gnu_parallel",
						"u": "_CASABLE_BITS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef481bc9e7806198aea7f84490d57b268689f3aa"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "_CASable_mask",
						"t": "const _CASable",
						"i": "__gnu_parallel::_CASable_mask",
						"r": "static const __gnu_parallel::_CASable _CASable_mask",
						"s": "__gnu_parallel",
						"u": "_CASABLE_MASK",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16e64c09e09419e84ac75925c933f29057b858fb"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/tags.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_TAGS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_TAGS_H",
						"r": "_GLIBCXX_PARALLEL_TAGS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_TAGS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0387595cb4222803c6c12ec27d3d571971f94e1e"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sequential_tag",
						"t": "__gnu_parallel::sequential_tag",
						"i": "__gnu_parallel::sequential_tag",
						"r": "sequential_tag",
						"s": "__gnu_parallel",
						"u": "SEQUENTIAL_TAG",
						"q": "__gnu_parallel::sequential_tag",
						"w": "__GNU_PARALLEL::SEQUENTIAL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45725ab942a8aff6a828aba73dbfad22d8db9d04"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_tag",
						"t": "__gnu_parallel::parallel_tag",
						"i": "__gnu_parallel::parallel_tag",
						"r": "parallel_tag",
						"s": "__gnu_parallel",
						"u": "PARALLEL_TAG",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44af47858c0e4528c4a7ebc11943a0c20f0e291c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_threads",
						"t": "_ThreadIndex",
						"i": "__gnu_parallel::parallel_tag::_M_num_threads",
						"r": "__gnu_parallel::_ThreadIndex _M_num_threads",
						"s": "__gnu_parallel",
						"u": "_M_NUM_THREADS",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06dc7846aaba8b7d5ee74d4d597b5e2a580a1872"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_tag",
						"t": "void ()",
						"i": "__gnu_parallel::parallel_tag::parallel_tag()",
						"r": "parallel_tag()",
						"s": "__gnu_parallel",
						"u": "PARALLEL_TAG",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95998dd20180fd92404639104e3c26c324cc6143"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::parallel_tag::parallel_tag(_ThreadIndex)",
						"r": "parallel_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "PARALLEL_TAG",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48c0877295afde09ce732151f85a2a1f0e8b8c9f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_num_threads",
						"t": "_ThreadIndex ()",
						"i": "__gnu_parallel::parallel_tag::__get_num_threads()",
						"r": "__gnu_parallel::_ThreadIndex __get_num_threads()",
						"s": "__gnu_parallel",
						"u": "__GET_NUM_THREADS",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4300386a9947abadb6fc9fe92b3355cc1b3ec212"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_num_threads",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::parallel_tag::set_num_threads(_ThreadIndex)",
						"r": "void set_num_threads(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "SET_NUM_THREADS",
						"q": "__gnu_parallel::parallel_tag",
						"w": "__GNU_PARALLEL::PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "489b9993ea2682313b720e7445b8e472b1fe9cd7"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "default_parallel_tag",
						"t": "__gnu_parallel::default_parallel_tag",
						"i": "__gnu_parallel::default_parallel_tag",
						"r": "default_parallel_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "DEFAULT_PARALLEL_TAG",
						"q": "__gnu_parallel::default_parallel_tag",
						"w": "__GNU_PARALLEL::DEFAULT_PARALLEL_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "faf13b27b27114c8bc6bdd582d90c41a7fe07cfa"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "default_parallel_tag",
						"t": "void ()",
						"i": "__gnu_parallel::default_parallel_tag::default_parallel_tag()",
						"r": "default_parallel_tag()",
						"s": "__gnu_parallel",
						"u": "DEFAULT_PARALLEL_TAG",
						"q": "__gnu_parallel::default_parallel_tag",
						"w": "__GNU_PARALLEL::DEFAULT_PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2f6c5c4083883b39c4017a727d313fdb9a2eddf"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "default_parallel_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::default_parallel_tag::default_parallel_tag(_ThreadIndex)",
						"r": "default_parallel_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "DEFAULT_PARALLEL_TAG",
						"q": "__gnu_parallel::default_parallel_tag",
						"w": "__GNU_PARALLEL::DEFAULT_PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c94f9801ddd517c9f4ba28001a8bcc2f77184598"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "balanced_tag",
						"t": "__gnu_parallel::balanced_tag",
						"i": "__gnu_parallel::balanced_tag",
						"r": "balanced_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "BALANCED_TAG",
						"q": "__gnu_parallel::balanced_tag",
						"w": "__GNU_PARALLEL::BALANCED_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a736fe6604b6cb9509fcd15249b4362c595a042d"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unbalanced_tag",
						"t": "__gnu_parallel::unbalanced_tag",
						"i": "__gnu_parallel::unbalanced_tag",
						"r": "unbalanced_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "UNBALANCED_TAG",
						"q": "__gnu_parallel::unbalanced_tag",
						"w": "__GNU_PARALLEL::UNBALANCED_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "857d016a8a2ab4e155903426f0223e53eca90a5a"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "omp_loop_tag",
						"t": "__gnu_parallel::omp_loop_tag",
						"i": "__gnu_parallel::omp_loop_tag",
						"r": "omp_loop_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "OMP_LOOP_TAG",
						"q": "__gnu_parallel::omp_loop_tag",
						"w": "__GNU_PARALLEL::OMP_LOOP_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bae50808f6fa8c3f0158bbc81e64fcbbd5ac741c"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "omp_loop_static_tag",
						"t": "__gnu_parallel::omp_loop_static_tag",
						"i": "__gnu_parallel::omp_loop_static_tag",
						"r": "omp_loop_static_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "OMP_LOOP_STATIC_TAG",
						"q": "__gnu_parallel::omp_loop_static_tag",
						"w": "__GNU_PARALLEL::OMP_LOOP_STATIC_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "202ad6fb16f4461853e42aab18c6ef1b2da7d0ff"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_tag",
						"t": "__gnu_parallel::find_tag",
						"i": "__gnu_parallel::find_tag",
						"r": "find_tag",
						"s": "__gnu_parallel",
						"u": "FIND_TAG",
						"q": "__gnu_parallel::find_tag",
						"w": "__GNU_PARALLEL::FIND_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce2ec1cf221b2bb23336e00dfcb785b8d81f2190"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "exact_tag",
						"t": "__gnu_parallel::exact_tag",
						"i": "__gnu_parallel::exact_tag",
						"r": "exact_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "EXACT_TAG",
						"q": "__gnu_parallel::exact_tag",
						"w": "__GNU_PARALLEL::EXACT_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e7feb148db2dd5b2948fe7a3e00f6e15e22ec03"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "exact_tag",
						"t": "void ()",
						"i": "__gnu_parallel::exact_tag::exact_tag()",
						"r": "exact_tag()",
						"s": "__gnu_parallel",
						"u": "EXACT_TAG",
						"q": "__gnu_parallel::exact_tag",
						"w": "__GNU_PARALLEL::EXACT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b61bb582c2b87822157a7836b88956f8151d3687"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "exact_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::exact_tag::exact_tag(_ThreadIndex)",
						"r": "exact_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "EXACT_TAG",
						"q": "__gnu_parallel::exact_tag",
						"w": "__GNU_PARALLEL::EXACT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "148fe841e430d2927d879a6e5786b50ef4e59db5"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sampling_tag",
						"t": "__gnu_parallel::sampling_tag",
						"i": "__gnu_parallel::sampling_tag",
						"r": "sampling_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "SAMPLING_TAG",
						"q": "__gnu_parallel::sampling_tag",
						"w": "__GNU_PARALLEL::SAMPLING_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7c86869b0f021540ced91436ff7d1bbea738797"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sampling_tag",
						"t": "void ()",
						"i": "__gnu_parallel::sampling_tag::sampling_tag()",
						"r": "sampling_tag()",
						"s": "__gnu_parallel",
						"u": "SAMPLING_TAG",
						"q": "__gnu_parallel::sampling_tag",
						"w": "__GNU_PARALLEL::SAMPLING_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0e662fa484d2bc0c9d525c095b2f489eb186c0a"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sampling_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::sampling_tag::sampling_tag(_ThreadIndex)",
						"r": "sampling_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "SAMPLING_TAG",
						"q": "__gnu_parallel::sampling_tag",
						"w": "__GNU_PARALLEL::SAMPLING_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9180c9a41a8bc680ef66c9d5b8e693d68e7f4a29"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_tag",
						"t": "__gnu_parallel::multiway_mergesort_tag",
						"i": "__gnu_parallel::multiway_mergesort_tag",
						"r": "multiway_mergesort_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c185123674a2c0716fe21aeeee1f7101332e003"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_tag",
						"t": "void ()",
						"i": "__gnu_parallel::multiway_mergesort_tag::multiway_mergesort_tag()",
						"r": "multiway_mergesort_tag()",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "afa8694c8305a9c055d0174ccdae441cc9f9394e"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::multiway_mergesort_tag::multiway_mergesort_tag(_ThreadIndex)",
						"r": "multiway_mergesort_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6eac075970e575ae417ef252c42d83ae6d85b0fa"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_exact_tag",
						"t": "__gnu_parallel::multiway_mergesort_exact_tag",
						"i": "__gnu_parallel::multiway_mergesort_exact_tag",
						"r": "multiway_mergesort_exact_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_EXACT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_exact_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_EXACT_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83acdbf78de399ccd04de0fd9fad76e128713b0e"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_exact_tag",
						"t": "void ()",
						"i": "__gnu_parallel::multiway_mergesort_exact_tag::multiway_mergesort_exact_tag()",
						"r": "multiway_mergesort_exact_tag()",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_EXACT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_exact_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_EXACT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8739c845cfc30593ca3b90246b5c74040d01333"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_exact_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::multiway_mergesort_exact_tag::multiway_mergesort_exact_tag(_ThreadIndex)",
						"r": "multiway_mergesort_exact_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_EXACT_TAG",
						"q": "__gnu_parallel::multiway_mergesort_exact_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_EXACT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "edea0036af31cde21a3b2afcfa6bfcc2b13dda4c"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_sampling_tag",
						"t": "__gnu_parallel::multiway_mergesort_sampling_tag",
						"i": "__gnu_parallel::multiway_mergesort_sampling_tag",
						"r": "multiway_mergesort_sampling_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_SAMPLING_TAG",
						"q": "__gnu_parallel::multiway_mergesort_sampling_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_SAMPLING_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4db696d9a1cab4bacefc88a9844d8aecf0e52ba3"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_sampling_tag",
						"t": "void ()",
						"i": "__gnu_parallel::multiway_mergesort_sampling_tag::multiway_mergesort_sampling_tag()",
						"r": "multiway_mergesort_sampling_tag()",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_SAMPLING_TAG",
						"q": "__gnu_parallel::multiway_mergesort_sampling_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_SAMPLING_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b07f4e1e77f7a942e969ad742fbba331a7e71bf6"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_mergesort_sampling_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::multiway_mergesort_sampling_tag::multiway_mergesort_sampling_tag(_ThreadIndex)",
						"r": "multiway_mergesort_sampling_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGESORT_SAMPLING_TAG",
						"q": "__gnu_parallel::multiway_mergesort_sampling_tag",
						"w": "__GNU_PARALLEL::MULTIWAY_MERGESORT_SAMPLING_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a37a18d480109600e5daa9858d05dcc9a403d69"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "quicksort_tag",
						"t": "__gnu_parallel::quicksort_tag",
						"i": "__gnu_parallel::quicksort_tag",
						"r": "quicksort_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "QUICKSORT_TAG",
						"q": "__gnu_parallel::quicksort_tag",
						"w": "__GNU_PARALLEL::QUICKSORT_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b09d0b18ba6df16d9bd948c7474d4d5298f055bb"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "quicksort_tag",
						"t": "void ()",
						"i": "__gnu_parallel::quicksort_tag::quicksort_tag()",
						"r": "quicksort_tag()",
						"s": "__gnu_parallel",
						"u": "QUICKSORT_TAG",
						"q": "__gnu_parallel::quicksort_tag",
						"w": "__GNU_PARALLEL::QUICKSORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3df97869050f2e56aa6fee5623f00e4b3557f9c"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "quicksort_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::quicksort_tag::quicksort_tag(_ThreadIndex)",
						"r": "quicksort_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "QUICKSORT_TAG",
						"q": "__gnu_parallel::quicksort_tag",
						"w": "__GNU_PARALLEL::QUICKSORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "650038ec3af0db9cc14497ad438b7fb8d7c51eb2"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "balanced_quicksort_tag",
						"t": "__gnu_parallel::balanced_quicksort_tag",
						"i": "__gnu_parallel::balanced_quicksort_tag",
						"r": "balanced_quicksort_tag : public __gnu_parallel::parallel_tag",
						"s": "__gnu_parallel",
						"u": "BALANCED_QUICKSORT_TAG",
						"q": "__gnu_parallel::balanced_quicksort_tag",
						"w": "__GNU_PARALLEL::BALANCED_QUICKSORT_TAG",
						"y": "__gnu_parallel::parallel_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a1c163b4a32a5587df1e7448d36ccd0c98a2b6d"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "balanced_quicksort_tag",
						"t": "void ()",
						"i": "__gnu_parallel::balanced_quicksort_tag::balanced_quicksort_tag()",
						"r": "balanced_quicksort_tag()",
						"s": "__gnu_parallel",
						"u": "BALANCED_QUICKSORT_TAG",
						"q": "__gnu_parallel::balanced_quicksort_tag",
						"w": "__GNU_PARALLEL::BALANCED_QUICKSORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb6a150c88258686b2295e8f7b908c840e954867"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "balanced_quicksort_tag",
						"t": "void (_ThreadIndex)",
						"i": "__gnu_parallel::balanced_quicksort_tag::balanced_quicksort_tag(_ThreadIndex)",
						"r": "balanced_quicksort_tag(__gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "BALANCED_QUICKSORT_TAG",
						"q": "__gnu_parallel::balanced_quicksort_tag",
						"w": "__GNU_PARALLEL::BALANCED_QUICKSORT_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14b0b7cf17b81a8aa5f7e04249d0f8efacc5019e"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "growing_blocks_tag",
						"t": "__gnu_parallel::growing_blocks_tag",
						"i": "__gnu_parallel::growing_blocks_tag",
						"r": "growing_blocks_tag : public __gnu_parallel::find_tag",
						"s": "__gnu_parallel",
						"u": "GROWING_BLOCKS_TAG",
						"q": "__gnu_parallel::growing_blocks_tag",
						"w": "__GNU_PARALLEL::GROWING_BLOCKS_TAG",
						"y": "__gnu_parallel::find_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c696bd408365b03292064dc7b99363f60000d68"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "constant_size_blocks_tag",
						"t": "__gnu_parallel::constant_size_blocks_tag",
						"i": "__gnu_parallel::constant_size_blocks_tag",
						"r": "constant_size_blocks_tag : public __gnu_parallel::find_tag",
						"s": "__gnu_parallel",
						"u": "CONSTANT_SIZE_BLOCKS_TAG",
						"q": "__gnu_parallel::constant_size_blocks_tag",
						"w": "__GNU_PARALLEL::CONSTANT_SIZE_BLOCKS_TAG",
						"y": "__gnu_parallel::find_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2de606f352c2d4b4d1f0273a48a97f2f2e10fafb"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal_split_tag",
						"t": "__gnu_parallel::equal_split_tag",
						"i": "__gnu_parallel::equal_split_tag",
						"r": "equal_split_tag : public __gnu_parallel::find_tag",
						"s": "__gnu_parallel",
						"u": "EQUAL_SPLIT_TAG",
						"q": "__gnu_parallel::equal_split_tag",
						"w": "__GNU_PARALLEL::EQUAL_SPLIT_TAG",
						"y": "__gnu_parallel::find_tag",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d1c4351b6f0474a2a374472f0a03f9f226bf300"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/settings.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_SETTINGS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_SETTINGS_H",
						"r": "_GLIBCXX_PARALLEL_SETTINGS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_SETTINGS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "70f2b3f5916985a074cb71ec61359ae4f6363de7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_CONDITION",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_CONDITION",
						"r": "_GLIBCXX_PARALLEL_CONDITION",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_CONDITION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c44ff673908e275baa2ad6916d843853e6b9efd0"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Settings",
						"t": "__gnu_parallel::_Settings",
						"i": "__gnu_parallel::_Settings",
						"r": "_Settings",
						"s": "__gnu_parallel",
						"u": "_SETTINGS",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e206fe189917efb2c51ccf4710686d5d4e6680f2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "algorithm_strategy",
						"t": "_AlgorithmStrategy",
						"i": "__gnu_parallel::_Settings::algorithm_strategy",
						"r": "__gnu_parallel::_AlgorithmStrategy algorithm_strategy",
						"s": "__gnu_parallel",
						"u": "ALGORITHM_STRATEGY",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "287ae5d49dc4703d82dd5e9fd2e9e93e9e41ed66"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_algorithm",
						"t": "_SortAlgorithm",
						"i": "__gnu_parallel::_Settings::sort_algorithm",
						"r": "__gnu_parallel::_SortAlgorithm sort_algorithm",
						"s": "__gnu_parallel",
						"u": "SORT_ALGORITHM",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3defd020a47d3c9ba3ccd795fd0219e54d848116"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sum_algorithm",
						"t": "_PartialSumAlgorithm",
						"i": "__gnu_parallel::_Settings::partial_sum_algorithm",
						"r": "__gnu_parallel::_PartialSumAlgorithm partial_sum_algorithm",
						"s": "__gnu_parallel",
						"u": "PARTIAL_SUM_ALGORITHM",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93e17b8ea02767e1a95cb963e8b0d10c65464a72"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_algorithm",
						"t": "_MultiwayMergeAlgorithm",
						"i": "__gnu_parallel::_Settings::multiway_merge_algorithm",
						"r": "__gnu_parallel::_MultiwayMergeAlgorithm multiway_merge_algorithm",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_ALGORITHM",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5b1583b966764b3b12402faec9b5757436d1fa6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_algorithm",
						"t": "_FindAlgorithm",
						"i": "__gnu_parallel::_Settings::find_algorithm",
						"r": "__gnu_parallel::_FindAlgorithm find_algorithm",
						"s": "__gnu_parallel",
						"u": "FIND_ALGORITHM",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe44b8e8d4f87eeb80477c4471b71bbcd7da44d8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_splitting",
						"t": "_SplittingAlgorithm",
						"i": "__gnu_parallel::_Settings::sort_splitting",
						"r": "__gnu_parallel::_SplittingAlgorithm sort_splitting",
						"s": "__gnu_parallel",
						"u": "SORT_SPLITTING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0a3283db52024675dd3959170ccc0cf19668969"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge_splitting",
						"t": "_SplittingAlgorithm",
						"i": "__gnu_parallel::_Settings::merge_splitting",
						"r": "__gnu_parallel::_SplittingAlgorithm merge_splitting",
						"s": "__gnu_parallel",
						"u": "MERGE_SPLITTING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a1230355cce7459468b7b69e0d64eb125b75140d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_splitting",
						"t": "_SplittingAlgorithm",
						"i": "__gnu_parallel::_Settings::multiway_merge_splitting",
						"r": "__gnu_parallel::_SplittingAlgorithm multiway_merge_splitting",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SPLITTING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2313a6277dad1ca68ff87ede9fdb591f9bf018d7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "accumulate_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::accumulate_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex accumulate_minimal_n",
						"s": "__gnu_parallel",
						"u": "ACCUMULATE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dcd8707663e4bf2029abee1a594befa13809302d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_difference_minimal_n",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::adjacent_difference_minimal_n",
						"r": "unsigned int adjacent_difference_minimal_n",
						"s": "__gnu_parallel",
						"u": "ADJACENT_DIFFERENCE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b99678560db6f28a70bb031190378e59c2102cb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::count_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex count_minimal_n",
						"s": "__gnu_parallel",
						"u": "COUNT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8da2c015f8be160a634dfec949c3bef69d262c7d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fill_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::fill_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex fill_minimal_n",
						"s": "__gnu_parallel",
						"u": "FILL_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f523804e11f4d85c8b857f94d68e538aa263b3d1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_increasing_factor",
						"t": "double",
						"i": "__gnu_parallel::_Settings::find_increasing_factor",
						"r": "double find_increasing_factor",
						"s": "__gnu_parallel",
						"u": "FIND_INCREASING_FACTOR",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f50cc159b1befa419701b118acfbc2defbd51249"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_initial_block_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::find_initial_block_size",
						"r": "__gnu_parallel::_SequenceIndex find_initial_block_size",
						"s": "__gnu_parallel",
						"u": "FIND_INITIAL_BLOCK_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b8bd7f75ebaa6ca1b6ab68664ec69aac4bcde91"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_maximum_block_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::find_maximum_block_size",
						"r": "__gnu_parallel::_SequenceIndex find_maximum_block_size",
						"s": "__gnu_parallel",
						"u": "FIND_MAXIMUM_BLOCK_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8b677089e38c38824389d02c363a29b094f26fc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_sequential_search_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::find_sequential_search_size",
						"r": "__gnu_parallel::_SequenceIndex find_sequential_search_size",
						"s": "__gnu_parallel",
						"u": "FIND_SEQUENTIAL_SEARCH_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de06914b2501b22fb68d8b76ce9f6e44b54ab879"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::for_each_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex for_each_minimal_n",
						"s": "__gnu_parallel",
						"u": "FOR_EACH_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9542eee727ff7fbebe7bee3a42c745ddfdb7d29"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::generate_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex generate_minimal_n",
						"s": "__gnu_parallel",
						"u": "GENERATE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ebe652a00955b2aef425136e80517a889e33d25e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::max_element_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex max_element_minimal_n",
						"s": "__gnu_parallel",
						"u": "MAX_ELEMENT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c0a642836d9f3dc004df53a2fa3a6e8b1a1be1a2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::merge_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex merge_minimal_n",
						"s": "__gnu_parallel",
						"u": "MERGE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c517ad3c6b4f3a39968ae3fa0cb3081a1219a4d8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge_oversampling",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::merge_oversampling",
						"r": "unsigned int merge_oversampling",
						"s": "__gnu_parallel",
						"u": "MERGE_OVERSAMPLING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54bea8ddf2e494b785f22dae2dcb3ece31acfcd1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::min_element_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex min_element_minimal_n",
						"s": "__gnu_parallel",
						"u": "MIN_ELEMENT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c199577d5d5883e216cf055b3611f0115d3254f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::multiway_merge_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex multiway_merge_minimal_n",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bccc5df84680b83ec142b69de7bf741c006af432"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_minimal_k",
						"t": "int",
						"i": "__gnu_parallel::_Settings::multiway_merge_minimal_k",
						"r": "int multiway_merge_minimal_k",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_MINIMAL_K",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e59b7f90f93792efd737da0447c2a43d7892029a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_oversampling",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::multiway_merge_oversampling",
						"r": "unsigned int multiway_merge_oversampling",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_OVERSAMPLING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "025cf082abb1ca6d2c89a65b62c286674c0e4498"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::nth_element_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex nth_element_minimal_n",
						"s": "__gnu_parallel",
						"u": "NTH_ELEMENT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c2bce8fa425934d101f190befeb6c990accda6a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition_chunk_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::partition_chunk_size",
						"r": "__gnu_parallel::_SequenceIndex partition_chunk_size",
						"s": "__gnu_parallel",
						"u": "PARTITION_CHUNK_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6574600a5f99514e3465615566292f283596a965"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition_chunk_share",
						"t": "double",
						"i": "__gnu_parallel::_Settings::partition_chunk_share",
						"r": "double partition_chunk_share",
						"s": "__gnu_parallel",
						"u": "PARTITION_CHUNK_SHARE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3b57b23c6165ce12aeb0760e8316db0183d674d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::partition_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex partition_minimal_n",
						"s": "__gnu_parallel",
						"u": "PARTITION_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6d7236d794f54885b11673709620e1fde7bcd0c3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::partial_sort_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex partial_sort_minimal_n",
						"s": "__gnu_parallel",
						"u": "PARTIAL_SORT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e4df83bc6714eae35167d22338ac9bc1ee12f5f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sum_dilation",
						"t": "float",
						"i": "__gnu_parallel::_Settings::partial_sum_dilation",
						"r": "float partial_sum_dilation",
						"s": "__gnu_parallel",
						"u": "PARTIAL_SUM_DILATION",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3de7dd7a12b1e7840a4ab14d36d0a7a85e61ed2b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sum_minimal_n",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::partial_sum_minimal_n",
						"r": "unsigned int partial_sum_minimal_n",
						"s": "__gnu_parallel",
						"u": "PARTIAL_SUM_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8624d701894bdad8c257c7764b034adee9179f4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_shuffle_minimal_n",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::random_shuffle_minimal_n",
						"r": "unsigned int random_shuffle_minimal_n",
						"s": "__gnu_parallel",
						"u": "RANDOM_SHUFFLE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89ac692a8857c668eefd18dcb5c3c944fe646c7c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::replace_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex replace_minimal_n",
						"s": "__gnu_parallel",
						"u": "REPLACE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f07826ca50bdba2a4a734c7b0e6a7138d8b596e2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::set_difference_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex set_difference_minimal_n",
						"s": "__gnu_parallel",
						"u": "SET_DIFFERENCE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c01996f733aebfffb11d7e028559517ebb4ef7d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::set_intersection_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex set_intersection_minimal_n",
						"s": "__gnu_parallel",
						"u": "SET_INTERSECTION_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55b26f7af969dd84f3da8be3d4c94ec7327c0503"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::set_symmetric_difference_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex set_symmetric_difference_minimal_n",
						"s": "__gnu_parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "782c0e1f15652b8b207803d034aded65e10381a3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::set_union_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex set_union_minimal_n",
						"s": "__gnu_parallel",
						"u": "SET_UNION_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e780636ed0d0d144d13a8b2516e97bbc5adc5086"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::sort_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex sort_minimal_n",
						"s": "__gnu_parallel",
						"u": "SORT_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e61bffb19d900ebd3139232ce87eca79b7124174"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_mwms_oversampling",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::sort_mwms_oversampling",
						"r": "unsigned int sort_mwms_oversampling",
						"s": "__gnu_parallel",
						"u": "SORT_MWMS_OVERSAMPLING",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05d22d60a25dc9c75255da68295df8d573ee4374"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_qs_num_samples_preset",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::sort_qs_num_samples_preset",
						"r": "unsigned int sort_qs_num_samples_preset",
						"s": "__gnu_parallel",
						"u": "SORT_QS_NUM_SAMPLES_PRESET",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "729cf010273dce4838b97ad13a6fd76fbf50aced"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort_qsb_base_case_maximal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::sort_qsb_base_case_maximal_n",
						"r": "__gnu_parallel::_SequenceIndex sort_qsb_base_case_maximal_n",
						"s": "__gnu_parallel",
						"u": "SORT_QSB_BASE_CASE_MAXIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28c722e6f88ec05a8d9b4e60cec5e929013c9a85"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::transform_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex transform_minimal_n",
						"s": "__gnu_parallel",
						"u": "TRANSFORM_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f66692e6c9bede2c3bd4b2c80f2d50524031a241"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::unique_copy_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex unique_copy_minimal_n",
						"s": "__gnu_parallel",
						"u": "UNIQUE_COPY_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d67b6704d8a8532575b97efca896951eb919968d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "workstealing_chunk_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::workstealing_chunk_size",
						"r": "__gnu_parallel::_SequenceIndex workstealing_chunk_size",
						"s": "__gnu_parallel",
						"u": "WORKSTEALING_CHUNK_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa2ab5338b2e5dd016c2f003d415b3efdc299c89"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "L1_cache_size",
						"t": "unsigned long long",
						"i": "__gnu_parallel::_Settings::L1_cache_size",
						"r": "unsigned long long L1_cache_size",
						"s": "__gnu_parallel",
						"u": "L1_CACHE_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57d679a09dde23ca281f5094c9c23fc79411d327"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "L2_cache_size",
						"t": "unsigned long long",
						"i": "__gnu_parallel::_Settings::L2_cache_size",
						"r": "unsigned long long L2_cache_size",
						"s": "__gnu_parallel",
						"u": "L2_CACHE_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e66f18bb3dd630534c2780b7f553c5def646a13d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "TLB_size",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::TLB_size",
						"r": "unsigned int TLB_size",
						"s": "__gnu_parallel",
						"u": "TLB_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71b9fc4a713ddb4f787c56de31d811e095762253"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cache_line_size",
						"t": "unsigned int",
						"i": "__gnu_parallel::_Settings::cache_line_size",
						"r": "unsigned int cache_line_size",
						"s": "__gnu_parallel",
						"u": "CACHE_LINE_SIZE",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c499e1f56d712ff57d3c86e748afb4897320814"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "qsb_steals",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::qsb_steals",
						"r": "__gnu_parallel::_SequenceIndex qsb_steals",
						"s": "__gnu_parallel",
						"u": "QSB_STEALS",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "282c38075fb2a117302cac5694c6bc4cc4e2e335"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_minimal_n",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_Settings::search_minimal_n",
						"r": "__gnu_parallel::_SequenceIndex search_minimal_n",
						"s": "__gnu_parallel",
						"u": "SEARCH_MINIMAL_N",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be4a67f7434f56f79ca2f2f23b781f80bee3dbe2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_scale_factor",
						"t": "float",
						"i": "__gnu_parallel::_Settings::find_scale_factor",
						"r": "float find_scale_factor",
						"s": "__gnu_parallel",
						"u": "FIND_SCALE_FACTOR",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ad4cf18043871c98d2c9c2dfc048d56b512ff76"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "get",
						"t": "const _Settings &() throw()",
						"i": "__gnu_parallel::_Settings::",
						"r": "__attribute__((const)) static const __gnu_parallel::_Settings& get() throw()",
						"s": "__gnu_parallel",
						"u": "GET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "584c12b02dd95e151131812904703b2412d08389"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "set",
						"t": "void (_Settings &) throw()",
						"i": "__gnu_parallel::_Settings::set(_Settings&)throw()",
						"r": "static void set(__gnu_parallel::_Settings&) throw()",
						"s": "__gnu_parallel",
						"u": "SET",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2dac78ebbdac334f40b5586448b963d11c36546e"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Settings",
						"t": "void ()",
						"i": "__gnu_parallel::_Settings::_Settings()",
						"r": "explicit _Settings()",
						"s": "__gnu_parallel",
						"u": "_SETTINGS",
						"q": "__gnu_parallel::_Settings",
						"w": "__GNU_PARALLEL::_SETTINGS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18e8cfe71b17724eb63600d28374c65720648eac"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/algorithmfwd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ALGORITHMFWD_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ALGORITHMFWD_H",
						"r": "_GLIBCXX_PARALLEL_ALGORITHMFWD_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ALGORITHMFWD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1925b99a8d052fd2df9ca42c702dbec6955a70e1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIter (_FIter, _FIter)",
						"i": "std::__parallel::adjacent_find(_FIter,_FIter)",
						"r": "template <typename _FIter> _FIter adjacent_find(_FIter, _FIter)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a214f4cdb9620e9caa3d14dc86ed98d80a759466"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIter (_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_find(_FIter,_FIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter> _FIter adjacent_find(_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4d874900d102a2d30946f6a8e9205c6b5519b6a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_FIter (_FIter, _FIter, _IterTag)",
						"i": "std::__parallel::__adjacent_find_switch(_FIter,_FIter,_IterTag)",
						"r": "template <typename _FIter, typename _IterTag> _FIter __adjacent_find_switch(_FIter, _FIter, _IterTag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e64887ccde9def1be372f07ed2514db9cd3000d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_RAIter (_RAIter, _RAIter, random_access_iterator_tag)",
						"i": "std::__parallel::__adjacent_find_switch(_RAIter,_RAIter,random_access_iterator_tag)",
						"r": "template <typename _RAIter> _RAIter __adjacent_find_switch(_RAIter, _RAIter, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9985c4da13756585eeae5958f8baf1bdc418cc5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIter (_FIter, _FIter, _BiPredicate)",
						"i": "std::__parallel::adjacent_find(_FIter,_FIter,_BiPredicate)",
						"r": "template <typename _FIter, typename _BiPredicate> _FIter adjacent_find(_FIter, _FIter, _BiPredicate)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0be1de2de30f830229b92fdf78cb9d7b7ad0830c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIter (_FIter, _FIter, _BiPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_find(_FIter,_FIter,_BiPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _BiPredicate> _FIter adjacent_find(_FIter, _FIter, _BiPredicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ad688f063a649bbfff8d09ed014b97b48ab8356"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_FIter (_FIter, _FIter, _BiPredicate, _IterTag)",
						"i": "std::__parallel::__adjacent_find_switch(_FIter,_FIter,_BiPredicate,_IterTag)",
						"r": "template <typename _FIter, typename _BiPredicate, typename _IterTag> _FIter __adjacent_find_switch(_FIter, _FIter, _BiPredicate, _IterTag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a58e4d5b3679fc01b891731dd44a223696a17d9e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_RAIter (_RAIter, _RAIter, _BiPredicate, random_access_iterator_tag)",
						"i": "std::__parallel::__adjacent_find_switch(_RAIter,_RAIter,_BiPredicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _BiPredicate> _RAIter __adjacent_find_switch(_RAIter, _RAIter, _BiPredicate, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c38d04d29565c55ac35103907beb3e51a992b04"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter, _IIter, const _Tp&)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "787fd2733f7fc3f77a8c3f03b5f15bb9df05afd2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter, _IIter, const _Tp&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b1de6976417f8e0c7a9bdac1096bdeb73595c65"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter, _IIter, const _Tp&, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5cd6bcdef3ce0a0f340d6c2c078ee5bf3c2b3d3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count_switch",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, _IterTag)",
						"i": "std::__parallel::__count_switch(_IIter,_IIter,const _Tp&,_IterTag)",
						"r": "template <typename _IIter, typename _Tp, typename _IterTag> typename iterator_traits<_IIter>::difference_type __count_switch(_IIter, _IIter, const _Tp&, _IterTag)",
						"s": "std::__parallel",
						"u": "__COUNT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "591fa490c7c6408f61719dc62e506829201b2fad"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count_switch",
						"t": "typename iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__count_switch(_RAIter,_RAIter,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Tp> typename iterator_traits<_RAIter>::difference_type __count_switch(_RAIter, _RAIter, const _Tp&, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__COUNT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1350181604a246e3a98be80efa34a99a742a03ae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter, _IIter, _Predicate)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14c4a79df5ba6cf771bdd71561993d25e67ebf32"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6d2453d70e2b7850c466eddf6156ddf2f0437adb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter, _IIter, _Predicate, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2051878c03a46feb66900aa8139f81dbb102d80"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count_if_switch",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, _IterTag)",
						"i": "std::__parallel::__count_if_switch(_IIter,_IIter,_Predicate,_IterTag)",
						"r": "template <typename _IIter, typename _Predicate, typename _IterTag> typename iterator_traits<_IIter>::difference_type __count_if_switch(_IIter, _IIter, _Predicate, _IterTag)",
						"s": "std::__parallel",
						"u": "__COUNT_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "505beb5086d1150ef11d0f6b9a21e659e367539a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__count_if_switch",
						"t": "typename iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, _Predicate, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__count_if_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Predicate> typename iterator_traits<_RAIter>::difference_type __count_if_switch(_RAIter, _RAIter, _Predicate, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__COUNT_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9abf50b330202d71880adef815cf033aaf7edffa"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "abfd3c8dcc546f82e968f7dba1cbd86920232c8c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool equal(_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85741b75195ae854986b6ed957e12804b019be5d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> bool equal(_IIter1, _IIter1, _IIter2)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4031ac5129389798b8b5ee93c06f76a3f3140df4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "bool (_IIter1, _IIter1, _IIter2, _Predicate)",
						"i": "std::__parallel::equal(_IIter1,_IIter1,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool equal(_IIter1, _IIter1, _IIter2, _Predicate)",
						"s": "std::__parallel",
						"u": "EQUAL",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db6bee16d00a06e4a1b7c49ed1e0271e634ab7ed"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "_IIter (_IIter, _IIter, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find(_IIter,_IIter,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp> _IIter find(_IIter, _IIter, const _Tp&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ab8c074fa5104a5a0f5ecfe87b76f95796c70bd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "_IIter (_IIter, _IIter, const _Tp &)",
						"i": "std::__parallel::find(_IIter,_IIter,const _Tp&)",
						"r": "template <typename _IIter, typename _Tp> _IIter find(_IIter, _IIter, const _Tp& __val)",
						"s": "std::__parallel",
						"u": "FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "844137f377a7d45e0b6529b19e521d0c0d2e675d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_switch",
						"t": "_IIter (_IIter, _IIter, const _Tp &, _IterTag)",
						"i": "std::__parallel::__find_switch(_IIter,_IIter,const _Tp&,_IterTag)",
						"r": "template <typename _IIter, typename _Tp, typename _IterTag> _IIter __find_switch(_IIter, _IIter, const _Tp&, _IterTag)",
						"s": "std::__parallel",
						"u": "__FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e4ffed3473845833bc11bb7731467df298c7b25"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_switch",
						"t": "_RAIter (_RAIter, _RAIter, const _Tp &, random_access_iterator_tag)",
						"i": "std::__parallel::__find_switch(_RAIter,_RAIter,const _Tp&,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Tp> _RAIter __find_switch(_RAIter, _RAIter, const _Tp&, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d874475f24149d26ce6504dc71208131d1468241"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "_IIter (_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_if(_IIter,_IIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Predicate> _IIter find_if(_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af09f462cf927e9783366e9d99843e0abec23499"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "_IIter (_IIter, _IIter, _Predicate)",
						"i": "std::__parallel::find_if(_IIter,_IIter,_Predicate)",
						"r": "template <typename _IIter, typename _Predicate> _IIter find_if(_IIter, _IIter, _Predicate)",
						"s": "std::__parallel",
						"u": "FIND_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd755879dc3f97030e54746f326872b45e155c56"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_if_switch",
						"t": "_IIter (_IIter, _IIter, _Predicate, _IterTag)",
						"i": "std::__parallel::__find_if_switch(_IIter,_IIter,_Predicate,_IterTag)",
						"r": "template <typename _IIter, typename _Predicate, typename _IterTag> _IIter __find_if_switch(_IIter, _IIter, _Predicate, _IterTag)",
						"s": "std::__parallel",
						"u": "__FIND_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b83e75732d2cc6eb68fa0dedb8017298be0aa50"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_if_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Predicate, random_access_iterator_tag)",
						"i": "std::__parallel::__find_if_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Predicate> _RAIter __find_if_switch(_RAIter, _RAIter, _Predicate, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__FIND_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90613301decc604532d65a117d59d2740e709e77"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIter,_FIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _FIter> _IIter find_first_of(_IIter, _IIter, _FIter, _FIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae31d680511bbdc8d5e89dc49a337b7ad1b65eae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter, _BiPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIter,_FIter,_BiPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _FIter, typename _BiPredicate> _IIter find_first_of(_IIter, _IIter, _FIter, _FIter, _BiPredicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c707d6aeb9fccba0862821e8c561ee9092f81e1f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter, _BiPredicate)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIter,_FIter,_BiPredicate)",
						"r": "template <typename _IIter, typename _FIter, typename _BiPredicate> _IIter find_first_of(_IIter, _IIter, _FIter, _FIter, _BiPredicate)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85fbff14833b5a09499e3e389c659159ab67fecd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIter,_FIter)",
						"r": "template <typename _IIter, typename _FIter> _IIter find_first_of(_IIter, _IIter, _FIter, _FIter)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bcf2f11251fc925bb61caf299dd4ffddbf81ba49"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__find_first_of_switch(_IIter,_IIter,_FIter,_FIter,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter, typename _FIter, typename _IterTag1, typename _IterTag2> _IIter __find_first_of_switch(_IIter, _IIter, _FIter, _FIter, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f4cb3fbd982bc65c3dc1160b56cb223b66581ae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_RAIter (_RAIter, _RAIter, _FIter, _FIter, _BiPredicate, random_access_iterator_tag, _IterTag)",
						"i": "std::__parallel::__find_first_of_switch(_RAIter,_RAIter,_FIter,_FIter,_BiPredicate,random_access_iterator_tag,_IterTag)",
						"r": "template <typename _RAIter, typename _FIter, typename _BiPredicate, typename _IterTag> _RAIter __find_first_of_switch(_RAIter, _RAIter, _FIter, _FIter, _BiPredicate, std::random_access_iterator_tag, _IterTag)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0babd942de7f7e935a639b21c14ea9272b15ad8a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_IIter (_IIter, _IIter, _FIter, _FIter, _BiPredicate, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__find_first_of_switch(_IIter,_IIter,_FIter,_FIter,_BiPredicate,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter, typename _FIter, typename _BiPredicate, typename _IterTag1, typename _IterTag2> _IIter __find_first_of_switch(_IIter, _IIter, _FIter, _FIter, _BiPredicate, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7870eb28945cb8ac41bbd730d769ce02fd8fa729"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_IIter, _IIter, _Function)",
						"i": "std::__parallel::for_each(_IIter,_IIter,_Function)",
						"r": "template <typename _IIter, typename _Function> _Function for_each(_IIter, _IIter, _Function)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "524bd5814b3ce5fa8f0e58182b1ce9d6f8edabc4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_IIter, _IIter, _Function, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::for_each(_IIter,_IIter,_Function,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Function> _Function for_each(_IIter, _IIter, _Function, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0d5d45a40f9eb1b850e9cf0aab95ad3900afd45"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_Iterator, _Iterator, _Function, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::for_each(_Iterator,_Iterator,_Function,__gnu_parallel::_Parallelism)",
						"r": "template <typename _Iterator, typename _Function> _Function for_each(_Iterator, _Iterator, _Function, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bf178e75908c88af83b1f53d8f75aa26ecad613"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__for_each_switch",
						"t": "_Function (_IIter, _IIter, _Function, _IterTag)",
						"i": "std::__parallel::__for_each_switch(_IIter,_IIter,_Function,_IterTag)",
						"r": "template <typename _IIter, typename _Function, typename _IterTag> _Function __for_each_switch(_IIter, _IIter, _Function, _IterTag)",
						"s": "std::__parallel",
						"u": "__FOR_EACH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab628001071f93d630a9a9d80a4cccb73d4846dd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__for_each_switch",
						"t": "_Function (_RAIter, _RAIter, _Function, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__for_each_switch(_RAIter,_RAIter,_Function,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Function> _Function __for_each_switch(_RAIter, _RAIter, _Function, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__FOR_EACH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "749fb9052f9b90addfe73c1ef3e070233741ec40"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIter, _FIter, _Generator)",
						"i": "std::__parallel::generate(_FIter,_FIter,_Generator)",
						"r": "template <typename _FIter, typename _Generator> void generate(_FIter, _FIter, _Generator)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d4ff44193f69d945e4e1f1431bb1079bfdcd0ad"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIter, _FIter, _Generator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::generate(_FIter,_FIter,_Generator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Generator> void generate(_FIter, _FIter, _Generator, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62ca1fef2732e4310aec4231855bfe11c3bc7653"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIter, _FIter, _Generator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::generate(_FIter,_FIter,_Generator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter, typename _Generator> void generate(_FIter, _FIter, _Generator, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "471acd962f2f42a8b0ceeb3aaf20e2a4e60e8e00"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__generate_switch",
						"t": "void (_FIter, _FIter, _Generator, _IterTag)",
						"i": "std::__parallel::__generate_switch(_FIter,_FIter,_Generator,_IterTag)",
						"r": "template <typename _FIter, typename _Generator, typename _IterTag> void __generate_switch(_FIter, _FIter, _Generator, _IterTag)",
						"s": "std::__parallel",
						"u": "__GENERATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7964e54bcca2dd0b714aeaf204d7f550100a3e32"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__generate_switch",
						"t": "void (_RAIter, _RAIter, _Generator, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__generate_switch(_RAIter,_RAIter,_Generator,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Generator> void __generate_switch(_RAIter, _RAIter, _Generator, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__GENERATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "699ead27145c758a2bddaea1faf99eca392b3ed0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OIter (_OIter, _Size, _Generator)",
						"i": "std::__parallel::generate_n(_OIter,_Size,_Generator)",
						"r": "template <typename _OIter, typename _Size, typename _Generator> _OIter generate_n(_OIter, _Size, _Generator)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1800107015ad3db40f53d4def336dba043ebd074"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OIter (_OIter, _Size, _Generator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::generate_n(_OIter,_Size,_Generator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _OIter, typename _Size, typename _Generator> _OIter generate_n(_OIter, _Size, _Generator, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0df197f793e56142d7cad1bbeb20c99432fc808"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OIter (_OIter, _Size, _Generator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::generate_n(_OIter,_Size,_Generator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _OIter, typename _Size, typename _Generator> _OIter generate_n(_OIter, _Size, _Generator, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4697d57963a272db88076dfcf7372373a71522a1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__generate_n_switch",
						"t": "_OIter (_OIter, _Size, _Generator, _IterTag)",
						"i": "std::__parallel::__generate_n_switch(_OIter,_Size,_Generator,_IterTag)",
						"r": "template <typename _OIter, typename _Size, typename _Generator, typename _IterTag> _OIter __generate_n_switch(_OIter, _Size, _Generator, _IterTag)",
						"s": "std::__parallel",
						"u": "__GENERATE_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "096747128d4a90b9d35b432ed24502bdc8b67622"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__generate_n_switch",
						"t": "_RAIter (_RAIter, _Size, _Generator, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__generate_n_switch(_RAIter,_Size,_Generator,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Size, typename _Generator> _RAIter __generate_n_switch(_RAIter, _Size, _Generator, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__GENERATE_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c653a4e902ac97d438944832078487821974c2e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23c4eed725d270f91de272233770f84f2ef347e3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "79db6333381f8d085288e8390c17ffeaafbc9dfe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "178db8e5be1f8c978aa95a6ef8f7a73c1a8ad46c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate)",
						"i": "std::__parallel::lexicographical_compare(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Predicate)",
						"s": "std::__parallel",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "92e5f4649eabd7e575aaa2d295bdc601121b71eb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__lexicographical_compare_switch",
						"t": "bool (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__lexicographical_compare_switch(_IIter1,_IIter1,_IIter2,_IIter2,_Predicate,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IterTag1, typename _IterTag2> bool __lexicographical_compare_switch(_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__LEXICOGRAPHICAL_COMPARE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a4e818e12d9bb8fc82dd73a907f160fb166cfff"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__lexicographical_compare_switch",
						"t": "bool (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__lexicographical_compare_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> bool __lexicographical_compare_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__LEXICOGRAPHICAL_COMPARE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4875ee873558f7fcafafbda962cecce17f5ba7d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2> pair<_IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3251cef58c69bdc6bd4964eacb0a92ed07e04178"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> pair<_IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "421903ca722251ff6c2a5ac65fc0042f9ac423e0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2)",
						"r": "template <typename _IIter1, typename _IIter2> pair<_IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "096daecdbe3ec08c6f7cb25a3d18ef0c8bcc2aef"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate)",
						"i": "std::__parallel::mismatch(_IIter1,_IIter1,_IIter2,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate> pair<_IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2, _Predicate)",
						"s": "std::__parallel",
						"u": "MISMATCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c866514495b845732ac9c5edc4fc52b49d71537c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_IIter1, _IIter2> (_IIter1, _IIter1, _IIter2, _Predicate, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__mismatch_switch(_IIter1,_IIter1,_IIter2,_Predicate,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _IterTag1, typename _IterTag2> pair<_IIter1, _IIter2> __mismatch_switch(_IIter1, _IIter1, _IIter2, _Predicate, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "066c4c9adf3c6885228afa24776f02ea37a0dddb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__mismatch_switch",
						"t": "pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__mismatch_switch(_RAIter1,_RAIter1,_RAIter2,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Predicate> pair<_RAIter1, _RAIter2> __mismatch_switch(_RAIter1, _RAIter1, _RAIter2, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__MISMATCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cd4ca2bdd54947446fb27f39dc37855b4db3e89"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search(_FIter1,_FIter1,_FIter2,_FIter2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter1, typename _FIter2> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3af5caf9d5f1a4768fe97b0d425c1524f17291e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2)",
						"i": "std::__parallel::search(_FIter1,_FIter1,_FIter2,_FIter2)",
						"r": "template <typename _FIter1, typename _FIter2> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4a90d3a58a9ec012e713e10d4cdbc9110960c34"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search(_FIter1,_FIter1,_FIter2,_FIter2,_BiPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter1, typename _FIter2, typename _BiPredicate> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec5d6ee863c8ecb116e74d6ec35517f6ca5f281b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate)",
						"i": "std::__parallel::search(_FIter1,_FIter1,_FIter2,_FIter2,_BiPredicate)",
						"r": "template <typename _FIter1, typename _FIter2, typename _BiPredicate> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb0a889380d9db404985ecc52e7a69a480b2eb81"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_RAIter1 (_RAIter1, _RAIter1, _RAIter2, _RAIter2, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__search_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2> _RAIter1 __search_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a604457fb32ac52f35fa2e2de797d8dbe710e74"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__search_switch(_FIter1,_FIter1,_FIter2,_FIter2,_IterTag1,_IterTag2)",
						"r": "template <typename _FIter1, typename _FIter2, typename _IterTag1, typename _IterTag2> _FIter1 __search_switch(_FIter1, _FIter1, _FIter2, _FIter2, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d8d42e4475bf973efcf7ace1c17346be987535e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_RAIter1 (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _BiPredicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__search_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_BiPredicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _BiPredicate> _RAIter1 __search_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _BiPredicate, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52c472979c7e40b489ee74d43bc3263e71f50057"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_FIter1 (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__search_switch(_FIter1,_FIter1,_FIter2,_FIter2,_BiPredicate,_IterTag1,_IterTag2)",
						"r": "template <typename _FIter1, typename _FIter2, typename _BiPredicate, typename _IterTag1, typename _IterTag2> _FIter1 __search_switch(_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cd17acc286465b42d885e6e421450abd4556391"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIter (_FIter, _FIter, _Integer, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search_n(_FIter,_FIter,_Integer,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Integer, typename _Tp> _FIter search_n(_FIter, _FIter, _Integer, const _Tp&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ca38170d08f9c9d63ba011b8db3710128d587cd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIter (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search_n(_FIter,_FIter,_Integer,const _Tp&,_BiPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Integer, typename _Tp, typename _BiPredicate> _FIter search_n(_FIter, _FIter, _Integer, const _Tp&, _BiPredicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "093a20c1d886b5a5ac106c52041a33b8461d9b88"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIter (_FIter, _FIter, _Integer, const _Tp &)",
						"i": "std::__parallel::search_n(_FIter,_FIter,_Integer,const _Tp&)",
						"r": "template <typename _FIter, typename _Integer, typename _Tp> _FIter search_n(_FIter, _FIter, _Integer, const _Tp&)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dac62aa418c66f5487d70788668b3842eaf9fcdb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIter (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate)",
						"i": "std::__parallel::search_n(_FIter,_FIter,_Integer,const _Tp&,_BiPredicate)",
						"r": "template <typename _FIter, typename _Integer, typename _Tp, typename _BiPredicate> _FIter search_n(_FIter, _FIter, _Integer, const _Tp&, _BiPredicate)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e2f3c47d74aab56be9cba9e754d6e3e50a18000"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_n_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Integer, const _Tp &, _BiPredicate, random_access_iterator_tag)",
						"i": "std::__parallel::__search_n_switch(_RAIter,_RAIter,_Integer,const _Tp&,_BiPredicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Integer, typename _Tp, typename _BiPredicate> _RAIter __search_n_switch(_RAIter, _RAIter, _Integer, const _Tp&, _BiPredicate, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "050562a3c6aa3aff6c7db32de5752f7673c169fe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__search_n_switch",
						"t": "_FIter (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate, _IterTag)",
						"i": "std::__parallel::__search_n_switch(_FIter,_FIter,_Integer,const _Tp&,_BiPredicate,_IterTag)",
						"r": "template <typename _FIter, typename _Integer, typename _Tp, typename _BiPredicate, typename _IterTag> _FIter __search_n_switch(_FIter, _FIter, _Integer, const _Tp&, _BiPredicate, _IterTag)",
						"s": "std::__parallel",
						"u": "__SEARCH_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b96cef0d32e94c8479c26b1287c1125e4d1d83e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter, _IIter, _OIter, _UnaryOperation)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OIter,_UnaryOperation)",
						"r": "template <typename _IIter, typename _OIter, typename _UnaryOperation> _OIter transform(_IIter, _IIter, _OIter, _UnaryOperation)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "883a77bbcceb4dc8ed58bf842a7e2040b7ffb6ad"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter, _IIter, _OIter, _UnaryOperation, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OIter,_UnaryOperation,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter, typename _UnaryOperation> _OIter transform(_IIter, _IIter, _OIter, _UnaryOperation, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d8463f72e6922beb60aafba29de605ebc41833f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter, _IIter, _OIter, _UnaryOperation, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OIter,_UnaryOperation,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _OIter, typename _UnaryOperation> _OIter transform(_IIter, _IIter, _OIter, _UnaryOperation, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bf926b953a63f18a9c7aa0ebbbc962446982c96"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__transform1_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _UnaryOperation, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__transform1_switch(_IIter,_IIter,_OIter,_UnaryOperation,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter, typename _OIter, typename _UnaryOperation, typename _IterTag1, typename _IterTag2> _OIter __transform1_switch(_IIter, _IIter, _OIter, _UnaryOperation, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__TRANSFORM1_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0cfb486850b9fd0bac549ac36f8692bbe8a953c4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__transform1_switch",
						"t": "_RAOIter (_RAIIter, _RAIIter, _RAOIter, _UnaryOperation, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__transform1_switch(_RAIIter,_RAIIter,_RAOIter,_UnaryOperation,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIIter, typename _RAOIter, typename _UnaryOperation> _RAOIter __transform1_switch(_RAIIter, _RAIIter, _RAOIter, _UnaryOperation, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__TRANSFORM1_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3692886a312ae6059f326c7b8cf1f474b1436a46"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OIter,_BiOperation)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _BiOperation> _OIter transform(_IIter1, _IIter1, _IIter2, _OIter, _BiOperation)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a29099a25e5f938e2e6450e0b8141e6b65d93273"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OIter,_BiOperation,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _BiOperation> _OIter transform(_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c230f43a07de54e5208d61d91006c74ccbf93e17"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OIter,_BiOperation,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _BiOperation> _OIter transform(_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ccb3aff55472933e1dbb6680978010e106738b34"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__transform2_switch",
						"t": "_RAIter3 (_RAIter1, _RAIter1, _RAIter2, _RAIter3, _BiOperation, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__transform2_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter3,_BiOperation,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _RAIter3, typename _BiOperation> _RAIter3 __transform2_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter3, _BiOperation, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__TRANSFORM2_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1730a05e99855ee4d3e139da24e4bb4af6919cb3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__transform2_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, _Tag1, _Tag2, _Tag3)",
						"i": "std::__parallel::__transform2_switch(_IIter1,_IIter1,_IIter2,_OIter,_BiOperation,_Tag1,_Tag2,_Tag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _BiOperation, typename _Tag1, typename _Tag2, typename _Tag3> _OIter __transform2_switch(_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, _Tag1, _Tag2, _Tag3)",
						"s": "std::__parallel",
						"u": "__TRANSFORM2_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3b81c3128631732caaedfc4cd4148e8d5592941"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIter, _FIter, const _Tp &, const _Tp &)",
						"i": "std::__parallel::replace(_FIter,_FIter,const _Tp&,const _Tp&)",
						"r": "template <typename _FIter, typename _Tp> void replace(_FIter, _FIter, const _Tp&, const _Tp&)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6b303de29c814292ee777df7718542b1c6f1d9d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIter, _FIter, const _Tp &, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::replace(_FIter,_FIter,const _Tp&,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Tp> void replace(_FIter, _FIter, const _Tp&, const _Tp&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6d48186a25c9f49f6163ac88c0dc357d3336f43"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIter, _FIter, const _Tp &, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::replace(_FIter,_FIter,const _Tp&,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter, typename _Tp> void replace(_FIter, _FIter, const _Tp&, const _Tp&, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a0e3184696a112a77ae6f2e83e9b3410d1e11297"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__replace_switch",
						"t": "void (_FIter, _FIter, const _Tp &, const _Tp &, _IterTag)",
						"i": "std::__parallel::__replace_switch(_FIter,_FIter,const _Tp&,const _Tp&,_IterTag)",
						"r": "template <typename _FIter, typename _Tp, typename _IterTag> void __replace_switch(_FIter, _FIter, const _Tp&, const _Tp&, _IterTag)",
						"s": "std::__parallel",
						"u": "__REPLACE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d1a9ca68ab470ced08222472c4cdb4751ff74b5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__replace_switch",
						"t": "void (_RAIter, _RAIter, const _Tp &, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__replace_switch(_RAIter,_RAIter,const _Tp&,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Tp> void __replace_switch(_RAIter, _RAIter, const _Tp&, const _Tp&, std::random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "__REPLACE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dba960f17f73513460400ffbb73876175f05bcb9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIter, _FIter, _Predicate, const _Tp &)",
						"i": "std::__parallel::replace_if(_FIter,_FIter,_Predicate,const _Tp&)",
						"r": "template <typename _FIter, typename _Predicate, typename _Tp> void replace_if(_FIter, _FIter, _Predicate, const _Tp&)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aefb7f1bfe4921a8103c8f6e10ded41e94b89d47"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIter, _FIter, _Predicate, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::replace_if(_FIter,_FIter,_Predicate,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Predicate, typename _Tp> void replace_if(_FIter, _FIter, _Predicate, const _Tp&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18172b483c5963925b31629ee9d43a3d50d11da8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIter, _FIter, _Predicate, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::replace_if(_FIter,_FIter,_Predicate,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter, typename _Predicate, typename _Tp> void replace_if(_FIter, _FIter, _Predicate, const _Tp&, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8663e3f00f60c7b8f43ea0eef2fc0e30ad6b826"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__replace_if_switch",
						"t": "void (_FIter, _FIter, _Predicate, const _Tp &, _IterTag)",
						"i": "std::__parallel::__replace_if_switch(_FIter,_FIter,_Predicate,const _Tp&,_IterTag)",
						"r": "template <typename _FIter, typename _Predicate, typename _Tp, typename _IterTag> void __replace_if_switch(_FIter, _FIter, _Predicate, const _Tp&, _IterTag)",
						"s": "std::__parallel",
						"u": "__REPLACE_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99bb85ce222c50260a7cba21fa3162b993c7650d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__replace_if_switch",
						"t": "void (_RAIter, _RAIter, _Predicate, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__replace_if_switch(_RAIter,_RAIter,_Predicate,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Predicate, typename _Tp> void __replace_if_switch(_RAIter, _RAIter, _Predicate, const _Tp&, std::random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "__REPLACE_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2ab16954ec4c2b5fc6064784d28dc5611b08a79f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter)",
						"i": "std::__parallel::max_element(_FIter,_FIter)",
						"r": "template <typename _FIter> _FIter max_element(_FIter, _FIter)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd7d9cb4ae3cf20380b544a83db1e7dcd258d949"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::max_element(_FIter,_FIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter> _FIter max_element(_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fb320bf58346a28a2653e8bfbf661f2c7cfcedac"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::max_element(_FIter,_FIter,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter> _FIter max_element(_FIter, _FIter, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b568705a5c57f3d81866dd04eb536433782ffea7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter, _Compare)",
						"i": "std::__parallel::max_element(_FIter,_FIter,_Compare)",
						"r": "template <typename _FIter, typename _Compare> _FIter max_element(_FIter, _FIter, _Compare)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "97423528b1f55a7d54392ebd6e6018b2d15d419a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::max_element(_FIter,_FIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Compare> _FIter max_element(_FIter, _FIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "103d2a71e2b334df519de9db23824c48db1cda69"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIter (_FIter, _FIter, _Compare, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::max_element(_FIter,_FIter,_Compare,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter, typename _Compare> _FIter max_element(_FIter, _FIter, _Compare, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78db7807ff25fd850fbd312f62aa477edb99fa2a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__max_element_switch",
						"t": "_FIter (_FIter, _FIter, _Compare, _IterTag)",
						"i": "std::__parallel::__max_element_switch(_FIter,_FIter,_Compare,_IterTag)",
						"r": "template <typename _FIter, typename _Compare, typename _IterTag> _FIter __max_element_switch(_FIter, _FIter, _Compare, _IterTag)",
						"s": "std::__parallel",
						"u": "__MAX_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "516615cf50ad1564e57078f1b5272f1a587d7d59"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__max_element_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Compare, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__max_element_switch(_RAIter,_RAIter,_Compare,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare> _RAIter __max_element_switch(_RAIter, _RAIter, _Compare, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__MAX_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a443138814fd398e959dd0e23d10ab66963b8d4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9771e8bb8e46459974ac8d5cc375135cdcf8a182"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Compare> _OIter merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9ff84fa8a9418d31086e4d96652e9fab269a830"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Compare)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Compare> _OIter merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3fcb2a9db7b7547321b1683541e53d7585e670d5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OIter)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2223642320a265e6ef035898d49622256badaf56"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, _IterTag1, _IterTag2, _IterTag3)",
						"i": "std::__parallel::__merge_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Compare,_IterTag1,_IterTag2,_IterTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Compare, typename _IterTag1, typename _IterTag2, typename _IterTag3> _OIter __merge_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, _IterTag1, _IterTag2, _IterTag3)",
						"s": "std::__parallel",
						"u": "__MERGE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49b762ccc7d38c040143409af3fef6c361746b56"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__merge_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Compare,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Compare> _OIter __merge_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__MERGE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f09b8b3bd9f1c3d24731c13b9d19d872c9091fd1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter)",
						"i": "std::__parallel::min_element(_FIter,_FIter)",
						"r": "template <typename _FIter> _FIter min_element(_FIter, _FIter)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b244ae9953f877f4c4af2d7c17540fd542719163"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::min_element(_FIter,_FIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter> _FIter min_element(_FIter, _FIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e31e0c84730caa0d7e0d7f0ad263383e5c919a69"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::min_element(_FIter,_FIter,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter> _FIter min_element(_FIter, _FIter, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1041eeb1314abadae10a0a6f342f852aaaf674c7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter, _Compare)",
						"i": "std::__parallel::min_element(_FIter,_FIter,_Compare)",
						"r": "template <typename _FIter, typename _Compare> _FIter min_element(_FIter, _FIter, _Compare)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "831b60a28616cfe7748e168806ea86aa38111cfe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::min_element(_FIter,_FIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Compare> _FIter min_element(_FIter, _FIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b6c0a3759b3dd2a62a368e241f94f60b6892dc6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIter (_FIter, _FIter, _Compare, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::min_element(_FIter,_FIter,_Compare,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIter, typename _Compare> _FIter min_element(_FIter, _FIter, _Compare, __gnu_parallel::_Parallelism)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5e34e6fe73d98d6e8410fcf2731d7038c264fc0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__min_element_switch",
						"t": "_FIter (_FIter, _FIter, _Compare, _IterTag)",
						"i": "std::__parallel::__min_element_switch(_FIter,_FIter,_Compare,_IterTag)",
						"r": "template <typename _FIter, typename _Compare, typename _IterTag> _FIter __min_element_switch(_FIter, _FIter, _Compare, _IterTag)",
						"s": "std::__parallel",
						"u": "__MIN_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb5751806274d24fecb92dfb630abaa669b5b5f0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__min_element_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Compare, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__min_element_switch(_RAIter,_RAIter,_Compare,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare> _RAIter __min_element_switch(_RAIter, _RAIter, _Compare, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__MIN_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a8b3173b769906a6bda798c176b9e2b526df0b1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void nth_element(_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4df5729944337bae8d5d0f75d8d1c8d028e9e50e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void nth_element(_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ecf9b79e03e16adf31fd4af9a436e8ae2aebc7b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void nth_element(_RAIter, _RAIter, _RAIter, _Compare)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18cfd1543afe2e92e3ea31613a1aca4ca998c8ac"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void nth_element(_RAIter, _RAIter, _RAIter)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ead8f314e7faaec9ad367b9ade1466ece08bb6eb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void partial_sort(_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "abc2b7e636985411a1ed2fa6f7320815e3ad4843"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void partial_sort(_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "755be7b27addde309be2a9eb0536a72a06c4d064"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void partial_sort(_RAIter, _RAIter, _RAIter, _Compare)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d428db394a202d36f9ea47e4d652592c7e30dfe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void partial_sort(_RAIter, _RAIter, _RAIter)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "681cd8f334bda11abb1b0e0eef96925078d3e015"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "_FIter (_FIter, _FIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partition(_FIter,_FIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIter, typename _Predicate> _FIter partition(_FIter, _FIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTITION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f299eabe7917de1cb7fb462fbd5e65c969682c68"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "_FIter (_FIter, _FIter, _Predicate)",
						"i": "std::__parallel::partition(_FIter,_FIter,_Predicate)",
						"r": "template <typename _FIter, typename _Predicate> _FIter partition(_FIter, _FIter, _Predicate)",
						"s": "std::__parallel",
						"u": "PARTITION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20c51044f5bc3bf78b902265d2126ab29deaa44a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_switch",
						"t": "_FIter (_FIter, _FIter, _Predicate, _IterTag)",
						"i": "std::__parallel::__partition_switch(_FIter,_FIter,_Predicate,_IterTag)",
						"r": "template <typename _FIter, typename _Predicate, typename _IterTag> _FIter __partition_switch(_FIter, _FIter, _Predicate, _IterTag)",
						"s": "std::__parallel",
						"u": "__PARTITION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "645f2227b62e0df300fa3dcbfaa932ae85206f56"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__partition_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Predicate, random_access_iterator_tag)",
						"i": "std::__parallel::__partition_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Predicate> _RAIter __partition_switch(_RAIter, _RAIter, _Predicate, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__PARTITION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50fb2a29817c9d2c31f22f443d9e7833e3b2a194"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void random_shuffle(_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b2850f0663d4f1941eec4b972d25b168cb8fc01"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void random_shuffle(_RAIter, _RAIter, _RandomNumberGenerator&, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1b4b70bb033793a5f05db7cb8545de772fffb28"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void random_shuffle(_RAIter, _RAIter)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b6e5df48cfbacf79a804d9eaaa24b1023dac998"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator &&)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator&&)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void random_shuffle(_RAIter, _RAIter, _RandomNumberGenerator&&)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d73cc7773e9be42230877b02b58462c250698b60"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88bc70bee793f6a07f9a7c4ac0005460a15bee31"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c39b6efc43bf11ecf1e501d080d3e9bf368bd38"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OIter)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e0fd2959029f8c1d81316478c1dbf179d4d31f1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a8c38c2efe522cf2d362f963f9d1fbabd36e64f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_union_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"i": "std::__parallel::__set_union_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,_IterTag1,_IterTag2,_IterTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OIter, typename _IterTag1, typename _IterTag2, typename _IterTag3> _OIter __set_union_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"s": "std::__parallel",
						"u": "__SET_UNION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c71944cdd1f9279d434b1ae790d146afb4724896"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_union_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_union_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_union_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_UNION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc085b021ad60c6a19f9d12672225d679c82840b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "370f9db7c5d564d39d8965c99f6185126ae2ae8c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "30d30a8e9dd8fcdab9e5e660fbd05f307be6fbfb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OIter)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3ceab46c6ecd7a6447ff7d186e8cd5fca5d0087"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0faac0642d4c52677628192e4ee39a035df88710"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_intersection_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"i": "std::__parallel::__set_intersection_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,_IterTag1,_IterTag2,_IterTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OIter, typename _IterTag1, typename _IterTag2, typename _IterTag3> _OIter __set_intersection_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"s": "std::__parallel",
						"u": "__SET_INTERSECTION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2e9470c3f4006d9755b7ccd5dee9c0c14bd75c1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_intersection_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_intersection_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_intersection_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_INTERSECTION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e9291647cb7030f57a1147136ab6ff340c1d070"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ed538444488432f2fc46b267207ac3887cab099"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a81105bfb0b3455a4ee43fd7162e51cb4eeb6af"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9b356361aa5acc9056560621187adad8307f441"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "31fe3ea59a6f2e9d2f4989a995b00a88436b38f0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"i": "std::__parallel::__set_symmetric_difference_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,_IterTag1,_IterTag2,_IterTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OIter, typename _IterTag1, typename _IterTag2, typename _IterTag3> _OIter __set_symmetric_difference_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"s": "std::__parallel",
						"u": "__SET_SYMMETRIC_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb71539695aeafa8c4b11c192343c94acd6e219d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_symmetric_difference_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_symmetric_difference_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_SYMMETRIC_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c4b0d02767c0eddc484be86ffc46c7654d231c3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b87c0b32d1d0d2e14eb0837dbffa5d7afd895b4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e1d20dc8fb5db8bde9b610c05eb890d964e576d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter> _OIter set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "099e6cb9b82c14a1dc275691e3625a0e29cb5b52"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OIter, typename _Predicate> _OIter set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d23b402d508002da23d44190ea9f03cfd27bd06"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_difference_switch",
						"t": "_OIter (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"i": "std::__parallel::__set_difference_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OIter,_Predicate,_IterTag1,_IterTag2,_IterTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OIter, typename _IterTag1, typename _IterTag2, typename _IterTag3> _OIter __set_difference_switch(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)",
						"s": "std::__parallel",
						"u": "__SET_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ee7f4fa68fe35e7940f849ffccf3c9480859e3f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__set_difference_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_difference_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_difference_switch(_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f702723a7eabb4babb7cbac7c03d52441ee47625"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c997c8d0bcf9ec6ab66496bf75a62a465f92159e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void sort(_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "722d4b84065623420d3ed9106fe7cdba14bb715e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::sort(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void sort(_RAIter, _RAIter)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a1d1d7e251a54122a1a1a9426934cbdd24c4e1ec"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void sort(_RAIter, _RAIter, _Compare)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16c20d412845b121f6c100d54c211c64c3317f5d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c48b6306cf6f47108c5c100fa00eb5918b684023"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void stable_sort(_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a9f1bd256863f4e62a8b6fd2f6eff4f51c040b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter, _RAIter)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5cb9eb9b0b97620afbcc813a259053ef3bab37c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void stable_sort(_RAIter, _RAIter, _Compare)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cabcf0da683ff46134d48a1369bedb286ee76d5e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OIter (_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter> _OIter unique_copy(_IIter, _IIter, _OIter, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "252f6c34031aab648f7d72522bd1b263232bbe21"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OIter (_IIter, _IIter, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OIter, typename _Predicate> _OIter unique_copy(_IIter, _IIter, _OIter, _Predicate, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33cb579316922cbae4ce221c98514257d32dc0c8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OIter (_IIter, _IIter, _OIter)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OIter)",
						"r": "template <typename _IIter, typename _OIter> _OIter unique_copy(_IIter, _IIter, _OIter)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f51e5117c423de4fd6da5260225f7282552357d9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OIter (_IIter, _IIter, _OIter, _Predicate)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OIter,_Predicate)",
						"r": "template <typename _IIter, typename _OIter, typename _Predicate> _OIter unique_copy(_IIter, _IIter, _OIter, _Predicate)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b729e44ccd9cdde7d3e3cfc37348a1c3a029a2c3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique_copy_switch",
						"t": "_OIter (_IIter, _IIter, _OIter, _Predicate, _IterTag1, _IterTag2)",
						"i": "std::__parallel::__unique_copy_switch(_IIter,_IIter,_OIter,_Predicate,_IterTag1,_IterTag2)",
						"r": "template <typename _IIter, typename _OIter, typename _Predicate, typename _IterTag1, typename _IterTag2> _OIter __unique_copy_switch(_IIter, _IIter, _OIter, _Predicate, _IterTag1, _IterTag2)",
						"s": "std::__parallel",
						"u": "__UNIQUE_COPY_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e4248f5c03eb68766a455b005220e58c6d73d5b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__unique_copy_switch",
						"t": "_RandomAccess_OIter (_RAIter, _RAIter, _RandomAccess_OIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__unique_copy_switch(_RAIter,_RAIter,_RandomAccess_OIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _RandomAccess_OIter, typename _Predicate> _RandomAccess_OIter __unique_copy_switch(_RAIter, _RAIter, _RandomAccess_OIter, _Predicate, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__UNIQUE_COPY_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2587ef3abf112d907d1fecfbd693d05a15f636c3"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/find.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_FIND_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_FIND_H",
						"r": "_GLIBCXX_PARALLEL_FIND_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_FIND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d553f304fe12596dc23cefb42b54d7991361f8b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_template",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred, _Selector)",
						"i": "__gnu_parallel::__find_template(_RAIter1,_RAIter1,_RAIter2,_Pred,_Selector)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred, typename _Selector> pair<_RAIter1, _RAIter2> __find_template(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred, _Selector __selector)",
						"s": "__gnu_parallel",
						"u": "__FIND_TEMPLATE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7c4d7e2630e8b0ca3863f12d3f4a4fdc5f66b553"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_template",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred, _Selector, equal_split_tag)",
						"i": "__gnu_parallel::__find_template(_RAIter1,_RAIter1,_RAIter2,_Pred,_Selector,equal_split_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred, typename _Selector> pair<_RAIter1, _RAIter2> __find_template(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred, _Selector __selector, __gnu_parallel::equal_split_tag)",
						"s": "__gnu_parallel",
						"u": "__FIND_TEMPLATE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2c9f5d98e9b8e1b4515374c2aa1f2f2bf19327c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_template",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred, _Selector, growing_blocks_tag)",
						"i": "__gnu_parallel::__find_template(_RAIter1,_RAIter1,_RAIter2,_Pred,_Selector,growing_blocks_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred, typename _Selector> pair<_RAIter1, _RAIter2> __find_template(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred, _Selector __selector, __gnu_parallel::growing_blocks_tag)",
						"s": "__gnu_parallel",
						"u": "__FIND_TEMPLATE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "218bcf9bd2a113b0ba868a49db820efecb131188"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_template",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred, _Selector, constant_size_blocks_tag)",
						"i": "__gnu_parallel::__find_template(_RAIter1,_RAIter1,_RAIter2,_Pred,_Selector,constant_size_blocks_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred, typename _Selector> pair<_RAIter1, _RAIter2> __find_template(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred, _Selector __selector, __gnu_parallel::constant_size_blocks_tag)",
						"s": "__gnu_parallel",
						"u": "__FIND_TEMPLATE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b77ec7822dd2166b084247f3c658678d962d5c38"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/compatibility.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_COMPATIBILITY_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_COMPATIBILITY_H",
						"r": "_GLIBCXX_PARALLEL_COMPATIBILITY_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_COMPATIBILITY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4dc16509e1b25fa22728ca10468c74aba24f25ea"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__add_omp",
						"t": "_Tp (volatile _Tp *, _Tp)",
						"i": "__gnu_parallel::__add_omp(volatile _Tp*,_Tp)",
						"r": "template <typename _Tp> _Tp __add_omp(volatile _Tp *__ptr, _Tp __addend)",
						"s": "__gnu_parallel",
						"u": "__ADD_OMP",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c06a16e3082dfae3490382f04decbed11bec983"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__fetch_and_add",
						"t": "_Tp (volatile _Tp *, _Tp)",
						"i": "__gnu_parallel::__fetch_and_add(volatile _Tp*,_Tp)",
						"r": "template <typename _Tp> _Tp __fetch_and_add(volatile _Tp *__ptr, _Tp __addend)",
						"s": "__gnu_parallel",
						"u": "__FETCH_AND_ADD",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0608802f9a5853f369354a3d28a398ffcb243811"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__cas_omp",
						"t": "bool (volatile _Tp *, _Tp, _Tp)",
						"i": "__gnu_parallel::__cas_omp(volatile _Tp*,_Tp,_Tp)",
						"r": "template <typename _Tp> bool __cas_omp(volatile _Tp *__ptr, _Tp __comparand, _Tp __replacement)",
						"s": "__gnu_parallel",
						"u": "__CAS_OMP",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b662df30260f6a88b9042a90199c02e125b5c215"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__compare_and_swap",
						"t": "bool (volatile _Tp *, _Tp, _Tp)",
						"i": "__gnu_parallel::__compare_and_swap(volatile _Tp*,_Tp,_Tp)",
						"r": "template <typename _Tp> bool __compare_and_swap(volatile _Tp *__ptr, _Tp __comparand, _Tp __replacement)",
						"s": "__gnu_parallel",
						"u": "__COMPARE_AND_SWAP",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09ad67f621b82214935354cea770a287285b18d3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__yield",
						"t": "void ()",
						"i": "__gnu_parallel::__yield()",
						"r": "void __yield()",
						"s": "__gnu_parallel",
						"u": "__YIELD",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5817e9b0881b5dbb5d8f5d4248813ca68ea4729"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/equally_split.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_EQUALLY_SPLIT_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_EQUALLY_SPLIT_H",
						"r": "_GLIBCXX_PARALLEL_EQUALLY_SPLIT_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_EQUALLY_SPLIT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "473b589f3222ee47c668422a01599c5d799592b4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equally_split",
						"t": "_OutputIterator (_DifferenceType, _ThreadIndex, _OutputIterator)",
						"i": "__gnu_parallel::__equally_split(_DifferenceType,_ThreadIndex,_OutputIterator)",
						"r": "template <typename _DifferenceType, typename _OutputIterator> _OutputIterator __equally_split(_DifferenceType __n, __gnu_parallel::_ThreadIndex __num_threads, _OutputIterator __s)",
						"s": "__gnu_parallel",
						"u": "__EQUALLY_SPLIT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eca56341d541c0ccf16013d0eb59e214dc63660b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equally_split_point",
						"t": "_DifferenceType (_DifferenceType, _ThreadIndex, _ThreadIndex)",
						"i": "__gnu_parallel::__equally_split_point(_DifferenceType,_ThreadIndex,_ThreadIndex)",
						"r": "template <typename _DifferenceType> _DifferenceType __equally_split_point(_DifferenceType __n, __gnu_parallel::_ThreadIndex __num_threads, __gnu_parallel::_ThreadIndex __thread_no)",
						"s": "__gnu_parallel",
						"u": "__EQUALLY_SPLIT_POINT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09ca5731af93b69891ddefc55e4aa412779d2269"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/find_selectors.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_FIND_SELECTORS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_FIND_SELECTORS_H",
						"r": "_GLIBCXX_PARALLEL_FIND_SELECTORS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_FIND_SELECTORS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da30e595f3499b173ed2bdb8dad92c5d190ee189"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generic_find_selector",
						"t": "__gnu_parallel::__generic_find_selector",
						"i": "__gnu_parallel::__generic_find_selector",
						"r": "__generic_find_selector",
						"s": "__gnu_parallel",
						"u": "__GENERIC_FIND_SELECTOR",
						"q": "__gnu_parallel::__generic_find_selector",
						"w": "__GNU_PARALLEL::__GENERIC_FIND_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fdfea716fbf2a6585747707d4f5d4e0d99576c11"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_if_selector",
						"t": "__gnu_parallel::__find_if_selector",
						"i": "__gnu_parallel::__find_if_selector",
						"r": "__find_if_selector : public __gnu_parallel::__generic_find_selector",
						"s": "__gnu_parallel",
						"u": "__FIND_IF_SELECTOR",
						"q": "__gnu_parallel::__find_if_selector",
						"w": "__GNU_PARALLEL::__FIND_IF_SELECTOR",
						"y": "__gnu_parallel::__generic_find_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91b4a2dcf74ca7633b9c015e4619eae5b328ae52"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__find_if_selector::operator()(_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> bool operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__find_if_selector",
						"w": "__GNU_PARALLEL::__FIND_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06a2b30d8b243bd52f26169905c14fbc0263832b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sequential_algorithm",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__find_if_selector::_M_sequential_algorithm(_RAIter1,_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> pair<_RAIter1, _RAIter2> _M_sequential_algorithm(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "_M_SEQUENTIAL_ALGORITHM",
						"q": "__gnu_parallel::__find_if_selector",
						"w": "__GNU_PARALLEL::__FIND_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3bcf02560c4aae447f93fff65652ce85fdee163f"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_selector",
						"t": "__gnu_parallel::__adjacent_find_selector",
						"i": "__gnu_parallel::__adjacent_find_selector",
						"r": "__adjacent_find_selector : public __gnu_parallel::__generic_find_selector",
						"s": "__gnu_parallel",
						"u": "__ADJACENT_FIND_SELECTOR",
						"q": "__gnu_parallel::__adjacent_find_selector",
						"w": "__GNU_PARALLEL::__ADJACENT_FIND_SELECTOR",
						"y": "__gnu_parallel::__generic_find_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76595d32786f2b81ecb1b652c43dc85c5429ba4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__adjacent_find_selector::operator()(_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> bool operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__adjacent_find_selector",
						"w": "__GNU_PARALLEL::__ADJACENT_FIND_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7743388f4db040c6a6099fe87228615b206f4c6e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sequential_algorithm",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__adjacent_find_selector::_M_sequential_algorithm(_RAIter1,_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> pair<_RAIter1, _RAIter2> _M_sequential_algorithm(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "_M_SEQUENTIAL_ALGORITHM",
						"q": "__gnu_parallel::__adjacent_find_selector",
						"w": "__GNU_PARALLEL::__ADJACENT_FIND_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f16d616704437c4c91c178b44fffc988717d0ffd"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_selector",
						"t": "__gnu_parallel::__mismatch_selector",
						"i": "__gnu_parallel::__mismatch_selector",
						"r": "__mismatch_selector : public __gnu_parallel::__generic_find_selector",
						"s": "__gnu_parallel",
						"u": "__MISMATCH_SELECTOR",
						"q": "__gnu_parallel::__mismatch_selector",
						"w": "__GNU_PARALLEL::__MISMATCH_SELECTOR",
						"y": "__gnu_parallel::__generic_find_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "088d1a31fd1a2e88bfda16d201db82d9ff2133ea"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__mismatch_selector::operator()(_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> bool operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__mismatch_selector",
						"w": "__GNU_PARALLEL::__MISMATCH_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c61a5101f99d57ab27d6b547d47b45f1bee1c87f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sequential_algorithm",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__mismatch_selector::_M_sequential_algorithm(_RAIter1,_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> pair<_RAIter1, _RAIter2> _M_sequential_algorithm(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "_M_SEQUENTIAL_ALGORITHM",
						"q": "__gnu_parallel::__mismatch_selector",
						"w": "__GNU_PARALLEL::__MISMATCH_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1600eef5f24980df49427b26a5c9ea00a88ee29c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_selector",
						"t": "",
						"i": "__gnu_parallel::__find_first_of_selector",
						"r": "template <typename _FIterator> __find_first_of_selector : public __gnu_parallel::__generic_find_selector",
						"s": "__gnu_parallel",
						"u": "__FIND_FIRST_OF_SELECTOR",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "__gnu_parallel::__generic_find_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6389b1d97d8b3446c15c11740407b198a36cb7bb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_begin",
						"t": "_FIterator",
						"i": "__gnu_parallel::__find_first_of_selector::_M_begin",
						"r": "_FIterator _M_begin",
						"s": "__gnu_parallel",
						"u": "_M_BEGIN",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d77b793ef95caa8df2af274a51ba1baf9d5cfd0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_end",
						"t": "_FIterator",
						"i": "__gnu_parallel::__find_first_of_selector::_M_end",
						"r": "_FIterator _M_end",
						"s": "__gnu_parallel",
						"u": "_M_END",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a321820fdc32c2181ca9922ab4d018855148c8c"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_selector<_FIterator>",
						"t": "void (_FIterator, _FIterator)",
						"i": "__gnu_parallel::__find_first_of_selector::__find_first_of_selector(_FIterator,_FIterator)",
						"r": "explicit __find_first_of_selector<_FIterator>(_FIterator __begin, _FIterator __end)",
						"s": "__gnu_parallel",
						"u": "__FIND_FIRST_OF_SELECTOR<_FITERATOR>",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a7bceb710b7f1f3caea0a4d8825863d6ed39216"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__find_first_of_selector::operator()(_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> bool operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51d856caad55f83203020728a8571cc8c3cc47de"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sequential_algorithm",
						"t": "std::pair<_RAIter1, _RAIter2> (_RAIter1, _RAIter1, _RAIter2, _Pred)",
						"i": "__gnu_parallel::__find_first_of_selector::_M_sequential_algorithm(_RAIter1,_RAIter1,_RAIter2,_Pred)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Pred> pair<_RAIter1, _RAIter2> _M_sequential_algorithm(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "_M_SEQUENTIAL_ALGORITHM",
						"q": "__gnu_parallel::__find_first_of_selector",
						"w": "__GNU_PARALLEL::__FIND_FIRST_OF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fb4af5dbe5c219f2d250dd37d3f2493359e46b9e"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/algorithm",
			"value": {
				"items": [

				]
			}
		},
		{
			"key": "parallel/algo.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ALGO_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ALGO_H",
						"r": "_GLIBCXX_PARALLEL_ALGO_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ALGO_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7319b0be8c2379ed22ffad7cba5d629f48eda56c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_IIter, _IIter, _Function, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::for_each(_IIter,_IIter,_Function,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Function> _Function for_each(_IIter __begin, _IIter __end, _Function __f, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05b89c6e9a30b85582324811161e40ea0d2e5b4b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_switch",
						"t": "_Function (_IIter, _IIter, _Function, _IteratorTag)",
						"i": "std::__parallel::__for_each_switch(_IIter,_IIter,_Function,_IteratorTag)",
						"r": "template <typename _IIter, typename _Function, typename _IteratorTag> _Function __for_each_switch(_IIter __begin, _IIter __end, _Function __f, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__FOR_EACH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b097d1773f95c07f13dd8932b9b592b07f60072"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_switch",
						"t": "_Function (_RAIter, _RAIter, _Function, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__for_each_switch(_RAIter,_RAIter,_Function,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Function> _Function __for_each_switch(_RAIter __begin, _RAIter __end, _Function __f, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__FOR_EACH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8df5fb8c641df316b739addfa0380a31444e987"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_Iterator, _Iterator, _Function, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::for_each(_Iterator,_Iterator,_Function,__gnu_parallel::_Parallelism)",
						"r": "template <typename _Iterator, typename _Function> _Function for_each(_Iterator __begin, _Iterator __end, _Function __f, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "177650144be0e2c4957cd3e2919874531cab5e0b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "_Function (_Iterator, _Iterator, _Function)",
						"i": "std::__parallel::for_each(_Iterator,_Iterator,_Function)",
						"r": "template <typename _Iterator, typename _Function> _Function for_each(_Iterator __begin, _Iterator __end, _Function __f)",
						"s": "std::__parallel",
						"u": "FOR_EACH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "389726963b0ae090ce5b362bb736238d4d873ce1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "_IIter (_IIter, _IIter, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find(_IIter,_IIter,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp> _IIter find(_IIter __begin, _IIter __end, const _Tp& __val, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e853841f763f1f2f80f48cc018ccefc407b3084"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_switch",
						"t": "_IIter (_IIter, _IIter, const _Tp &, _IteratorTag)",
						"i": "std::__parallel::__find_switch(_IIter,_IIter,const _Tp&,_IteratorTag)",
						"r": "template <typename _IIter, typename _Tp, typename _IteratorTag> _IIter __find_switch(_IIter __begin, _IIter __end, const _Tp& __val, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20c57324de3c6bd1d2f8eb975545b5a2ec503b90"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_switch",
						"t": "_RAIter (_RAIter, _RAIter, const _Tp &, random_access_iterator_tag)",
						"i": "std::__parallel::__find_switch(_RAIter,_RAIter,const _Tp&,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Tp> _RAIter __find_switch(_RAIter __begin, _RAIter __end, const _Tp& __val, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03acb3c64456301ae5f320536d6e74ad91ffde01"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "_IIter (_IIter, _IIter, const _Tp &)",
						"i": "std::__parallel::find(_IIter,_IIter,const _Tp&)",
						"r": "template <typename _IIter, typename _Tp> _IIter find(_IIter __begin, _IIter __end, const _Tp& __val)",
						"s": "std::__parallel",
						"u": "FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c9bce02a87fddc6153821e8218ce27be72a20d57"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "_IIter (_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_if(_IIter,_IIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Predicate> _IIter find_if(_IIter __begin, _IIter __end, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "540b620014cbd29859ec6a80d5df7505d2a6bdcb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_if_switch",
						"t": "_IIter (_IIter, _IIter, _Predicate, _IteratorTag)",
						"i": "std::__parallel::__find_if_switch(_IIter,_IIter,_Predicate,_IteratorTag)",
						"r": "template <typename _IIter, typename _Predicate, typename _IteratorTag> _IIter __find_if_switch(_IIter __begin, _IIter __end, _Predicate __pred, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__FIND_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9965c88e82556d7d48492ad2139d30393880e94c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_if_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Predicate, random_access_iterator_tag)",
						"i": "std::__parallel::__find_if_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Predicate> _RAIter __find_if_switch(_RAIter __begin, _RAIter __end, _Predicate __pred, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__FIND_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c1f8b0e877c1eb94af49ff9ccfb9867d5bdd68e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "_IIter (_IIter, _IIter, _Predicate)",
						"i": "std::__parallel::find_if(_IIter,_IIter,_Predicate)",
						"r": "template <typename _IIter, typename _Predicate> _IIter find_if(_IIter __begin, _IIter __end, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "FIND_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb295e7063e1aa82924b4358bea36cd99473d0e0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIterator,_FIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _FIterator> _IIter find_first_of(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f6ffc046bc969d896a3090d664388978e088e46"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIterator,_FIterator,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _FIterator, typename _BinaryPredicate> _IIter find_first_of(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2, _BinaryPredicate __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e34e772443878ebf9828300609435e70049b2021"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__find_first_of_switch(_IIter,_IIter,_FIterator,_FIterator,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter, typename _FIterator, typename _IteratorTag1, typename _IteratorTag2> _IIter __find_first_of_switch(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e1bd090696ccfa477f39e91b0e0251489b3392a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_RAIter (_RAIter, _RAIter, _FIterator, _FIterator, _BinaryPredicate, random_access_iterator_tag, _IteratorTag)",
						"i": "std::__parallel::__find_first_of_switch(_RAIter,_RAIter,_FIterator,_FIterator,_BinaryPredicate,random_access_iterator_tag,_IteratorTag)",
						"r": "template <typename _RAIter, typename _FIterator, typename _BinaryPredicate, typename _IteratorTag> _RAIter __find_first_of_switch(_RAIter __begin1, _RAIter __end1, _FIterator __begin2, _FIterator __end2, _BinaryPredicate __comp, std::random_access_iterator_tag, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "769406454a92e83203eaefbdb7d5f1d5ec551984"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_first_of_switch",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator, _BinaryPredicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__find_first_of_switch(_IIter,_IIter,_FIterator,_FIterator,_BinaryPredicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter, typename _FIterator, typename _BinaryPredicate, typename _IteratorTag1, typename _IteratorTag2> _IIter __find_first_of_switch(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2, _BinaryPredicate __comp, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__FIND_FIRST_OF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27827b6338a9bd2d20a23928fa9a6dca00d882b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator, _BinaryPredicate)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIterator,_FIterator,_BinaryPredicate)",
						"r": "template <typename _IIter, typename _FIterator, typename _BinaryPredicate> _IIter find_first_of(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2, _BinaryPredicate __comp)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00d7e52f3fa6bbf33df53093c2d3fcdc69d55ae0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "_IIter (_IIter, _IIter, _FIterator, _FIterator)",
						"i": "std::__parallel::find_first_of(_IIter,_IIter,_FIterator,_FIterator)",
						"r": "template <typename _IIter, typename _FIterator> _IIter find_first_of(_IIter __begin1, _IIter __end1, _FIterator __begin2, _FIterator __end2)",
						"s": "std::__parallel",
						"u": "FIND_FIRST_OF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af2bb30112e5fb4dcaa0c278d91559ff036b3167"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OutputIterator> _OutputIterator unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06bdf065940444f66aeb8b9b751da4b44ee198d7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OutputIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Predicate> _OutputIterator unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "908f0dbd3c42faf3d38548b1eadebceaf00b986e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unique_copy_switch",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _Predicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__unique_copy_switch(_IIter,_IIter,_OutputIterator,_Predicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Predicate, typename _IteratorTag1, typename _IteratorTag2> _OutputIterator __unique_copy_switch(_IIter __begin, _IIter __last, _OutputIterator __out, _Predicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__UNIQUE_COPY_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "806bc7438208be5cd0ff14b479a82fb60153cb4b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__unique_copy_switch",
						"t": "_RandomAccessOutputIterator (_RAIter, _RAIter, _RandomAccessOutputIterator, _Predicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__unique_copy_switch(_RAIter,_RAIter,_RandomAccessOutputIterator,_Predicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _RandomAccessOutputIterator, typename _Predicate> _RandomAccessOutputIterator __unique_copy_switch(_RAIter __begin, _RAIter __last, _RandomAccessOutputIterator __out, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__UNIQUE_COPY_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "68c08483aa65c9bad04a32cd7d166f8f9ff8c171"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OutputIterator)",
						"r": "template <typename _IIter, typename _OutputIterator> _OutputIterator unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ffe8ca2be49e3c197fe79a87663078ca28ca0a8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _Predicate)",
						"i": "std::__parallel::unique_copy(_IIter,_IIter,_OutputIterator,_Predicate)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Predicate> _OutputIterator unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "UNIQUE_COPY",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8daeb9bb92a8e2dab5a33cf2476beba75a08f10c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_union(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60bf22c74e84798c5b4c150bcb50308c23c2dd73"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_union(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de78cd28f9504eb8e7e812faf2a23590681a8014"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_union_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"i": "std::__parallel::__set_union_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,_IteratorTag1,_IteratorTag2,_IteratorTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OutputIterator, typename _IteratorTag1, typename _IteratorTag2, typename _IteratorTag3> _OutputIterator __set_union_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Predicate __pred, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"s": "std::__parallel",
						"u": "__SET_UNION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69edf63c222d6910ca4401d6250f0b57889aef71"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_union_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_union_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_union_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Output_RAIter __result, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_UNION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6761829fad967298d02321451fda53f3e69e4f2b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_union(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01644ac4ee5f14095addfa6b3febd753a0c90c86"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate)",
						"i": "std::__parallel::set_union(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_union(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "SET_UNION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "034e935ff9d1e3a99e379af353d6294712e14b5e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_intersection(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c827648c0739725f48aad55a1c7bb68223fd57c4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_intersection(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c617bf1db249dd1755a3140143d0a949340edc0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_intersection_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"i": "std::__parallel::__set_intersection_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,_IteratorTag1,_IteratorTag2,_IteratorTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OutputIterator, typename _IteratorTag1, typename _IteratorTag2, typename _IteratorTag3> _OutputIterator __set_intersection_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Predicate __pred, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"s": "std::__parallel",
						"u": "__SET_INTERSECTION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c898db83458c45c0f60a1c303cfea86aa80c7dd6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_intersection_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_intersection_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_intersection_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Output_RAIter __result, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_INTERSECTION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78a5dc526c2710d0ae5d9a05b2c8e9dab205dcce"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_intersection(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eff7e54a2f7f9e4d64596d32938ec786f4e64957"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate)",
						"i": "std::__parallel::set_intersection(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_intersection(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "SET_INTERSECTION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f511210ead743a7d5d7b343164915e534bb64116"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bf70dba6d5f10c6d5ebaf36412ad82c3356384e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74a4b2b3a571e3455f0673386bfd43760b67a1cc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"i": "std::__parallel::__set_symmetric_difference_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,_IteratorTag1,_IteratorTag2,_IteratorTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OutputIterator, typename _IteratorTag1, typename _IteratorTag2, typename _IteratorTag3> _OutputIterator __set_symmetric_difference_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Predicate __pred, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"s": "std::__parallel",
						"u": "__SET_SYMMETRIC_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f25527c56b7952faebb86b214b3091d2ff0e920c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_symmetric_difference_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_symmetric_difference_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Output_RAIter __result, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_SYMMETRIC_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "21ddd6c0379527dc8013d43914b59632077f91e4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c683de55643e7444ffb0f41504a1a6137196a2e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate)",
						"i": "std::__parallel::set_symmetric_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1bd67aaffe1a306f2f3bbd94ab2bfa67d6b1219"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bef2bbe1b7cef780644996089ec8db3bd6c4ffa8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33290cd4e462a9d20a16eb48d622abc5d39f1d75"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_difference_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"i": "std::__parallel::__set_difference_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate,_IteratorTag1,_IteratorTag2,_IteratorTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _Predicate, typename _OutputIterator, typename _IteratorTag1, typename _IteratorTag2, typename _IteratorTag3> _OutputIterator __set_difference_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Predicate __pred, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"s": "std::__parallel",
						"u": "__SET_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b9d618c3484bccbfb8af6fc6952efa94740cc52"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_difference_switch",
						"t": "_Output_RAIter (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__set_difference_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_Output_RAIter,_Predicate,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _Output_RAIter, typename _Predicate> _Output_RAIter __set_difference_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _Output_RAIter __result, _Predicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SET_DIFFERENCE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8a8d07990ca26ecef80197634e42751a2ecbfec"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator set_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "731a6798f20fc3ddd0e9ddb3b26f4ff2d04bc26b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Predicate)",
						"i": "std::__parallel::set_difference(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Predicate)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Predicate> _OutputIterator set_difference(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "SET_DIFFERENCE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf43e75f7e793ef4da743071f3ef2d4dc8d6076f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIterator (_FIterator, _FIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_find(_FIterator,_FIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator> _FIterator adjacent_find(_FIterator __begin, _FIterator __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c44741f797cbabae0e01c50af7876da71481a7a9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIterator (_FIterator, _FIterator, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::adjacent_find(_FIterator,_FIterator,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _BinaryPredicate> _FIterator adjacent_find(_FIterator __begin, _FIterator __end, _BinaryPredicate __binary_pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e12304e1541f09ee081f486a4ee83372b4867f6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_RAIter (_RAIter, _RAIter, random_access_iterator_tag)",
						"i": "std::__parallel::__adjacent_find_switch(_RAIter,_RAIter,random_access_iterator_tag)",
						"r": "template <typename _RAIter> _RAIter __adjacent_find_switch(_RAIter __begin, _RAIter __end, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9382d2d6ac0e58d7682384433aa6f833022259e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_FIterator (_FIterator, _FIterator, _IteratorTag)",
						"i": "std::__parallel::__adjacent_find_switch(_FIterator,_FIterator,_IteratorTag)",
						"r": "template <typename _FIterator, typename _IteratorTag> _FIterator __adjacent_find_switch(_FIterator __begin, _FIterator __end, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88bc63dfcb5322b53249ed379f64476ff8d0544b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIterator (_FIterator, _FIterator)",
						"i": "std::__parallel::adjacent_find(_FIterator,_FIterator)",
						"r": "template <typename _FIterator> _FIterator adjacent_find(_FIterator __begin, _FIterator __end)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a891b5906d31de794a898acceda9f69909bffdf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_FIterator (_FIterator, _FIterator, _BinaryPredicate, _IteratorTag)",
						"i": "std::__parallel::__adjacent_find_switch(_FIterator,_FIterator,_BinaryPredicate,_IteratorTag)",
						"r": "template <typename _FIterator, typename _BinaryPredicate, typename _IteratorTag> _FIterator __adjacent_find_switch(_FIterator __begin, _FIterator __end, _BinaryPredicate __pred, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf5256eeed1dca8c9f0690f66676fd719b73774b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_find_switch",
						"t": "_RAIter (_RAIter, _RAIter, _BinaryPredicate, random_access_iterator_tag)",
						"i": "std::__parallel::__adjacent_find_switch(_RAIter,_RAIter,_BinaryPredicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _BinaryPredicate> _RAIter __adjacent_find_switch(_RAIter __begin, _RAIter __end, _BinaryPredicate __pred, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__ADJACENT_FIND_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d28c368c4bc7ac1bdcc728160933172ffc3c2ed"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "_FIterator (_FIterator, _FIterator, _BinaryPredicate)",
						"i": "std::__parallel::adjacent_find(_FIterator,_FIterator,_BinaryPredicate)",
						"r": "template <typename _FIterator, typename _BinaryPredicate> _FIterator adjacent_find(_FIterator __begin, _FIterator __end, _BinaryPredicate __pred)",
						"s": "std::__parallel",
						"u": "ADJACENT_FIND",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "522816435c193ddc666629606d04389f1bacb0ab"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter __begin, _IIter __end, const _Tp& __value, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a058949eea17fc9c9d7e709e2ab2cbf53d63d5d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_switch",
						"t": "typename iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__count_switch(_RAIter,_RAIter,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Tp> typename iterator_traits<_RAIter>::difference_type __count_switch(_RAIter __begin, _RAIter __end, const _Tp& __value, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__COUNT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c07384f9f30b1c8b1cd8d3f82144d06eb2f35c44"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_switch",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, _IteratorTag)",
						"i": "std::__parallel::__count_switch(_IIter,_IIter,const _Tp&,_IteratorTag)",
						"r": "template <typename _IIter, typename _Tp, typename _IteratorTag> typename iterator_traits<_IIter>::difference_type __count_switch(_IIter __begin, _IIter __end, const _Tp& __value, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__COUNT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c5d24a6ae3d2063429561d0b889d553fb0eaab6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter __begin, _IIter __end, const _Tp& __value, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7c96a670a8e419f17584daf1199bfea58019f43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, const _Tp &)",
						"i": "std::__parallel::count(_IIter,_IIter,const _Tp&)",
						"r": "template <typename _IIter, typename _Tp> typename iterator_traits<_IIter>::difference_type count(_IIter __begin, _IIter __end, const _Tp& __value)",
						"s": "std::__parallel",
						"u": "COUNT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9cb914d26a059ce24df962385c1ba664137fe699"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter __begin, _IIter __end, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "030de1f1c6bf09e678264b0c625a4efeb6be6766"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_if_switch",
						"t": "typename iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, _Predicate, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__count_if_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Predicate> typename iterator_traits<_RAIter>::difference_type __count_if_switch(_RAIter __begin, _RAIter __end, _Predicate __pred, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_unbalanced)",
						"s": "std::__parallel",
						"u": "__COUNT_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "964fb1820c3b4648a6876a68787fba32a48cef07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_if_switch",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, _IteratorTag)",
						"i": "std::__parallel::__count_if_switch(_IIter,_IIter,_Predicate,_IteratorTag)",
						"r": "template <typename _IIter, typename _Predicate, typename _IteratorTag> typename iterator_traits<_IIter>::difference_type __count_if_switch(_IIter __begin, _IIter __end, _Predicate __pred, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__COUNT_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6f9c10b67028b3e41ee928eb4b0b19783dbccccf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter __begin, _IIter __end, _Predicate __pred, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e664e6613e3c55cc6b48996243651d3aa9e7f3d0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "typename iterator_traits<_IIter>::difference_type (_IIter, _IIter, _Predicate)",
						"i": "std::__parallel::count_if(_IIter,_IIter,_Predicate)",
						"r": "template <typename _IIter, typename _Predicate> typename iterator_traits<_IIter>::difference_type count_if(_IIter __begin, _IIter __end, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "COUNT_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "100c738f9ca3da2b8bcab11677b70d46163f0366"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search(_FIterator1,_FIterator1,_FIterator2,_FIterator2,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator1, typename _FIterator2> _FIterator1 search(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e99e43906623e02265bff1a8f615903ce01c9218"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_RAIter1 (_RAIter1, _RAIter1, _RAIter2, _RAIter2, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__search_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2> _RAIter1 __search_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "322d668a344f5cb39ffe62ce4a307d4cfa89763a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__search_switch(_FIterator1,_FIterator1,_FIterator2,_FIterator2,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _FIterator1, typename _FIterator2, typename _IteratorTag1, typename _IteratorTag2> _FIterator1 __search_switch(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a28d42881eb0ce42e77f4871d1b62dacfdcefd2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2)",
						"i": "std::__parallel::search(_FIterator1,_FIterator1,_FIterator2,_FIterator2)",
						"r": "template <typename _FIterator1, typename _FIterator2> _FIterator1 search(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "216aff1115886a5f0b7d717dc50003dd675f1938"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search(_FIterator1,_FIterator1,_FIterator2,_FIterator2,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator1, typename _FIterator2, typename _BinaryPredicate> _FIterator1 search(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2, _BinaryPredicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "270f610f4092a02576974507ea24e64664c1efd0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_RAIter1 (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _BinaryPredicate, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__search_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter2,_BinaryPredicate,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _BinaryPredicate> _RAIter1 __search_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter2 __end2, _BinaryPredicate __pred, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b5d0669d53d067e69859703d4d3c8090a8faf2b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_switch",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2, _BinaryPredicate, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__search_switch(_FIterator1,_FIterator1,_FIterator2,_FIterator2,_BinaryPredicate,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _FIterator1, typename _FIterator2, typename _BinaryPredicate, typename _IteratorTag1, typename _IteratorTag2> _FIterator1 __search_switch(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2, _BinaryPredicate __pred, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__SEARCH_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3acc2695d22b86c747d66c7d7820883a9838fefe"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_FIterator1 (_FIterator1, _FIterator1, _FIterator2, _FIterator2, _BinaryPredicate)",
						"i": "std::__parallel::search(_FIterator1,_FIterator1,_FIterator2,_FIterator2,_BinaryPredicate)",
						"r": "template <typename _FIterator1, typename _FIterator2, typename _BinaryPredicate> _FIterator1 search(_FIterator1 __begin1, _FIterator1 __end1, _FIterator2 __begin2, _FIterator2 __end2, _BinaryPredicate __pred)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b706121b243d2cf50439fe90153de6a0dc29c2e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Searcher &)",
						"i": "std::__parallel::search(_ForwardIterator,_ForwardIterator,const _Searcher&)",
						"r": "template <typename _ForwardIterator, typename _Searcher> _ForwardIterator search(_ForwardIterator __first, _ForwardIterator __last, const _Searcher& __searcher)",
						"s": "std::__parallel",
						"u": "SEARCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "21533e54123c70518c9518461bd2d68b6d41c28e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIterator (_FIterator, _FIterator, _Integer, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search_n(_FIterator,_FIterator,_Integer,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Integer, typename _Tp> _FIterator search_n(_FIterator __begin, _FIterator __end, _Integer __count, const _Tp& __val, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ce597034dc12d59519af35b243edb516a7baf29"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIterator (_FIterator, _FIterator, _Integer, const _Tp &, _BinaryPredicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::search_n(_FIterator,_FIterator,_Integer,const _Tp&,_BinaryPredicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Integer, typename _Tp, typename _BinaryPredicate> _FIterator search_n(_FIterator __begin, _FIterator __end, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "071e41d09244d95d8e26d02f017f5c24d3802691"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIterator (_FIterator, _FIterator, _Integer, const _Tp &)",
						"i": "std::__parallel::search_n(_FIterator,_FIterator,_Integer,const _Tp&)",
						"r": "template <typename _FIterator, typename _Integer, typename _Tp> _FIterator search_n(_FIterator __begin, _FIterator __end, _Integer __count, const _Tp& __val)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d1125b4d92a5dc1a3a05594d83d6745b1bc6c3b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Integer, const _Tp &, _BinaryPredicate, random_access_iterator_tag)",
						"i": "std::__parallel::__search_n_switch(_RAIter,_RAIter,_Integer,const _Tp&,_BinaryPredicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Integer, typename _Tp, typename _BinaryPredicate> _RAIter __search_n_switch(_RAIter __begin, _RAIter __end, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__SEARCH_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd470ccbb321a7797cafcd7863e67bd91f1cd82a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_n_switch",
						"t": "_FIterator (_FIterator, _FIterator, _Integer, const _Tp &, _BinaryPredicate, _IteratorTag)",
						"i": "std::__parallel::__search_n_switch(_FIterator,_FIterator,_Integer,const _Tp&,_BinaryPredicate,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Integer, typename _Tp, typename _BinaryPredicate, typename _IteratorTag> _FIterator __search_n_switch(_FIterator __begin, _FIterator __end, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__SEARCH_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ce287d65776bff0cfc593cd46cfbe07e83dd5da"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "_FIterator (_FIterator, _FIterator, _Integer, const _Tp &, _BinaryPredicate)",
						"i": "std::__parallel::search_n(_FIterator,_FIterator,_Integer,const _Tp&,_BinaryPredicate)",
						"r": "template <typename _FIterator, typename _Integer, typename _Tp, typename _BinaryPredicate> _FIterator search_n(_FIterator __begin, _FIterator __end, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred)",
						"s": "std::__parallel",
						"u": "SEARCH_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1637f67993ba4cc64374bcc5f902b6107280cb43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _UnaryOperation, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OutputIterator,_UnaryOperation,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _UnaryOperation> _OutputIterator transform(_IIter __begin, _IIter __end, _OutputIterator __result, _UnaryOperation __unary_op, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57eb48a688cab0573fe6f6187d524fbbc44ba2be"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform1_switch",
						"t": "_RAIter2 (_RAIter1, _RAIter1, _RAIter2, _UnaryOperation, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__transform1_switch(_RAIter1,_RAIter1,_RAIter2,_UnaryOperation,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _UnaryOperation> _RAIter2 __transform1_switch(_RAIter1 __begin, _RAIter1 __end, _RAIter2 __result, _UnaryOperation __unary_op, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__TRANSFORM1_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8de82c456edcca98ea0406787129cb7e101fced"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform1_switch",
						"t": "_RAIter2 (_RAIter1, _RAIter1, _RAIter2, _UnaryOperation, _IteratorTag1, _IteratorTag2)",
						"i": "std::__parallel::__transform1_switch(_RAIter1,_RAIter1,_RAIter2,_UnaryOperation,_IteratorTag1,_IteratorTag2)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _UnaryOperation, typename _IteratorTag1, typename _IteratorTag2> _RAIter2 __transform1_switch(_RAIter1 __begin, _RAIter1 __end, _RAIter2 __result, _UnaryOperation __unary_op, _IteratorTag1, _IteratorTag2)",
						"s": "std::__parallel",
						"u": "__TRANSFORM1_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f364a131ff6d76d40962fd571abddaa1dd83b71b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _UnaryOperation, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OutputIterator,_UnaryOperation,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _UnaryOperation> _OutputIterator transform(_IIter __begin, _IIter __end, _OutputIterator __result, _UnaryOperation __unary_op, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff9a611ec8304c8950fb363d7e745ac81996d99d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _UnaryOperation)",
						"i": "std::__parallel::transform(_IIter,_IIter,_OutputIterator,_UnaryOperation)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _UnaryOperation> _OutputIterator transform(_IIter __begin, _IIter __end, _OutputIterator __result, _UnaryOperation __unary_op)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5f9ae3a20b256e81dbbff78de619c73c1cb4e2ef"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _OutputIterator, _BinaryOperation, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OutputIterator,_BinaryOperation,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _BinaryOperation> _OutputIterator transform(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _OutputIterator __result, _BinaryOperation __binary_op, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c56c2811949e6d6895362cb5561293ae299600a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform2_switch",
						"t": "_RAIter3 (_RAIter1, _RAIter1, _RAIter2, _RAIter3, _BinaryOperation, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__transform2_switch(_RAIter1,_RAIter1,_RAIter2,_RAIter3,_BinaryOperation,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _RAIter3, typename _BinaryOperation> _RAIter3 __transform2_switch(_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _RAIter3 __result, _BinaryOperation __binary_op, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__TRANSFORM2_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1c2da8961e0dd47e009e09402a7aca65d4a3daf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform2_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _OutputIterator, _BinaryOperation, _Tag1, _Tag2, _Tag3)",
						"i": "std::__parallel::__transform2_switch(_IIter1,_IIter1,_IIter2,_OutputIterator,_BinaryOperation,_Tag1,_Tag2,_Tag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _BinaryOperation, typename _Tag1, typename _Tag2, typename _Tag3> _OutputIterator __transform2_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _OutputIterator __result, _BinaryOperation __binary_op, _Tag1, _Tag2, _Tag3)",
						"s": "std::__parallel",
						"u": "__TRANSFORM2_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99bc5cc56845d133fbe4e6b41d424c1063a79c21"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _OutputIterator, _BinaryOperation, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OutputIterator,_BinaryOperation,__gnu_parallel::_Parallelism)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _BinaryOperation> _OutputIterator transform(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _OutputIterator __result, _BinaryOperation __binary_op, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d625ca219eca9be332157aab9c293214661e02d1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _OutputIterator, _BinaryOperation)",
						"i": "std::__parallel::transform(_IIter1,_IIter1,_IIter2,_OutputIterator,_BinaryOperation)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _BinaryOperation> _OutputIterator transform(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _OutputIterator __result, _BinaryOperation __binary_op)",
						"s": "std::__parallel",
						"u": "TRANSFORM",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b1f9ac4f9d21a69d2158981ebcab58bd2466486"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIterator, _FIterator, const _Tp &, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::replace(_FIterator,_FIterator,const _Tp&,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Tp> void replace(_FIterator __begin, _FIterator __end, const _Tp& __old_value, const _Tp& __new_value, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d1fa24cf49dd7f34b148a41d11c46299ba81250"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_switch",
						"t": "void (_FIterator, _FIterator, const _Tp &, const _Tp &, _IteratorTag)",
						"i": "std::__parallel::__replace_switch(_FIterator,_FIterator,const _Tp&,const _Tp&,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Tp, typename _IteratorTag> void __replace_switch(_FIterator __begin, _FIterator __end, const _Tp& __old_value, const _Tp& __new_value, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__REPLACE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c986c25de111f8972cc6382be6933b5247e6c28"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_switch",
						"t": "void (_RAIter, _RAIter, const _Tp &, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__replace_switch(_RAIter,_RAIter,const _Tp&,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Tp> void __replace_switch(_RAIter __begin, _RAIter __end, const _Tp& __old_value, const _Tp& __new_value, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "__REPLACE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b87bb007346392dee2cc9c95d1381f42f9121a14"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIterator, _FIterator, const _Tp &, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::replace(_FIterator,_FIterator,const _Tp&,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator, typename _Tp> void replace(_FIterator __begin, _FIterator __end, const _Tp& __old_value, const _Tp& __new_value, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84b3c43032384ced552d59b43c54378278f264c9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "void (_FIterator, _FIterator, const _Tp &, const _Tp &)",
						"i": "std::__parallel::replace(_FIterator,_FIterator,const _Tp&,const _Tp&)",
						"r": "template <typename _FIterator, typename _Tp> void replace(_FIterator __begin, _FIterator __end, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std::__parallel",
						"u": "REPLACE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0074ed18e45a0558d3e4aa7d396d7d40d872c93"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIterator, _FIterator, _Predicate, const _Tp &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::replace_if(_FIterator,_FIterator,_Predicate,const _Tp&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Predicate, typename _Tp> void replace_if(_FIterator __begin, _FIterator __end, _Predicate __pred, const _Tp& __new_value, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc6e7cad59fe9ef6b018dbe44f4e29cb6450e4e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_if_switch",
						"t": "void (_FIterator, _FIterator, _Predicate, const _Tp &, _IteratorTag)",
						"i": "std::__parallel::__replace_if_switch(_FIterator,_FIterator,_Predicate,const _Tp&,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Predicate, typename _Tp, typename _IteratorTag> void __replace_if_switch(_FIterator __begin, _FIterator __end, _Predicate __pred, const _Tp& __new_value, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__REPLACE_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf7e6e0a3bb28f324faa1b120ad4d15dbe9747c7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_if_switch",
						"t": "void (_RAIter, _RAIter, _Predicate, const _Tp &, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__replace_if_switch(_RAIter,_RAIter,_Predicate,const _Tp&,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Predicate, typename _Tp> void __replace_if_switch(_RAIter __begin, _RAIter __end, _Predicate __pred, const _Tp& __new_value, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "__REPLACE_IF_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fc3d5edd3a3259144bcc22aee8e282b634be023"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIterator, _FIterator, _Predicate, const _Tp &, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::replace_if(_FIterator,_FIterator,_Predicate,const _Tp&,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator, typename _Predicate, typename _Tp> void replace_if(_FIterator __begin, _FIterator __end, _Predicate __pred, const _Tp& __new_value, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab6bb815eebe271d8c21a4cdada9464f9a71b3d5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "void (_FIterator, _FIterator, _Predicate, const _Tp &)",
						"i": "std::__parallel::replace_if(_FIterator,_FIterator,_Predicate,const _Tp&)",
						"r": "template <typename _FIterator, typename _Predicate, typename _Tp> void replace_if(_FIterator __begin, _FIterator __end, _Predicate __pred, const _Tp& __new_value)",
						"s": "std::__parallel",
						"u": "REPLACE_IF",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "652205afd1e6ba386c6be131cae63db5dbd859fb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIterator, _FIterator, _Generator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::generate(_FIterator,_FIterator,_Generator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Generator> void generate(_FIterator __begin, _FIterator __end, _Generator __gen, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c8076a4252fe4e872aa844dfb2e74523c44907a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generate_switch",
						"t": "void (_FIterator, _FIterator, _Generator, _IteratorTag)",
						"i": "std::__parallel::__generate_switch(_FIterator,_FIterator,_Generator,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Generator, typename _IteratorTag> void __generate_switch(_FIterator __begin, _FIterator __end, _Generator __gen, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__GENERATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01f9764fa58bde1880467b5592b82a798365d144"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generate_switch",
						"t": "void (_RAIter, _RAIter, _Generator, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__generate_switch(_RAIter,_RAIter,_Generator,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Generator> void __generate_switch(_RAIter __begin, _RAIter __end, _Generator __gen, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__GENERATE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71662ee978cc27532973f1b6a4cc854666faa126"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIterator, _FIterator, _Generator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::generate(_FIterator,_FIterator,_Generator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator, typename _Generator> void generate(_FIterator __begin, _FIterator __end, _Generator __gen, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7029f8faf6145ae1576d6940142df7b5b9055b54"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "void (_FIterator, _FIterator, _Generator)",
						"i": "std::__parallel::generate(_FIterator,_FIterator,_Generator)",
						"r": "template <typename _FIterator, typename _Generator> void generate(_FIterator __begin, _FIterator __end, _Generator __gen)",
						"s": "std::__parallel",
						"u": "GENERATE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed83c03a2db697a6635e3b750be6eea2e72dd437"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::generate_n(_OutputIterator,_Size,_Generator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _OutputIterator, typename _Size, typename _Generator> _OutputIterator generate_n(_OutputIterator __begin, _Size __n, _Generator __gen, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e50e3781b804feb177bdf41d99da035902c6c1c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generate_n_switch",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, _IteratorTag)",
						"i": "std::__parallel::__generate_n_switch(_OutputIterator,_Size,_Generator,_IteratorTag)",
						"r": "template <typename _OutputIterator, typename _Size, typename _Generator, typename _IteratorTag> _OutputIterator __generate_n_switch(_OutputIterator __begin, _Size __n, _Generator __gen, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__GENERATE_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04efdcc7c22aafb81ff2009a3e510ff4ed17c612"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generate_n_switch",
						"t": "_RAIter (_RAIter, _Size, _Generator, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__generate_n_switch(_RAIter,_Size,_Generator,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Size, typename _Generator> _RAIter __generate_n_switch(_RAIter __begin, _Size __n, _Generator __gen, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__GENERATE_N_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f185938dc657735033fb35b8797e464926a7204d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::generate_n(_OutputIterator,_Size,_Generator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _OutputIterator, typename _Size, typename _Generator> _OutputIterator generate_n(_OutputIterator __begin, _Size __n, _Generator __gen, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c0d2ec6ffbabdfe16ed109568f9581373229181"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator)",
						"i": "std::__parallel::generate_n(_OutputIterator,_Size,_Generator)",
						"r": "template <typename _OutputIterator, typename _Size, typename _Generator> _OutputIterator generate_n(_OutputIterator __begin, _Size __n, _Generator __gen)",
						"s": "std::__parallel",
						"u": "GENERATE_N",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed28aa369c8871237ffdf9846ee293318e6e84e0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void random_shuffle(_RAIter __begin, _RAIter __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "096368d65311a3c048e807a10e6b3d60e5d8dea1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator &, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator&,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void random_shuffle(_RAIter __begin, _RAIter __end, _RandomNumberGenerator& __rand, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64cf817be5d716c3bd3a7c2e0d39cdbfd53b673c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_CRandNumber",
						"t": "",
						"i": "std::__parallel::_CRandNumber",
						"r": "template <typename _MustBeInt",
						"s": "std::__parallel",
						"u": "_CRANDNUMBER",
						"q": "std::__parallel::_CRandNumber",
						"w": "STD::__PARALLEL::_CRANDNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f8f1601bc09bd440d2230ce50c316797cb8c011"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "int (int)",
						"i": "std::__parallel::_CRandNumber::operator()(int)",
						"r": "int operator()(int __limit)",
						"s": "std::__parallel",
						"u": "OPERATOR()",
						"q": "std::__parallel::_CRandNumber",
						"w": "STD::__PARALLEL::_CRANDNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01c99de0f9654f0ef41a247b9b55a432d075cd55"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void random_shuffle(_RAIter __begin, _RAIter __end)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a0319d67af5f3644fbf7899af61e6ad8ca0941ce"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator &&)",
						"i": "std::__parallel::random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator&&)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void random_shuffle(_RAIter __begin, _RAIter __end, _RandomNumberGenerator&& __rand)",
						"s": "std::__parallel",
						"u": "RANDOM_SHUFFLE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62a1678c1f2fd6eda72edff17317276fa8c33da9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "_FIterator (_FIterator, _FIterator, _Predicate, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partition(_FIterator,_FIterator,_Predicate,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Predicate> _FIterator partition(_FIterator __begin, _FIterator __end, _Predicate __pred, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTITION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6b594ecc8f342605cb8834dc23f313a597316a6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__partition_switch",
						"t": "_FIterator (_FIterator, _FIterator, _Predicate, _IteratorTag)",
						"i": "std::__parallel::__partition_switch(_FIterator,_FIterator,_Predicate,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Predicate, typename _IteratorTag> _FIterator __partition_switch(_FIterator __begin, _FIterator __end, _Predicate __pred, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__PARTITION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "29f2b2971730f233da4e778fe9c79c9373400744"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__partition_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Predicate, random_access_iterator_tag)",
						"i": "std::__parallel::__partition_switch(_RAIter,_RAIter,_Predicate,random_access_iterator_tag)",
						"r": "template <typename _RAIter, typename _Predicate> _RAIter __partition_switch(_RAIter __begin, _RAIter __end, _Predicate __pred, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__PARTITION_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33c397c4176046ec3b49f91c1e71594bffa48279"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "_FIterator (_FIterator, _FIterator, _Predicate)",
						"i": "std::__parallel::partition(_FIterator,_FIterator,_Predicate)",
						"r": "template <typename _FIterator, typename _Predicate> _FIterator partition(_FIterator __begin, _FIterator __end, _Predicate __pred)",
						"s": "std::__parallel",
						"u": "PARTITION",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "deca6f3ebd7c9084e441541b1ca37ebda8370c03"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "438b9764c24b161e3bcdac4f78cbe00e57935f43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2eccb001f4b96acc99c6cb4cb1182f073fcaef9b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, _Compare, _Parallelism)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,_Compare,_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare, typename _Parallelism> void sort(_RAIter __begin, _RAIter __end, _Compare __comp, _Parallelism __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d43612679c81ab0f12411e4211d2072c9f7afe78"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::sort(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2019ada17b19eb5e9885a2e742364dbd3218bb6c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::default_parallel_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::default_parallel_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::default_parallel_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4c9cdcda1d594e20b98adae40aa5385ddceedb7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::parallel_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::parallel_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::parallel_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d66902071f04229856f6189f82ffd32b7695d27"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::multiway_mergesort_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::multiway_mergesort_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::multiway_mergesort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "446fea34e4a507121d54fb277ea8eb488fbd7446"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::multiway_mergesort_sampling_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::multiway_mergesort_sampling_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::multiway_mergesort_sampling_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb56e0423de953407768590bc0c78ed630929172"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::multiway_mergesort_exact_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::multiway_mergesort_exact_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::multiway_mergesort_exact_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "228c1db6f74554bdca8239aa25e858abba8c4c2e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::quicksort_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::quicksort_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::quicksort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57cbfa4867c42da710520edb72619478256c7ebe"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::balanced_quicksort_tag)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,__gnu_parallel::balanced_quicksort_tag)",
						"r": "template <typename _RAIter> void sort(_RAIter __begin, _RAIter __end, __gnu_parallel::balanced_quicksort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee094ff1ef59883757fd07669a728699ef16c82a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "void (_RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::sort(_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void sort(_RAIter __begin, _RAIter __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14d1d31fba661371136fc36a6a3ad50dfb53078c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6b5359ed65da1aef76620be242416d3444a6218"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void stable_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de8d04bbd3bf11eee2cfb4ffcc362caa12b71676"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, _Compare, _Parallelism)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,_Compare,_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare, typename _Parallelism> void stable_sort(_RAIter __begin, _RAIter __end, _Compare __comp, _Parallelism __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6314def7cb47526bae99c2e92d891757f90f741"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08cf5ed12092c1f4ea6961057630c7d95a1045e6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::default_parallel_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::default_parallel_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::default_parallel_tag __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45b1c01ee1b37159fcd8bb595d8b972b49bb9474"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::parallel_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::parallel_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::parallel_tag __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7422c2c7ada57eb8e900c6543ffc573b0afdb768"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::multiway_mergesort_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::multiway_mergesort_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::multiway_mergesort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d217349125f44188d9886fe92d863bb6db616229"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::quicksort_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::quicksort_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::quicksort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0084e1bde24ac4e42b217eee346329a39ad49a0f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, __gnu_parallel::balanced_quicksort_tag)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,__gnu_parallel::balanced_quicksort_tag)",
						"r": "template <typename _RAIter> void stable_sort(_RAIter __begin, _RAIter __end, __gnu_parallel::balanced_quicksort_tag __parallelism)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d665bb056baa023f77d92aa07f79fb1b7e7e90b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "void (_RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::stable_sort(_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void stable_sort(_RAIter __begin, _RAIter __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "STABLE_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e27f20636b03c319d1be385440e4edd284ce7b88"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator merge(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a299916993938d063b206967fc7cca100a8ce59"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Compare> _OutputIterator merge(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5add87a14d6a830efefe7e6d304579a4c493a998"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__merge_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Compare, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"i": "std::__parallel::__merge_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Compare,_IteratorTag1,_IteratorTag2,_IteratorTag3)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Compare, typename _IteratorTag1, typename _IteratorTag2, typename _IteratorTag3> _OutputIterator __merge_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Compare __comp, _IteratorTag1, _IteratorTag2, _IteratorTag3)",
						"s": "std::__parallel",
						"u": "__MERGE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de2bd3cc25484891e751446947b5af5a1762355b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__merge_switch",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Compare, random_access_iterator_tag, random_access_iterator_tag, random_access_iterator_tag)",
						"i": "std::__parallel::__merge_switch(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Compare,random_access_iterator_tag,random_access_iterator_tag,random_access_iterator_tag)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Compare> _OutputIterator __merge_switch(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Compare __comp, std::random_access_iterator_tag, std::random_access_iterator_tag, std::random_access_iterator_tag)",
						"s": "std::__parallel",
						"u": "__MERGE_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3fa0c8adc2f24688008a4951d1b781e4be876e22"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator, _Compare)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator,_Compare)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator, typename _Compare> _OutputIterator merge(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result, _Compare __comp)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0caee6a37ed4fd66fd07801a97fe2d82ad292037"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "_OutputIterator (_IIter1, _IIter1, _IIter2, _IIter2, _OutputIterator)",
						"i": "std::__parallel::merge(_IIter1,_IIter1,_IIter2,_IIter2,_OutputIterator)",
						"r": "template <typename _IIter1, typename _IIter2, typename _OutputIterator> _OutputIterator merge(_IIter1 __begin1, _IIter1 __end1, _IIter2 __begin2, _IIter2 __end2, _OutputIterator __result)",
						"s": "std::__parallel",
						"u": "MERGE",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "678294d4bdf51043406b65ccdab6d71a09e9c58a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void nth_element(_RAIter __begin, _RAIter __nth, _RAIter __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "22c8395e730cefcf165bff9ef6b73290d04b2e77"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void nth_element(_RAIter __begin, _RAIter __nth, _RAIter __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e8e8fa082b13a714469c8f46c3a36261a5cd11a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void nth_element(_RAIter __begin, _RAIter __nth, _RAIter __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5236638218956c1e59af64a8ba3b6c10c2b25eb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter)",
						"i": "std::__parallel::nth_element(_RAIter,_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void nth_element(_RAIter __begin, _RAIter __nth, _RAIter __end)",
						"s": "std::__parallel",
						"u": "NTH_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc0746727a64867535b1f0248d675a6a04d9cc56"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter, typename _Compare> void partial_sort(_RAIter __begin, _RAIter __middle, _RAIter __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73938a5daba424415e8edf50120c8fa8deab8cd1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIter> void partial_sort(_RAIter __begin, _RAIter __middle, _RAIter __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "185c312ad9a8af0cc79128668fd2e61c0e85a605"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void partial_sort(_RAIter __begin, _RAIter __middle, _RAIter __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d29bfeb217508f56c27594f43b00448d67ffbe8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter)",
						"i": "std::__parallel::partial_sort(_RAIter,_RAIter,_RAIter)",
						"r": "template <typename _RAIter> void partial_sort(_RAIter __begin, _RAIter __middle, _RAIter __end)",
						"s": "std::__parallel",
						"u": "PARTIAL_SORT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db465273e047580d79c3059b7f0b9f99ce60c7d7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator> _FIterator max_element(_FIterator __begin, _FIterator __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38a7aa5f62600d40692162763f609c14add05d3a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator max_element(_FIterator __begin, _FIterator __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "249427c1a11cbcd2308bbc4c5efa73ab055e3a4a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__max_element_switch",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, _IteratorTag)",
						"i": "std::__parallel::__max_element_switch(_FIterator,_FIterator,_Compare,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Compare, typename _IteratorTag> _FIterator __max_element_switch(_FIterator __begin, _FIterator __end, _Compare __comp, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__MAX_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cc95f21a90e885994386caab9bffe289339c091"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__max_element_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Compare, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__max_element_switch(_RAIter,_RAIter,_Compare,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare> _RAIter __max_element_switch(_RAIter __begin, _RAIter __end, _Compare __comp, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__MAX_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0569ffe517f43dbd016ce29f982361ffb8e641b2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator> _FIterator max_element(_FIterator __begin, _FIterator __end, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09b5da936f1e7174c31f62dc28e31b64f78c2c96"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator)",
						"r": "template <typename _FIterator> _FIterator max_element(_FIterator __begin, _FIterator __end)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c4ef3f5b1286f7a7c04327d7ae1c1c74c00a17d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator,_Compare,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator max_element(_FIterator __begin, _FIterator __end, _Compare __comp, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f67a423f2949831665ecfb1fdd0dc3036748c1c2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare)",
						"i": "std::__parallel::max_element(_FIterator,_FIterator,_Compare)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator max_element(_FIterator __begin, _FIterator __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "MAX_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01ec01009aced99bd9f812316813a02e47c969f1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator> _FIterator min_element(_FIterator __begin, _FIterator __end, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7df9df59d3580da3bde04ab7313a3575a95eab06"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, __gnu_parallel::sequential_tag)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator min_element(_FIterator __begin, _FIterator __end, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2c5757014ba9239ab3713343a382874eea67cc5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element_switch",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, _IteratorTag)",
						"i": "std::__parallel::__min_element_switch(_FIterator,_FIterator,_Compare,_IteratorTag)",
						"r": "template <typename _FIterator, typename _Compare, typename _IteratorTag> _FIterator __min_element_switch(_FIterator __begin, _FIterator __end, _Compare __comp, _IteratorTag)",
						"s": "std::__parallel",
						"u": "__MIN_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a48931c218f196bc3a339cda60d23c247831b88"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element_switch",
						"t": "_RAIter (_RAIter, _RAIter, _Compare, random_access_iterator_tag, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::__min_element_switch(_RAIter,_RAIter,_Compare,random_access_iterator_tag,__gnu_parallel::_Parallelism)",
						"r": "template <typename _RAIter, typename _Compare> _RAIter __min_element_switch(_RAIter __begin, _RAIter __end, _Compare __comp, std::random_access_iterator_tag, __gnu_parallel::_Parallelism __parallelism_tag = __gnu_parallel::parallel_balanced)",
						"s": "std::__parallel",
						"u": "__MIN_ELEMENT_SWITCH",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "58dcaf4afca6f0f0f1b55b9e77dee08b09e22ed0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator> _FIterator min_element(_FIterator __begin, _FIterator __end, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d99d0a62f6556cf1946b4533b3b9906ef73677c7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator)",
						"r": "template <typename _FIterator> _FIterator min_element(_FIterator __begin, _FIterator __end)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dcae89d73048c6a69d6193951618bae26ff953d9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare, __gnu_parallel::_Parallelism)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator,_Compare,__gnu_parallel::_Parallelism)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator min_element(_FIterator __begin, _FIterator __end, _Compare __comp, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6854611e7f04f16a30eadf4247d7df428e49257a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "_FIterator (_FIterator, _FIterator, _Compare)",
						"i": "std::__parallel::min_element(_FIterator,_FIterator,_Compare)",
						"r": "template <typename _FIterator, typename _Compare> _FIterator min_element(_FIterator __begin, _FIterator __end, _Compare __comp)",
						"s": "std::__parallel",
						"u": "MIN_ELEMENT",
						"q": "std::__parallel",
						"w": "STD::__PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2ae8096fbd323b43d6050f69f3adcc530083fa53"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/iterator.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_ITERATOR_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_ITERATOR_H",
						"r": "_GLIBCXX_PARALLEL_ITERATOR_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_ITERATOR_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0471fea628263639e71f6382f8a08c5e040609f2"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair",
						"t": "",
						"i": "__gnu_parallel::_IteratorPair",
						"r": "template <typename _Iterator1, typename _Iterator2, typename _IteratorCategory> _IteratorPair : public pair<_Iterator1, _Iterator2>",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "std::pair",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48ccbf2cae2397d2a14a2c25776d44d2c5ef7392"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_IteratorPair::_Base",
						"i": "__gnu_parallel::_IteratorPair::_Base",
						"r": "typedef pair<_Iterator1, _Iterator2> _Base",
						"s": "__gnu_parallel",
						"u": "_BASE",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c07a5e7bebd92ca9c1b50653c5c6919c07f3e9f"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "iterator_category",
						"t": "__gnu_parallel::_IteratorPair::iterator_category",
						"i": "__gnu_parallel::_IteratorPair::iterator_category",
						"r": "typedef _IteratorCategory iterator_category",
						"s": "__gnu_parallel",
						"u": "ITERATOR_CATEGORY",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42d2d8a56ca481d648110e2744e26dba6d92635c"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "__gnu_parallel::_IteratorPair::value_type",
						"i": "__gnu_parallel::_IteratorPair::value_type",
						"r": "typedef void value_type",
						"s": "__gnu_parallel",
						"u": "VALUE_TYPE",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ad4c13fe51f69393380dc826a394710d2ac2e7e"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::_IteratorPair::_TraitsType",
						"i": "__gnu_parallel::_IteratorPair::_TraitsType",
						"r": "typedef iterator_traits<_Iterator1> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c054b1fbd8640f9ba32f673db8a910cccd8693ae"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "difference_type",
						"t": "__gnu_parallel::_IteratorPair::difference_type",
						"i": "__gnu_parallel::_IteratorPair::difference_type",
						"r": "typedef typename _TraitsType::difference_type difference_type",
						"s": "__gnu_parallel",
						"u": "DIFFERENCE_TYPE",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf36c0e150acbece93ec67f6c321e34665f4115b"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "pointer",
						"t": "__gnu_parallel::_IteratorPair::pointer",
						"i": "__gnu_parallel::_IteratorPair::pointer",
						"r": "typedef _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> *pointer",
						"s": "__gnu_parallel",
						"u": "POINTER",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7453b53b1f229cd1c6e6179a4bea13b6b6483eb9"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reference",
						"t": "__gnu_parallel::_IteratorPair::reference",
						"i": "__gnu_parallel::_IteratorPair::reference",
						"r": "typedef _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>& reference",
						"s": "__gnu_parallel",
						"u": "REFERENCE",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d111a1dd544aa5be0c58a9e45d9deaf496f809a8"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>",
						"t": "void ()",
						"i": "__gnu_parallel::_IteratorPair::_IteratorPair()",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>()",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR<_ITERATOR1, _ITERATOR2, _ITERATORCATEGORY>",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41e665da8d74f2127d6995ca9fa7a2f1e8896159"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>",
						"t": "void (const _Iterator1 &, const _Iterator2 &)",
						"i": "__gnu_parallel::_IteratorPair::_IteratorPair(const _Iterator1&,const _Iterator2&)",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>(const _Iterator1& __first, const _Iterator2& __second)",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR<_ITERATOR1, _ITERATOR2, _ITERATORCATEGORY>",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6a172c8ae037453d3963903ea7a20d1beff1320"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> &()",
						"i": "__gnu_parallel::_IteratorPair::operator++()",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>& operator++()",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12758dafc0eb7368c8ad8ad1dbd7f54b5e8df6cc"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> (int)",
						"i": "__gnu_parallel::_IteratorPair::operator++(int)",
						"r": "const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> operator++(int)",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94fad30eb84615f80bc58d5ebf6b8e6942eb591d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator--",
						"t": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> &()",
						"i": "__gnu_parallel::_IteratorPair::operator--()",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>& operator--()",
						"s": "__gnu_parallel",
						"u": "OPERATOR--",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b62a13cdac48e65212f3eb0e277e056a773db012"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator--",
						"t": "const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> (int)",
						"i": "__gnu_parallel::_IteratorPair::operator--(int)",
						"r": "const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> operator--(int)",
						"s": "__gnu_parallel",
						"u": "OPERATOR--",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "badf355ed6a7bdd4e8b719eceb7217a5ea88b76e"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator type-parameter-0-1",
						"t": "_Iterator2 () const",
						"i": "__gnu_parallel::_IteratorPair::operator _Iterator2()const",
						"r": "operator _Iterator2() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR TYPE-PARAMETER-0-1",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74ed88368920528769fc5b6dc002c6c49c693fef"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> &(const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> &)",
						"i": "__gnu_parallel::_IteratorPair::operator=(const _IteratorPair&)",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>& operator",
						"s": "__gnu_parallel",
						"u": "OPERATOR=",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb885722d0a6917ff586a96cbffb42bdb0abe6a9"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator+",
						"t": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> (difference_type) const",
						"i": "__gnu_parallel::_IteratorPair::operator+(difference_type)const",
						"r": "_IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> operator+(__gnu_parallel::_IteratorPair::difference_type __delta) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR+",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "67dffb4d8eb2be5f8a262ea832c04254cce00030"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator-",
						"t": "difference_type (const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory> &) const",
						"i": "__gnu_parallel::_IteratorPair::operator-(const _IteratorPair&)const",
						"r": "__gnu_parallel::_IteratorPair::difference_type operator-(const _IteratorPair<_Iterator1, _Iterator2, _IteratorCategory>& __other) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR-",
						"q": "__gnu_parallel::_IteratorPair",
						"w": "__GNU_PARALLEL::_ITERATORPAIR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "314460cea1b75d629788a066b2422d1818ab3f4f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorTriple",
						"t": "",
						"i": "__gnu_parallel::_IteratorTriple",
						"r": "template <typename _Iterator1, typename _Iterator2, typename _Iterator3, typename _IteratorCategory> _IteratorTriple",
						"s": "__gnu_parallel",
						"u": "_ITERATORTRIPLE",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2cb64df36305f6d3720b11c96ea7e2196848e144"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "iterator_category",
						"t": "__gnu_parallel::_IteratorTriple::iterator_category",
						"i": "__gnu_parallel::_IteratorTriple::iterator_category",
						"r": "typedef _IteratorCategory iterator_category",
						"s": "__gnu_parallel",
						"u": "ITERATOR_CATEGORY",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42d2d8a56ca481d648110e2744e26dba6d92635c"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "value_type",
						"t": "__gnu_parallel::_IteratorTriple::value_type",
						"i": "__gnu_parallel::_IteratorTriple::value_type",
						"r": "typedef void value_type",
						"s": "__gnu_parallel",
						"u": "VALUE_TYPE",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ad4c13fe51f69393380dc826a394710d2ac2e7e"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "difference_type",
						"t": "__gnu_parallel::_IteratorTriple::difference_type",
						"i": "__gnu_parallel::_IteratorTriple::difference_type",
						"r": "typedef typename std::iterator_traits<_Iterator1>::difference_type difference_type",
						"s": "__gnu_parallel",
						"u": "DIFFERENCE_TYPE",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bff8706a2705d901f4c38900af84672951acba22"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "pointer",
						"t": "__gnu_parallel::_IteratorTriple::pointer",
						"i": "__gnu_parallel::_IteratorTriple::pointer",
						"r": "typedef _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> *pointer",
						"s": "__gnu_parallel",
						"u": "POINTER",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a519bef832ef4b94c02df0b987288ebc227a707"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reference",
						"t": "__gnu_parallel::_IteratorTriple::reference",
						"i": "__gnu_parallel::_IteratorTriple::reference",
						"r": "typedef _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>& reference",
						"s": "__gnu_parallel",
						"u": "REFERENCE",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d7dc5519dcb2bc4ceccce307f927f40b73797bc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_first",
						"t": "_Iterator1",
						"i": "__gnu_parallel::_IteratorTriple::_M_first",
						"r": "_Iterator1 _M_first",
						"s": "__gnu_parallel",
						"u": "_M_FIRST",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "384dc6480f18b872a0a70511ba8a8f3cb4ba0ad1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_second",
						"t": "_Iterator2",
						"i": "__gnu_parallel::_IteratorTriple::_M_second",
						"r": "_Iterator2 _M_second",
						"s": "__gnu_parallel",
						"u": "_M_SECOND",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c53c1f104ffeb514b5b6005e4a5584c4adb86c2b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_third",
						"t": "_Iterator3",
						"i": "__gnu_parallel::_IteratorTriple::_M_third",
						"r": "_Iterator3 _M_third",
						"s": "__gnu_parallel",
						"u": "_M_THIRD",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cac3f7e983d9e492ea32e37abf286750348512fd"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>",
						"t": "void ()",
						"i": "__gnu_parallel::_IteratorTriple::_IteratorTriple()",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>()",
						"s": "__gnu_parallel",
						"u": "_ITERATORTRIPLE<_ITERATOR1, _ITERATOR2, _ITERATOR3, _ITERATORCATEGORY>",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9261ec0668706c3e340c6702e3f8f0834c9c1527"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>",
						"t": "void (const _Iterator1 &, const _Iterator2 &, const _Iterator3 &)",
						"i": "__gnu_parallel::_IteratorTriple::_IteratorTriple(const _Iterator1&,const _Iterator2&,const _Iterator3&)",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>(const _Iterator1& __first, const _Iterator2& __second, const _Iterator3& __third)",
						"s": "__gnu_parallel",
						"u": "_ITERATORTRIPLE<_ITERATOR1, _ITERATOR2, _ITERATOR3, _ITERATORCATEGORY>",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d75e28fc5c54aec9cebb4d8d4df34eb7bb95582d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> &()",
						"i": "__gnu_parallel::_IteratorTriple::operator++()",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>& operator++()",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5140c38447534d45329b688331382d6045a7251c"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> (int)",
						"i": "__gnu_parallel::_IteratorTriple::operator++(int)",
						"r": "const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> operator++(int)",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b43b8af9097b883a81319305024dfbee1f6fecb1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator--",
						"t": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> &()",
						"i": "__gnu_parallel::_IteratorTriple::operator--()",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>& operator--()",
						"s": "__gnu_parallel",
						"u": "OPERATOR--",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2172aff06f5a545ac7b9672e0fa51092c1c29b1b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator--",
						"t": "const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> (int)",
						"i": "__gnu_parallel::_IteratorTriple::operator--(int)",
						"r": "const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> operator--(int)",
						"s": "__gnu_parallel",
						"u": "OPERATOR--",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d2828018d1cf4919d78dd14e2fdfbd1d85d50ad"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator type-parameter-0-2",
						"t": "_Iterator3 () const",
						"i": "__gnu_parallel::_IteratorTriple::operator _Iterator3()const",
						"r": "operator _Iterator3() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR TYPE-PARAMETER-0-2",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a127957bd87f715ab177864e772d94cd7ab290bd"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> &(const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> &)",
						"i": "__gnu_parallel::_IteratorTriple::operator=(const _IteratorTriple&)",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>& operator",
						"s": "__gnu_parallel",
						"u": "OPERATOR=",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d39bdae8616727f690a000be5af0dd519685796a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator+",
						"t": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> (difference_type) const",
						"i": "__gnu_parallel::_IteratorTriple::operator+(difference_type)const",
						"r": "_IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> operator+(__gnu_parallel::_IteratorTriple::difference_type __delta) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR+",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b3345adeef446e8e4b91c06ea604b6c07648f01"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator-",
						"t": "difference_type (const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory> &) const",
						"i": "__gnu_parallel::_IteratorTriple::operator-(const _IteratorTriple&)const",
						"r": "__gnu_parallel::_IteratorTriple::difference_type operator-(const _IteratorTriple<_Iterator1, _Iterator2, _Iterator3, _IteratorCategory>& __other) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR-",
						"q": "__gnu_parallel::_IteratorTriple",
						"w": "__GNU_PARALLEL::_ITERATORTRIPLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8206a57fedd331fb43c5d0830ba96f9b0fee6404"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/sort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_SORT_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_SORT_H",
						"r": "_GLIBCXX_PARALLEL_SORT_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_SORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ade8519e06fda01a51c6330bdad483d7da049a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, _Parallelism)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,_Parallelism)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare, typename _Parallelism> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, _Parallelism __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "966684fa8cc29559428c74a3d4cbf5ea6a14b3dd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, multiway_mergesort_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,multiway_mergesort_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::multiway_mergesort_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b642016a9471fde760ffe3649ce71a50acc9300e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, multiway_mergesort_exact_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,multiway_mergesort_exact_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::multiway_mergesort_exact_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "463036a26212831786917d74dbcf0492e7efc728"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, multiway_mergesort_sampling_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,multiway_mergesort_sampling_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::multiway_mergesort_sampling_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcd8cd87fbf8226d8db56cbe36ad92cabf1e8f12"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, quicksort_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,quicksort_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::quicksort_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "039f3efe4e5a7016975b0aeb50119b99a9944e20"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, balanced_quicksort_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,balanced_quicksort_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::balanced_quicksort_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c50c5d659836511ab3b8424b714079dc076bd489"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, default_parallel_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,default_parallel_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::default_parallel_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ee31856c73e31dcdde15925f3c6a1cb7450807d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort",
						"t": "void (_RAIter, _RAIter, _Compare, parallel_tag)",
						"i": "__gnu_parallel::__parallel_sort(_RAIter,_RAIter,_Compare,parallel_tag)",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> void __parallel_sort(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::parallel_tag __parallelism)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0dbde6e5b91ffdbe1b897f3a1d4275b05619d6d"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/checkers.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_CHECKERS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_CHECKERS_H",
						"r": "_GLIBCXX_PARALLEL_CHECKERS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_CHECKERS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcf1f2e4b11e602be889c9e99727d4fc483f6ee0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_sorted",
						"t": "bool (_IIter, _IIter, _Compare)",
						"i": "__gnu_parallel::__is_sorted(_IIter,_IIter,_Compare)",
						"r": "template <typename _IIter, typename _Compare> bool __is_sorted(_IIter __begin, _IIter __end, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__IS_SORTED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54d2bb79d5519a8a83501ea52e11e5428b95ba9c"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/multiway_mergesort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H",
						"r": "_GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18bb4eba715cda3d158d774b7505e99f9b24d83b"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Piece",
						"t": "",
						"i": "__gnu_parallel::_Piece",
						"r": "template <typename _DifferenceTp> _Piece",
						"s": "__gnu_parallel",
						"u": "_PIECE",
						"q": "__gnu_parallel::_Piece",
						"w": "__GNU_PARALLEL::_PIECE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b63891d502c60ce3ee04bc4704a984550712e6fa"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_Piece::_DifferenceType",
						"i": "__gnu_parallel::_Piece::_DifferenceType",
						"r": "typedef _DifferenceTp _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_Piece",
						"w": "__GNU_PARALLEL::_PIECE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a9bd399321bf880e7635133fc1dedfc3be194a5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_begin",
						"t": "_DifferenceType",
						"i": "__gnu_parallel::_Piece::_M_begin",
						"r": "__gnu_parallel::_Piece::_DifferenceType _M_begin",
						"s": "__gnu_parallel",
						"u": "_M_BEGIN",
						"q": "__gnu_parallel::_Piece",
						"w": "__GNU_PARALLEL::_PIECE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcde2800b2e20e120d4a337f32881e97eaa7d919"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_end",
						"t": "_DifferenceType",
						"i": "__gnu_parallel::_Piece::_M_end",
						"r": "__gnu_parallel::_Piece::_DifferenceType _M_end",
						"s": "__gnu_parallel",
						"u": "_M_END",
						"q": "__gnu_parallel::_Piece",
						"w": "__GNU_PARALLEL::_PIECE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "708f654642011e638e17adc6b96c18a4d6ac2205"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_PMWMSSortingData",
						"t": "",
						"i": "__gnu_parallel::_PMWMSSortingData",
						"r": "template <typename _RAIter> _PMWMSSortingData",
						"s": "__gnu_parallel",
						"u": "_PMWMSSORTINGDATA",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfcf314ecdd2b7bd3c0b6a8dd8bad6a93d558a22"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::_PMWMSSortingData::_TraitsType",
						"i": "__gnu_parallel::_PMWMSSortingData::_TraitsType",
						"r": "typedef iterator_traits<_RAIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c511a79b6a35534dba687e3679bd5fdf8f97e026"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ValueType",
						"t": "__gnu_parallel::_PMWMSSortingData::_ValueType",
						"i": "__gnu_parallel::_PMWMSSortingData::_ValueType",
						"r": "typedef typename _TraitsType::value_type _ValueType",
						"s": "__gnu_parallel",
						"u": "_VALUETYPE",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2130774d7677924c91c4b61f63b21c10029f5423"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_PMWMSSortingData::_DifferenceType",
						"i": "__gnu_parallel::_PMWMSSortingData::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_threads",
						"t": "_ThreadIndex",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_num_threads",
						"r": "__gnu_parallel::_ThreadIndex _M_num_threads",
						"s": "__gnu_parallel",
						"u": "_M_NUM_THREADS",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06dc7846aaba8b7d5ee74d4d597b5e2a580a1872"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "_RAIter",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_source",
						"r": "_RAIter _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e6deb3a23e7874eebafd705b61a64c2514260a6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_starts",
						"t": "_DifferenceType *",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_starts",
						"r": "__gnu_parallel::_PMWMSSortingData::_DifferenceType *_M_starts",
						"s": "__gnu_parallel",
						"u": "_M_STARTS",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a5f77417f28b5fd8a7b5fd9177c8f8527ecb3c9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_temporary",
						"t": "_ValueType **",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_temporary",
						"r": "__gnu_parallel::_PMWMSSortingData::_ValueType **_M_temporary",
						"s": "__gnu_parallel",
						"u": "_M_TEMPORARY",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0729df6f78186dbfadbc1084ae5ca584d3f84b6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_samples",
						"t": "_ValueType *",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_samples",
						"r": "__gnu_parallel::_PMWMSSortingData::_ValueType *_M_samples",
						"s": "__gnu_parallel",
						"u": "_M_SAMPLES",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b74bf33d2ff409559484d87a492cfda8c965fa60"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_offsets",
						"t": "_DifferenceType *",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_offsets",
						"r": "__gnu_parallel::_PMWMSSortingData::_DifferenceType *_M_offsets",
						"s": "__gnu_parallel",
						"u": "_M_OFFSETS",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0f3d30e0df092bff33beb6db4c90dc5b1d01c3f0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pieces",
						"t": "std::vector<_Piece<_DifferenceType>> *",
						"i": "__gnu_parallel::_PMWMSSortingData::_M_pieces",
						"r": "vector<_Piece<_DifferenceType>> *_M_pieces",
						"s": "__gnu_parallel",
						"u": "_M_PIECES",
						"q": "__gnu_parallel::_PMWMSSortingData",
						"w": "__GNU_PARALLEL::_PMWMSSORTINGDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03e5209ae383cc826d40dce02d1174e79bad77b7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__determine_samples",
						"t": "void (_PMWMSSortingData<_RAIter> *, _DifferenceTp)",
						"i": "__gnu_parallel::__determine_samples(_PMWMSSortingData*,_DifferenceTp)",
						"r": "template <typename _RAIter, typename _DifferenceTp> void __determine_samples(_PMWMSSortingData<_RAIter> *__sd, _DifferenceTp __num_samples)",
						"s": "__gnu_parallel",
						"u": "__DETERMINE_SAMPLES",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e51492450f039c84ad01f8f2c65903d92ab939b"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_SplitConsistently",
						"t": "",
						"i": "__gnu_parallel::_SplitConsistently",
						"r": "template <bool __exact, typename _RAIter, typename _Compare, typename _SortingPlacesIterator> _SplitConsistently",
						"s": "__gnu_parallel",
						"u": "_SPLITCONSISTENTLY",
						"q": "__gnu_parallel::_SplitConsistently",
						"w": "__GNU_PARALLEL::_SPLITCONSISTENTLY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e5e15455d0b737d037912ad5759c6fc4eb1cd19"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _ThreadIndex, _PMWMSSortingData<_RAIter> *, _Compare &, const typename std::iterator_traits<_RAIter>::difference_type) const",
						"i": "operator()(const _ThreadIndex,_PMWMSSortingData*,_Compare&,const typename std::iterator_traits::difference_type)const",
						"r": "void operator()(const __gnu_parallel::_ThreadIndex __iam, _PMWMSSortingData<_RAIter> *__sd, _Compare& __comp, const typename std::iterator_traits<_RAIter>::difference_type __num_samples) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3eb1e1707a7bdcb776aaf162728bfacaec44e54f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _ThreadIndex, _PMWMSSortingData<_RAIter> *, _Compare &, const typename std::iterator_traits<_RAIter>::difference_type) const",
						"i": "operator()(const _ThreadIndex,_PMWMSSortingData*,_Compare&,const typename std::iterator_traits::difference_type)const",
						"r": "void operator()(const __gnu_parallel::_ThreadIndex __iam, _PMWMSSortingData<_RAIter> *__sd, _Compare& __comp, const typename std::iterator_traits<_RAIter>::difference_type __num_samples) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12be83055f5ac651c528b616438e09808804ae86"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__possibly_stable_sort",
						"t": "",
						"i": "__gnu_parallel::__possibly_stable_sort",
						"r": "template <bool __stable, typename _RAIter, typename _Compare> __possibly_stable_sort",
						"s": "__gnu_parallel",
						"u": "__POSSIBLY_STABLE_SORT",
						"q": "__gnu_parallel::__possibly_stable_sort",
						"w": "__GNU_PARALLEL::__POSSIBLY_STABLE_SORT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aca0d6547eff1deaf856ee2c6cb096477ed44389"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _RAIter &, const _RAIter &, _Compare &) const",
						"i": "operator()(const _RAIter&,const _RAIter&,_Compare&)const",
						"r": "void operator()(const _RAIter& __begin, const _RAIter& __end, _Compare& __comp) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ffde1a2f4b7d3771ba7317ffc9442e9e5c8fc33"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _RAIter, const _RAIter, _Compare &) const",
						"i": "operator()(const _RAIter,const _RAIter,_Compare&)const",
						"r": "void operator()(const _RAIter __begin, const _RAIter __end, _Compare& __comp) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bcdd809c03125f14514893df91199e8d62f5674f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__possibly_stable_multiway_merge",
						"t": "",
						"i": "__gnu_parallel::__possibly_stable_multiway_merge",
						"r": "template <bool __stable, typename _Seq_RAIter, typename _RAIter, typename _Compare, typename _DiffType> __possibly_stable_multiway_merge",
						"s": "__gnu_parallel",
						"u": "__POSSIBLY_STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel::__possibly_stable_multiway_merge",
						"w": "__GNU_PARALLEL::__POSSIBLY_STABLE_MULTIWAY_MERGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ee245d21eb0169d4ed95b39d5f3c78c28051ec9"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _Seq_RAIter &, const _Seq_RAIter &, const _RAIter &, _Compare &, _DiffType) const",
						"i": "operator()(const _Seq_RAIter&,const _Seq_RAIter&,const _RAIter&,_Compare&,_DiffType)const",
						"r": "void operator()(const _Seq_RAIter& __seqs_begin, const _Seq_RAIter& __seqs_end, const _RAIter& __target, _Compare& __comp, _DiffType __length_am) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de1a81d11eb4ba8a9cafb03224e54d2e1ddb6999"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _Seq_RAIter &, const _Seq_RAIter &, const _RAIter &, _Compare &, _DiffType) const",
						"i": "operator()(const _Seq_RAIter&,const _Seq_RAIter&,const _RAIter&,_Compare&,_DiffType)const",
						"r": "void operator()(const _Seq_RAIter& __seqs_begin, const _Seq_RAIter& __seqs_end, const _RAIter& __target, _Compare& __comp, _DiffType __length_am) const",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0112c58fce9216803a720191dda175e7c3cee58"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_sort_mwms_pu",
						"t": "void (_PMWMSSortingData<_RAIter> *, _Compare &)",
						"i": "__gnu_parallel::parallel_sort_mwms_pu(_PMWMSSortingData*,_Compare&)",
						"r": "template <bool __stable, bool __exact, typename _RAIter, typename _Compare> void parallel_sort_mwms_pu(_PMWMSSortingData<_RAIter> *__sd, _Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "PARALLEL_SORT_MWMS_PU",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7519a6ba59c5fb3fb6c15df7340732bfb50ae86"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_sort_mwms",
						"t": "void (_RAIter, _RAIter, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::parallel_sort_mwms(_RAIter,_RAIter,_Compare,_ThreadIndex)",
						"r": "template <bool __stable, bool __exact, typename _RAIter, typename _Compare> void parallel_sort_mwms(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "PARALLEL_SORT_MWMS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c19eb307199dd14bb6e817c14e410ca5ebeecbee"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/multiway_merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H",
						"r": "_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0706b7e6544a4d373ac63762ea8ed4907023774b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_LENGTH",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_LENGTH",
						"r": "_GLIBCXX_PARALLEL_LENGTH",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_LENGTH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03a2ad89ea4f5685e747a049c8580b54a1d8900b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__merge_advance",
						"t": "_OutputIterator (_RAIter1 &, _RAIter1, _RAIter2 &, _RAIter2, _OutputIterator, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__merge_advance(_RAIter1&,_RAIter1,_RAIter2&,_RAIter2,_OutputIterator,_DifferenceTp,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _OutputIterator, typename _DifferenceTp, typename _Compare> _OutputIterator __merge_advance(_RAIter1&, _RAIter1, _RAIter2&, _RAIter2, _OutputIterator, _DifferenceTp, _Compare)",
						"s": "__gnu_parallel",
						"u": "__MERGE_ADVANCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d13c2663ea11f0321321d5e33d40aec88b36bad"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_GuardedIterator",
						"t": "",
						"i": "__gnu_parallel::_GuardedIterator",
						"r": "template <typename _RAIter, typename _Compare> _GuardedIterator",
						"s": "__gnu_parallel",
						"u": "_GUARDEDITERATOR",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d4a984e9a900540addb84b9a8b4ae05d7b1a665"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_current",
						"t": "_RAIter",
						"i": "__gnu_parallel::_GuardedIterator::_M_current",
						"r": "_RAIter _M_current",
						"s": "__gnu_parallel",
						"u": "_M_CURRENT",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5dc3ab00c5887ffc99cceb310b2bd9e5c52a598"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_end",
						"t": "_RAIter",
						"i": "__gnu_parallel::_GuardedIterator::_M_end",
						"r": "_RAIter _M_end",
						"s": "__gnu_parallel",
						"u": "_M_END",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f2079b5e46b6a5087ed895357ab0deaebc0b51e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::_GuardedIterator::__comp",
						"r": "_Compare& __comp",
						"s": "__gnu_parallel",
						"u": "__COMP",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "878f4f4d4e92e2e3895d8ffc004eedcbf0a700ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_GuardedIterator<_RAIter, _Compare>",
						"t": "void (_RAIter, _RAIter, _Compare &)",
						"i": "__gnu_parallel::_GuardedIterator::_GuardedIterator(_RAIter,_RAIter,_Compare&)",
						"r": "_GuardedIterator<_RAIter, _Compare>(_RAIter __begin, _RAIter __end, _Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "_GUARDEDITERATOR<_RAITER, _COMPARE>",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76783d04d1a77e7749fa56a07ab5201351134504"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_GuardedIterator<_RAIter, _Compare> &()",
						"i": "__gnu_parallel::_GuardedIterator::operator++()",
						"r": "_GuardedIterator<_RAIter, _Compare>& operator++()",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab43caf4643d292a3e863d63ce1fa612dc460e48"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator*",
						"t": "typename std::iterator_traits<_RAIter>::value_type &() const",
						"i": "__gnu_parallel::_GuardedIterator::operator*()const",
						"r": "typename std::iterator_traits<_RAIter>::value_type& operator*() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR*",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b900d0f728888ae2c7c20789db2c356f20d6831b"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator type-parameter-0-0",
						"t": "_RAIter () const",
						"i": "__gnu_parallel::_GuardedIterator::operator _RAIter()const",
						"r": "operator _RAIter() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR TYPE-PARAMETER-0-0",
						"q": "__gnu_parallel::_GuardedIterator",
						"w": "__GNU_PARALLEL::_GUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cfe2e586f0c519bce4d5a7e98ec9a12369822de3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator<",
						"t": "bool (const _GuardedIterator<_RAIter, _Compare> &, const _GuardedIterator<_RAIter, _Compare> &)",
						"i": "__gnu_parallel::operator<(const _GuardedIterator&,const _GuardedIterator&)",
						"r": "bool operator<(const _GuardedIterator<_RAIter, _Compare>& __bi1, const _GuardedIterator<_RAIter, _Compare>& __bi2)",
						"s": "__gnu_parallel",
						"u": "OPERATOR<",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "58a5a937aa20b8c14319660f52e4f92eeb89c59c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator<=",
						"t": "bool (const _GuardedIterator<_RAIter, _Compare> &, const _GuardedIterator<_RAIter, _Compare> &)",
						"i": "__gnu_parallel::operator<=(const _GuardedIterator&,const _GuardedIterator&)",
						"r": "bool operator<",
						"s": "__gnu_parallel",
						"u": "OPERATOR<=",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43a674b31a1ad50c0277bfa07924f27b4621cccb"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_UnguardedIterator",
						"t": "",
						"i": "__gnu_parallel::_UnguardedIterator",
						"r": "template <typename _RAIter, typename _Compare> _UnguardedIterator",
						"s": "__gnu_parallel",
						"u": "_UNGUARDEDITERATOR",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17ca5e731d9aed20f46571494c59d949e52c0802"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_current",
						"t": "_RAIter",
						"i": "__gnu_parallel::_UnguardedIterator::_M_current",
						"r": "_RAIter _M_current",
						"s": "__gnu_parallel",
						"u": "_M_CURRENT",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5dc3ab00c5887ffc99cceb310b2bd9e5c52a598"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::_UnguardedIterator::__comp",
						"r": "_Compare& __comp",
						"s": "__gnu_parallel",
						"u": "__COMP",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "878f4f4d4e92e2e3895d8ffc004eedcbf0a700ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_UnguardedIterator<_RAIter, _Compare>",
						"t": "void (_RAIter, _RAIter, _Compare &)",
						"i": "__gnu_parallel::_UnguardedIterator::_UnguardedIterator(_RAIter,_RAIter,_Compare&)",
						"r": "_UnguardedIterator<_RAIter, _Compare>(_RAIter __begin, _RAIter, _Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "_UNGUARDEDITERATOR<_RAITER, _COMPARE>",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69ce5812f4598052334489d487df4b55b53cfb60"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator++",
						"t": "_UnguardedIterator<_RAIter, _Compare> &()",
						"i": "__gnu_parallel::_UnguardedIterator::operator++()",
						"r": "_UnguardedIterator<_RAIter, _Compare>& operator++()",
						"s": "__gnu_parallel",
						"u": "OPERATOR++",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b783a8cc2ae1ad82207b45694ac08399b6b0778"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator*",
						"t": "typename std::iterator_traits<_RAIter>::value_type &() const",
						"i": "__gnu_parallel::_UnguardedIterator::operator*()const",
						"r": "typename std::iterator_traits<_RAIter>::value_type& operator*() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR*",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b900d0f728888ae2c7c20789db2c356f20d6831b"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator type-parameter-0-0",
						"t": "_RAIter () const",
						"i": "__gnu_parallel::_UnguardedIterator::operator _RAIter()const",
						"r": "operator _RAIter() const",
						"s": "__gnu_parallel",
						"u": "OPERATOR TYPE-PARAMETER-0-0",
						"q": "__gnu_parallel::_UnguardedIterator",
						"w": "__GNU_PARALLEL::_UNGUARDEDITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cfe2e586f0c519bce4d5a7e98ec9a12369822de3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator<",
						"t": "bool (const _UnguardedIterator<_RAIter, _Compare> &, const _UnguardedIterator<_RAIter, _Compare> &)",
						"i": "__gnu_parallel::operator<(const _UnguardedIterator&,const _UnguardedIterator&)",
						"r": "bool operator<(const _UnguardedIterator<_RAIter, _Compare>& __bi1, const _UnguardedIterator<_RAIter, _Compare>& __bi2)",
						"s": "__gnu_parallel",
						"u": "OPERATOR<",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04268da26b9fb4d3ad9eafd59057d54c00654100"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator<=",
						"t": "bool (const _UnguardedIterator<_RAIter, _Compare> &, const _UnguardedIterator<_RAIter, _Compare> &)",
						"i": "__gnu_parallel::operator<=(const _UnguardedIterator&,const _UnguardedIterator&)",
						"r": "bool operator<",
						"s": "__gnu_parallel",
						"u": "OPERATOR<=",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7a46cb913d03e19ccc3dcf88dd7cd65ccc688d5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_3_variant",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::multiway_merge_3_variant(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "template <template <typename _RAI, typename _Cp> class iterator, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 multiway_merge_3_variant(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_3_VARIANT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80d886bee1e561c495c194c5d74538f87cc33fa7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MERGE_3_CASE",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MERGE_3_CASE",
						"r": "_GLIBCXX_PARALLEL_MERGE_3_CASE",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MERGE_3_CASE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "420ded868fde51429f0295b667a162d236dd6695"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_4_variant",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::multiway_merge_4_variant(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "template <template <typename _RAI, typename _Cp> class iterator, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 multiway_merge_4_variant(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_4_VARIANT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a55389d369f97f6afbb521c4466af21eda5506a"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_DECISION",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_DECISION",
						"r": "_GLIBCXX_PARALLEL_DECISION",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_DECISION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3bd07ee157e3ca590c255067a402e712315f68a1"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MERGE_4_CASE",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MERGE_4_CASE",
						"r": "_GLIBCXX_PARALLEL_MERGE_4_CASE",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MERGE_4_CASE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55433c98b9d2284b22fccbae1848cb6c7e8664fc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_loser_tree",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::multiway_merge_loser_tree(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "template <typename _LT, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 multiway_merge_loser_tree(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_LOSER_TREE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa98c96b7c56cbd7c6506e80c1ca62357e3bf328"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_loser_tree_unguarded",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type &, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::multiway_merge_loser_tree_unguarded(_RAIterIterator,_RAIterIterator,_RAIter3,const typename std::iterator_traits::value_type&,_DifferenceTp,_Compare)",
						"r": "template <typename _LT, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 multiway_merge_loser_tree_unguarded(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type& __sentinel, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_LOSER_TREE_UNGUARDED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0e2096330c5bd1362eeafdfadb03a9bfb05b2ae"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_loser_tree_sentinel",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type &, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::multiway_merge_loser_tree_sentinel(_RAIterIterator,_RAIterIterator,_RAIter3,const typename std::iterator_traits::value_type&,_DifferenceTp,_Compare)",
						"r": "template <typename _UnguardedLoserTree, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 multiway_merge_loser_tree_sentinel(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type& __sentinel, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_LOSER_TREE_SENTINEL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f0126b3cd9ca8aedfc3f2eacfe02432c02df207"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeTraits",
						"t": "",
						"i": "__gnu_parallel::_LoserTreeTraits",
						"r": "template <typename _Tp> _LoserTreeTraits",
						"s": "__gnu_parallel",
						"u": "_LOSERTREETRAITS",
						"q": "__gnu_parallel::_LoserTreeTraits",
						"w": "__GNU_PARALLEL::_LOSERTREETRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa85b0fa88d4aa4d6929255924416047cdd2ebea"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_M_use_pointer",
						"t": "const bool",
						"i": "__gnu_parallel::_LoserTreeTraits::_M_use_pointer",
						"r": "static const bool _M_use_pointer",
						"s": "__gnu_parallel",
						"u": "_M_USE_POINTER",
						"q": "__gnu_parallel::_LoserTreeTraits",
						"w": "__GNU_PARALLEL::_LOSERTREETRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fbc22e3796be64e82162ea75f4f4ed1308af68af"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__multiway_merge_3_variant_sentinel_switch",
						"t": "",
						"i": "__gnu_parallel::__multiway_merge_3_variant_sentinel_switch",
						"r": "template <bool __sentinels, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> __multiway_merge_3_variant_sentinel_switch",
						"s": "__gnu_parallel",
						"u": "__MULTIWAY_MERGE_3_VARIANT_SENTINEL_SWITCH",
						"q": "__gnu_parallel::__multiway_merge_3_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_3_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b1e3b140ae15a940ae3f22229010e79df83f578"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__multiway_merge_3_variant_sentinel_switch::operator()(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__multiway_merge_3_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_3_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73dfc73de4b4f89a1e6ba7d68c2ab555a8da7a4f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "operator()(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9f5726ee2b2944caadc9f9e8c310ac62a94f005"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__multiway_merge_4_variant_sentinel_switch",
						"t": "",
						"i": "__gnu_parallel::__multiway_merge_4_variant_sentinel_switch",
						"r": "template <bool __sentinels, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> __multiway_merge_4_variant_sentinel_switch",
						"s": "__gnu_parallel",
						"u": "__MULTIWAY_MERGE_4_VARIANT_SENTINEL_SWITCH",
						"q": "__gnu_parallel::__multiway_merge_4_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_4_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c73b1ff55bc9601482d9a3b05e0682e80a31338b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__multiway_merge_4_variant_sentinel_switch::operator()(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__multiway_merge_4_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_4_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d55fcb7d2a8142bf7fda1c216cc4339584af8c1b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare)",
						"i": "operator()(_RAIterIterator,_RAIterIterator,_RAIter3,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _DifferenceTp __length, _Compare __comp)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b38c64970f563ddcd67fc523b9c2429fad424dc4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__multiway_merge_k_variant_sentinel_switch",
						"t": "",
						"i": "__gnu_parallel::__multiway_merge_k_variant_sentinel_switch",
						"r": "template <bool __sentinels, bool __stable, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> __multiway_merge_k_variant_sentinel_switch",
						"s": "__gnu_parallel",
						"u": "__MULTIWAY_MERGE_K_VARIANT_SENTINEL_SWITCH",
						"q": "__gnu_parallel::__multiway_merge_k_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_K_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "30cf8cfce7d13cf99928bdfb7329a5de667d5cda"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type &, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__multiway_merge_k_variant_sentinel_switch::operator()(_RAIterIterator,_RAIterIterator,_RAIter3,const typename std::iterator_traits::value_type&,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type& __sentinel, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__multiway_merge_k_variant_sentinel_switch",
						"w": "__GNU_PARALLEL::__MULTIWAY_MERGE_K_VARIANT_SENTINEL_SWITCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b4f91ed8d96f2cfb0c3a6ebee8276fb1c1f2859"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type &, _DifferenceTp, _Compare)",
						"i": "operator()(_RAIterIterator,_RAIterIterator,_RAIter3,const typename std::iterator_traits::value_type&,_DifferenceTp,_Compare)",
						"r": "_RAIter3 operator()(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type& __sentinel, _DifferenceTp __length, _Compare __comp)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d31e3a5f128c9d2bc4c14f08de814698beab8d07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sequential_multiway_merge",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type &, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__sequential_multiway_merge(_RAIterIterator,_RAIterIterator,_RAIter3,const typename std::iterator_traits::value_type&,_DifferenceTp,_Compare)",
						"r": "template <bool __stable, bool __sentinels, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Compare> _RAIter3 __sequential_multiway_merge(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, const typename std::iterator_traits<typename std::iterator_traits<_RAIterIterator>::value_type::first_type>::value_type& __sentinel, _DifferenceTp __length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__SEQUENTIAL_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6490dd846181b5682667adfa395bff6e1adfcd81"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_SamplingSorter",
						"t": "",
						"i": "__gnu_parallel::_SamplingSorter",
						"r": "template <bool __stable, class _RAIter, class _StrictWeakOrdering> _SamplingSorter",
						"s": "__gnu_parallel",
						"u": "_SAMPLINGSORTER",
						"q": "__gnu_parallel::_SamplingSorter",
						"w": "__GNU_PARALLEL::_SAMPLINGSORTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "214ed87c9d3df521858b827e97cc8ab8f56eae17"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (_RAIter, _RAIter, _StrictWeakOrdering)",
						"i": "__gnu_parallel::_SamplingSorter::operator()(_RAIter,_RAIter,_StrictWeakOrdering)",
						"r": "void operator()(_RAIter __first, _RAIter __last, _StrictWeakOrdering __comp)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_SamplingSorter",
						"w": "__GNU_PARALLEL::_SAMPLINGSORTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b54300a9d5c9644a209e281512fd3e426a2a3fab"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (_RAIter, _RAIter, _StrictWeakOrdering)",
						"i": "operator()(_RAIter,_RAIter,_StrictWeakOrdering)",
						"r": "void operator()(_RAIter __first, _RAIter __last, _StrictWeakOrdering __comp)",
						"s": "",
						"u": "OPERATOR()",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cda8b8d36853b437aca6754360fc02478baf3f6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sampling_splitting",
						"t": "void (_RAIterIterator, _RAIterIterator, _DifferenceType, _DifferenceType, _Compare, std::vector<std::pair<_DifferenceType, _DifferenceType>> *)",
						"i": "__gnu_parallel::multiway_merge_sampling_splitting(_RAIterIterator,_RAIterIterator,_DifferenceType,_DifferenceType,_Compare,std::vector*)",
						"r": "template <bool __stable, typename _RAIterIterator, typename _Compare, typename _DifferenceType> void multiway_merge_sampling_splitting(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _DifferenceType __length, _DifferenceType __total_length, _Compare __comp, vector<std::pair<_DifferenceType, _DifferenceType>> *__pieces)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SAMPLING_SPLITTING",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c969b7c428b7d910ec13fcedb4b8f412c10a043"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_exact_splitting",
						"t": "void (_RAIterIterator, _RAIterIterator, _DifferenceType, _DifferenceType, _Compare, std::vector<std::pair<_DifferenceType, _DifferenceType>> *)",
						"i": "__gnu_parallel::multiway_merge_exact_splitting(_RAIterIterator,_RAIterIterator,_DifferenceType,_DifferenceType,_Compare,std::vector*)",
						"r": "template <bool __stable, typename _RAIterIterator, typename _Compare, typename _DifferenceType> void multiway_merge_exact_splitting(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _DifferenceType __length, _DifferenceType __total_length, _Compare __comp, vector<std::pair<_DifferenceType, _DifferenceType>> *__pieces)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_EXACT_SPLITTING",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b66ff5afef1b37e99fb671716991ebd1289aae9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_multiway_merge",
						"t": "_RAIter3 (_RAIterIterator, _RAIterIterator, _RAIter3, _Splitter, _DifferenceTp, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::parallel_multiway_merge(_RAIterIterator,_RAIterIterator,_RAIter3,_Splitter,_DifferenceTp,_Compare,_ThreadIndex)",
						"r": "template <bool __stable, bool __sentinels, typename _RAIterIterator, typename _RAIter3, typename _DifferenceTp, typename _Splitter, typename _Compare> _RAIter3 parallel_multiway_merge(_RAIterIterator __seqs_begin, _RAIterIterator __seqs_end, _RAIter3 __target, _Splitter __splitter, _DifferenceTp __length, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "PARALLEL_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8bfa0477075535107897e084e072211121497add"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::sequential_tag)",
						"i": "__gnu_parallel::multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fa5bf4c6ea65ac68180061658aa749b19a95007"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::exact_tag)",
						"i": "__gnu_parallel::multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::exact_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::exact_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a684e3cf22852db721411b9e851f971023de26a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::sampling_tag)",
						"i": "__gnu_parallel::multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::sampling_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sampling_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1016cc9f306bcc9bd7a54102717b0926bd3a586"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, parallel_tag)",
						"i": "__gnu_parallel::multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::parallel_tag __tag = __gnu_parallel::parallel_tag(0))",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be516f5ca7ce9c5a9ce0a0c41a0fd5a35a28af29"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, default_parallel_tag)",
						"i": "__gnu_parallel::multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,default_parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::default_parallel_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc9340534006c5044cf8af0f8e604e1613487d2c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::sequential_tag)",
						"i": "__gnu_parallel::stable_multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c035cf4e9ce16be1cd16dce790e81fb6667699c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::exact_tag)",
						"i": "__gnu_parallel::stable_multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::exact_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::exact_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab7482a0b309e2945d5dbca7b1cd47c188437d01"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, sampling_tag)",
						"i": "__gnu_parallel::stable_multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,sampling_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sampling_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74ce31bd80764b229f31fe35e46d63e2920aae28"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, parallel_tag)",
						"i": "__gnu_parallel::stable_multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::parallel_tag __tag = __gnu_parallel::parallel_tag(0))",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d388c6efeb9508598457692563097829757647d6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, default_parallel_tag)",
						"i": "__gnu_parallel::stable_multiway_merge(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,default_parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::default_parallel_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c0393e670266207f0ebf58399e948d8d4ee25ee"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::sequential_tag)",
						"i": "__gnu_parallel::multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6f2059be066b153862e1a81739d13ce1e4bb277"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::exact_tag)",
						"i": "__gnu_parallel::multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::exact_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::exact_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b06b193dfea1098b4c042e794581ef9d8a132897"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, sampling_tag)",
						"i": "__gnu_parallel::multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,sampling_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sampling_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "456ef47ec7323e92236231f21681bd755f9a4ff1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, parallel_tag)",
						"i": "__gnu_parallel::multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::parallel_tag __tag = __gnu_parallel::parallel_tag(0))",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b09feec43ec5ebd5a3028f6d8aea6af1724006c7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, default_parallel_tag)",
						"i": "__gnu_parallel::multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,default_parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::default_parallel_tag __tag)",
						"s": "__gnu_parallel",
						"u": "MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08e61aaee2c23d63a5fb751531b35f2d03d63b3d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::sequential_tag)",
						"i": "__gnu_parallel::stable_multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::sequential_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sequential_tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "764ce96fdc8725e230409e2a8bcc17a8f6a74fae"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, __gnu_parallel::exact_tag)",
						"i": "__gnu_parallel::stable_multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,__gnu_parallel::exact_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::exact_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "68fc3372a9b618a718ecce05565dfcf1dadd5880"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, sampling_tag)",
						"i": "__gnu_parallel::stable_multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,sampling_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::sampling_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80eb21799819602b03fbf893e4c7d1aebff40555"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, parallel_tag)",
						"i": "__gnu_parallel::stable_multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::parallel_tag __tag = __gnu_parallel::parallel_tag(0))",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e93e417297f693de45cb0c93ac8c4a5042c9d8f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_multiway_merge_sentinels",
						"t": "_RAIterOut (_RAIterPairIterator, _RAIterPairIterator, _RAIterOut, _DifferenceTp, _Compare, default_parallel_tag)",
						"i": "__gnu_parallel::stable_multiway_merge_sentinels(_RAIterPairIterator,_RAIterPairIterator,_RAIterOut,_DifferenceTp,_Compare,default_parallel_tag)",
						"r": "template <typename _RAIterPairIterator, typename _RAIterOut, typename _DifferenceTp, typename _Compare> _RAIterOut stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin, _RAIterPairIterator __seqs_end, _RAIterOut __target, _DifferenceTp __length, _Compare __comp, __gnu_parallel::default_parallel_tag __tag)",
						"s": "__gnu_parallel",
						"u": "STABLE_MULTIWAY_MERGE_SENTINELS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba5ea0445dee63986e2d0a71b1d760b2cb03b68b"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/losertree.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_LOSERTREE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_LOSERTREE_H",
						"r": "_GLIBCXX_PARALLEL_LOSERTREE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_LOSERTREE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a562a4f404c0b41a162d965436b18630456d51f3"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeBase",
						"t": "",
						"i": "__gnu_parallel::_LoserTreeBase",
						"r": "template <typename _Tp, typename _Compare> _LoserTreeBase",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEBASE",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83afb057d95456966dd2fe6141db67e39677c2c3"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Loser",
						"t": "__gnu_parallel::_LoserTreeBase::_Loser",
						"i": "__gnu_parallel::_LoserTreeBase::_Loser",
						"r": "_Loser",
						"s": "__gnu_parallel",
						"u": "_LOSER",
						"q": "__gnu_parallel::_LoserTreeBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7f90578a508b6fed5fc8e0744cc3b915007d9cb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sup",
						"t": "bool",
						"i": "__gnu_parallel::_LoserTreeBase::_Loser::_M_sup",
						"r": "bool _M_sup",
						"s": "__gnu_parallel",
						"u": "_M_SUP",
						"q": "__gnu_parallel::_LoserTreeBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54e5fe458e8098ff446af55d7af0634ff4972017"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "int",
						"i": "__gnu_parallel::_LoserTreeBase::_Loser::_M_source",
						"r": "int _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_LoserTreeBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9147148ab12662076489c67422562e550992540"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_key",
						"t": "_Tp",
						"i": "__gnu_parallel::_LoserTreeBase::_Loser::_M_key",
						"r": "_Tp _M_key",
						"s": "__gnu_parallel",
						"u": "_M_KEY",
						"q": "__gnu_parallel::_LoserTreeBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "345294169289c8c953a8c498080171122cb72e19"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_ik",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeBase::_M_ik",
						"r": "unsigned int _M_ik",
						"s": "__gnu_parallel",
						"u": "_M_IK",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11ce2d9ecf265c69e4727f5f4a030ce775ab45d0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_k",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeBase::_M_k",
						"r": "unsigned int _M_k",
						"s": "__gnu_parallel",
						"u": "_M_K",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "951d1a849b190d961beaa6822d6b975212542795"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_offset",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeBase::_M_offset",
						"r": "unsigned int _M_offset",
						"s": "__gnu_parallel",
						"u": "_M_OFFSET",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "373a70053879d0bf054e43563a9bea0f61305e05"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_log_k",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeBase::_M_log_k",
						"r": "unsigned int _M_log_k",
						"s": "__gnu_parallel",
						"u": "_M_LOG_K",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a66c6a3d627afa13986b1052cf459b1647090cc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_losers",
						"t": "_Loser *",
						"i": "__gnu_parallel::_LoserTreeBase::_M_losers",
						"r": "__gnu_parallel::_LoserTreeBase::_Loser *_M_losers",
						"s": "__gnu_parallel",
						"u": "_M_LOSERS",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49d3fcdcf7a1b335cf25dfd0c6b1532d81241213"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::_LoserTreeBase::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_first_insert",
						"t": "bool",
						"i": "__gnu_parallel::_LoserTreeBase::_M_first_insert",
						"r": "bool _M_first_insert",
						"s": "__gnu_parallel",
						"u": "_M_FIRST_INSERT",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e3778255042a96957027dff9ffcebed271366d1"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeBase<_Tp, _Compare>",
						"t": "void (unsigned int, _Compare)",
						"i": "__gnu_parallel::_LoserTreeBase::_LoserTreeBase(unsigned int,_Compare)",
						"r": "_LoserTreeBase<_Tp, _Compare>(unsigned int __k, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca10699d3325e0b83c51e07e14eef008afda205e"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~_LoserTreeBase<_Tp, _Compare>",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreeBase::~_LoserTreeBase()",
						"r": "~_LoserTreeBase<_Tp, _Compare>()",
						"s": "__gnu_parallel",
						"u": "~_LOSERTREEBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14f0eb93b421f03b9787622e772628f1df142c13"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__insert_start",
						"t": "void (const _Tp &, int, bool)",
						"i": "__gnu_parallel::_LoserTreeBase::__insert_start(const _Tp&,int,bool)",
						"r": "void __insert_start(const _Tp& __key, int __source, bool __sup)",
						"s": "__gnu_parallel",
						"u": "__INSERT_START",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94e6376e9bb3cba7cdfe62a775b664386b9fd426"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_min_source",
						"t": "int ()",
						"i": "__gnu_parallel::_LoserTreeBase::__get_min_source()",
						"r": "int __get_min_source()",
						"s": "__gnu_parallel",
						"u": "__GET_MIN_SOURCE",
						"q": "__gnu_parallel::_LoserTreeBase",
						"w": "__GNU_PARALLEL::_LOSERTREEBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64b4768bad8897d615dc6a7252972ba112c0b53e"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTree",
						"t": "",
						"i": "__gnu_parallel::_LoserTree",
						"r": "template <bool __stable, typename _Tp, typename _Compare> _LoserTree : public _LoserTreeBase<_Tp, _Compare>",
						"s": "__gnu_parallel",
						"u": "_LOSERTREE",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "__gnu_parallel::_LoserTreeBase",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63f888137e7a0095463309a060b7b426584ca547"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTree::_Base",
						"i": "__gnu_parallel::_LoserTree::_Base",
						"r": "typedef _LoserTreeBase<_Tp, _Compare> _Base",
						"s": "__gnu_parallel",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "238f17e4d859ebea7fdd536bad51f97dca289152"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTree<__stable, _Tp, _Compare>",
						"t": "void (unsigned int, _Compare)",
						"i": "__gnu_parallel::_LoserTree::_LoserTree(unsigned int,_Compare)",
						"r": "_LoserTree<__stable, _Tp, _Compare>(unsigned int __k, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "_LOSERTREE<__STABLE, _TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06ecfa9d387215da0e8c53bed5435a30b28e7a77"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__gnu_parallel::_LoserTree::__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "__gnu_parallel",
						"u": "__INIT_WINNER",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6071cdfe3f22ddbc580c65546d2ecea1c4ffadac"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTree::__init()",
						"r": "void __init()",
						"s": "__gnu_parallel",
						"u": "__INIT",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a57bee007b7d42e6bfaa1634c81ffc1cd3df7d13"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (_Tp, bool)",
						"i": "__gnu_parallel::_LoserTree::__delete_min_insert(_Tp,bool)",
						"r": "void __delete_min_insert(_Tp __key, bool __sup)",
						"s": "__gnu_parallel",
						"u": "__DELETE_MIN_INSERT",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bcdd9e4cf1c9325c9f815ed4288b82538e8cddbe"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTree<false, type-parameter-0-0, type-parameter-0-1>::_Base",
						"i": "__gnu_parallel::_LoserTree::_Base",
						"r": "typedef _LoserTreeBase<_Tp, _Compare> _Base",
						"s": "",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTree",
						"w": "__GNU_PARALLEL::_LOSERTREE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "238f17e4d859ebea7fdd536bad51f97dca289152"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTree<false, type-parameter-0-0, type-parameter-0-1>",
						"t": "void (unsigned int, _Compare)",
						"i": "_LoserTree(unsigned int,_Compare)",
						"r": "_LoserTree<false, type-parameter-0-0, type-parameter-0-1>(unsigned int __k, _Compare __comp)",
						"s": "",
						"u": "_LOSERTREE<FALSE, TYPE-PARAMETER-0-0, TYPE-PARAMETER-0-1>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06ecfa9d387215da0e8c53bed5435a30b28e7a77"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "",
						"u": "__INIT_WINNER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6071cdfe3f22ddbc580c65546d2ecea1c4ffadac"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__init()",
						"r": "void __init()",
						"s": "",
						"u": "__INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65a32993d20e8179463ecc099cd1a13e8f6d2bd2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (_Tp, bool)",
						"i": "__delete_min_insert(_Tp,bool)",
						"r": "void __delete_min_insert(_Tp __key, bool __sup)",
						"s": "",
						"u": "__DELETE_MIN_INSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da0723fdfd28f027a37ab34d097b8b5a4e750c40"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerBase",
						"t": "",
						"i": "__gnu_parallel::_LoserTreePointerBase",
						"r": "template <typename _Tp, typename _Compare> _LoserTreePointerBase",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERBASE",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d227c9ae3ec64407e8521a8a2961df5dafe0b32"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Loser",
						"t": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"i": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"r": "_Loser",
						"s": "__gnu_parallel",
						"u": "_LOSER",
						"q": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a53563996920ad7a8f3402afd7f7fa38e696d26"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sup",
						"t": "bool",
						"i": "__gnu_parallel::_LoserTreePointerBase::_Loser::_M_sup",
						"r": "bool _M_sup",
						"s": "__gnu_parallel",
						"u": "_M_SUP",
						"q": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54e5fe458e8098ff446af55d7af0634ff4972017"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "int",
						"i": "__gnu_parallel::_LoserTreePointerBase::_Loser::_M_source",
						"r": "int _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9147148ab12662076489c67422562e550992540"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_keyp",
						"t": "const _Tp *",
						"i": "__gnu_parallel::_LoserTreePointerBase::_Loser::_M_keyp",
						"r": "const _Tp *_M_keyp",
						"s": "__gnu_parallel",
						"u": "_M_KEYP",
						"q": "__gnu_parallel::_LoserTreePointerBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37ff2399c2d7d02b6b15e1ab0691aad119a782a5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_ik",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerBase::_M_ik",
						"r": "unsigned int _M_ik",
						"s": "__gnu_parallel",
						"u": "_M_IK",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11ce2d9ecf265c69e4727f5f4a030ce775ab45d0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_k",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerBase::_M_k",
						"r": "unsigned int _M_k",
						"s": "__gnu_parallel",
						"u": "_M_K",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "951d1a849b190d961beaa6822d6b975212542795"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_offset",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerBase::_M_offset",
						"r": "unsigned int _M_offset",
						"s": "__gnu_parallel",
						"u": "_M_OFFSET",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "373a70053879d0bf054e43563a9bea0f61305e05"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_losers",
						"t": "_Loser *",
						"i": "__gnu_parallel::_LoserTreePointerBase::_M_losers",
						"r": "__gnu_parallel::_LoserTreePointerBase::_Loser *_M_losers",
						"s": "__gnu_parallel",
						"u": "_M_LOSERS",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49d3fcdcf7a1b335cf25dfd0c6b1532d81241213"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::_LoserTreePointerBase::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerBase<_Tp, _Compare>",
						"t": "void (unsigned int, _Compare)",
						"i": "__gnu_parallel::_LoserTreePointerBase::_LoserTreePointerBase(unsigned int,_Compare)",
						"r": "_LoserTreePointerBase<_Tp, _Compare>(unsigned int __k, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35181c5728ecb24832a94dbd63919abdfc871a6b"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~_LoserTreePointerBase<_Tp, _Compare>",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreePointerBase::~_LoserTreePointerBase()",
						"r": "~_LoserTreePointerBase<_Tp, _Compare>()",
						"s": "__gnu_parallel",
						"u": "~_LOSERTREEPOINTERBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32c755bd4aa8ae026ba56dddff2ad03a84135c52"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_min_source",
						"t": "int ()",
						"i": "__gnu_parallel::_LoserTreePointerBase::__get_min_source()",
						"r": "int __get_min_source()",
						"s": "__gnu_parallel",
						"u": "__GET_MIN_SOURCE",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64b4768bad8897d615dc6a7252972ba112c0b53e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__insert_start",
						"t": "void (const _Tp &, int, bool)",
						"i": "__gnu_parallel::_LoserTreePointerBase::__insert_start(const _Tp&,int,bool)",
						"r": "void __insert_start(const _Tp& __key, int __source, bool __sup)",
						"s": "__gnu_parallel",
						"u": "__INSERT_START",
						"q": "__gnu_parallel::_LoserTreePointerBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f852b346ea519af1ecfbd054947373f963f4599f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointer",
						"t": "",
						"i": "__gnu_parallel::_LoserTreePointer",
						"r": "template <bool __stable, typename _Tp, typename _Compare> _LoserTreePointer : public _LoserTreePointerBase<_Tp, _Compare>",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTER",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "__gnu_parallel::_LoserTreePointerBase",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d1ed5d3e5e69836526b18014421c8d8d1b87656"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreePointer::_Base",
						"i": "__gnu_parallel::_LoserTreePointer::_Base",
						"r": "typedef _LoserTreePointerBase<_Tp, _Compare> _Base",
						"s": "__gnu_parallel",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f7931c06b0f7bb7aaaca8b9413f991b1b2ad8f2"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointer<__stable, _Tp, _Compare>",
						"t": "void (unsigned int, _Compare)",
						"i": "__gnu_parallel::_LoserTreePointer::_LoserTreePointer(unsigned int,_Compare)",
						"r": "_LoserTreePointer<__stable, _Tp, _Compare>(unsigned int __k, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTER<__STABLE, _TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13a33ac336c768fdc814ccbce6df1e98efdddf97"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__gnu_parallel::_LoserTreePointer::__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "__gnu_parallel",
						"u": "__INIT_WINNER",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5d7c7e023fe6dcd989348e7806f364f4663f485"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreePointer::__init()",
						"r": "void __init()",
						"s": "__gnu_parallel",
						"u": "__INIT",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a57bee007b7d42e6bfaa1634c81ffc1cd3df7d13"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (const _Tp &, bool)",
						"i": "__gnu_parallel::_LoserTreePointer::__delete_min_insert(const _Tp&,bool)",
						"r": "void __delete_min_insert(const _Tp& __key, bool __sup)",
						"s": "__gnu_parallel",
						"u": "__DELETE_MIN_INSERT",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eea3f975f255322deea0468d83beaf733475aee0"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreePointer<false, type-parameter-0-0, type-parameter-0-1>::_Base",
						"i": "__gnu_parallel::_LoserTreePointer::_Base",
						"r": "typedef _LoserTreePointerBase<_Tp, _Compare> _Base",
						"s": "",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreePointer",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f7931c06b0f7bb7aaaca8b9413f991b1b2ad8f2"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointer<false, type-parameter-0-0, type-parameter-0-1>",
						"t": "void (unsigned int, _Compare)",
						"i": "_LoserTreePointer(unsigned int,_Compare)",
						"r": "_LoserTreePointer<false, type-parameter-0-0, type-parameter-0-1>(unsigned int __k, _Compare __comp = less<_Tp>())",
						"s": "",
						"u": "_LOSERTREEPOINTER<FALSE, TYPE-PARAMETER-0-0, TYPE-PARAMETER-0-1>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13a33ac336c768fdc814ccbce6df1e98efdddf97"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "",
						"u": "__INIT_WINNER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60a3114c2db4f0e6d475b45403b619367807d0be"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__init()",
						"r": "void __init()",
						"s": "",
						"u": "__INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a57bee007b7d42e6bfaa1634c81ffc1cd3df7d13"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (const _Tp &, bool)",
						"i": "__delete_min_insert(const _Tp&,bool)",
						"r": "void __delete_min_insert(const _Tp& __key, bool __sup)",
						"s": "",
						"u": "__DELETE_MIN_INSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0bbc1bdc9cfae4596078ba2f2ea86a816c37f4f0"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeUnguardedBase",
						"t": "",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase",
						"r": "template <typename _Tp, typename _Compare> _LoserTreeUnguardedBase",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEUNGUARDEDBASE",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ade30f601bded498c0b1d920d5bc8ec156ffaf49"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Loser",
						"t": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser",
						"r": "_Loser",
						"s": "__gnu_parallel",
						"u": "_LOSER",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca580ee1814b70314c10f227ae12e897e25259ac"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "int",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser::_M_source",
						"r": "int _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9147148ab12662076489c67422562e550992540"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_key",
						"t": "_Tp",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser::_M_key",
						"r": "_Tp _M_key",
						"s": "__gnu_parallel",
						"u": "_M_KEY",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "345294169289c8c953a8c498080171122cb72e19"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_ik",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_M_ik",
						"r": "unsigned int _M_ik",
						"s": "__gnu_parallel",
						"u": "_M_IK",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11ce2d9ecf265c69e4727f5f4a030ce775ab45d0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_k",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_M_k",
						"r": "unsigned int _M_k",
						"s": "__gnu_parallel",
						"u": "_M_K",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "951d1a849b190d961beaa6822d6b975212542795"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_offset",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_M_offset",
						"r": "unsigned int _M_offset",
						"s": "__gnu_parallel",
						"u": "_M_OFFSET",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "373a70053879d0bf054e43563a9bea0f61305e05"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_losers",
						"t": "_Loser *",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_M_losers",
						"r": "__gnu_parallel::_LoserTreeUnguardedBase::_Loser *_M_losers",
						"s": "__gnu_parallel",
						"u": "_M_LOSERS",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49d3fcdcf7a1b335cf25dfd0c6b1532d81241213"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeUnguardedBase<_Tp, _Compare>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::_LoserTreeUnguardedBase(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreeUnguardedBase<_Tp, _Compare>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEUNGUARDEDBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bc328beb55c07a0c2bcfc51d8b5a11f187e7b35"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~_LoserTreeUnguardedBase<_Tp, _Compare>",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::~_LoserTreeUnguardedBase()",
						"r": "~_LoserTreeUnguardedBase<_Tp, _Compare>()",
						"s": "__gnu_parallel",
						"u": "~_LOSERTREEUNGUARDEDBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc0bd4fba3789ebba705eb55b482f1cfb864b1d3"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_min_source",
						"t": "int ()",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::__get_min_source()",
						"r": "int __get_min_source()",
						"s": "__gnu_parallel",
						"u": "__GET_MIN_SOURCE",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bef386ed9e51d8581458e86ce2c163f79ad458b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__insert_start",
						"t": "void (const _Tp &, int, bool)",
						"i": "__gnu_parallel::_LoserTreeUnguardedBase::__insert_start(const _Tp&,int,bool)",
						"r": "void __insert_start(const _Tp& __key, int __source, bool)",
						"s": "__gnu_parallel",
						"u": "__INSERT_START",
						"q": "__gnu_parallel::_LoserTreeUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95228cfe039da30fa29b04e8f0629ddd7452f52c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeUnguarded",
						"t": "",
						"i": "__gnu_parallel::_LoserTreeUnguarded",
						"r": "template <bool __stable, typename _Tp, typename _Compare> _LoserTreeUnguarded : public _LoserTreeUnguardedBase<_Tp, _Compare>",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEUNGUARDED",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "__gnu_parallel::_LoserTreeUnguardedBase",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "965b34d8e6bb1f90fbc66a254c4fa8dbaa5ef001"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreeUnguarded::_Base",
						"i": "__gnu_parallel::_LoserTreeUnguarded::_Base",
						"r": "typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base",
						"s": "__gnu_parallel",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "851d6cfab6d4d0411424956ac6029866977d42ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeUnguarded<__stable, _Tp, _Compare>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "__gnu_parallel::_LoserTreeUnguarded::_LoserTreeUnguarded(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreeUnguarded<__stable, _Tp, _Compare>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEUNGUARDED<__STABLE, _TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "328c1fab034e0e6f5a191a2f7e95d0e690c1771e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__gnu_parallel::_LoserTreeUnguarded::__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "__gnu_parallel",
						"u": "__INIT_WINNER",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "436e90192654c4c8e13f82cb78b9f3a726698c08"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreeUnguarded::__init()",
						"r": "void __init()",
						"s": "__gnu_parallel",
						"u": "__INIT",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1baf54edeb1555ef79a7dcfdc5397d8f599fdf68"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (_Tp, bool)",
						"i": "__gnu_parallel::_LoserTreeUnguarded::__delete_min_insert(_Tp,bool)",
						"r": "void __delete_min_insert(_Tp __key, bool)",
						"s": "__gnu_parallel",
						"u": "__DELETE_MIN_INSERT",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65be0142832a4e86d90addcb69e0f526938de631"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreeUnguarded<false, type-parameter-0-0, type-parameter-0-1>::_Base",
						"i": "__gnu_parallel::_LoserTreeUnguarded::_Base",
						"r": "typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base",
						"s": "",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreeUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "851d6cfab6d4d0411424956ac6029866977d42ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreeUnguarded<false, type-parameter-0-0, type-parameter-0-1>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "_LoserTreeUnguarded(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreeUnguarded<false, type-parameter-0-0, type-parameter-0-1>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "",
						"u": "_LOSERTREEUNGUARDED<FALSE, TYPE-PARAMETER-0-0, TYPE-PARAMETER-0-1>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "328c1fab034e0e6f5a191a2f7e95d0e690c1771e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "",
						"u": "__INIT_WINNER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ff0acfc0949263f7aa90fab9058aa44b86ada65"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__init()",
						"r": "void __init()",
						"s": "",
						"u": "__INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1baf54edeb1555ef79a7dcfdc5397d8f599fdf68"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (_Tp, bool)",
						"i": "__delete_min_insert(_Tp,bool)",
						"r": "void __delete_min_insert(_Tp __key, bool)",
						"s": "",
						"u": "__DELETE_MIN_INSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19b81adecdd1541503123903e3dae8800a482c6f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerUnguardedBase",
						"t": "",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"r": "template <typename _Tp, typename _Compare> _LoserTreePointerUnguardedBase",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERUNGUARDEDBASE",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f2032011fbb5c3a6f4f5115695852d85a773b72"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Loser",
						"t": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser",
						"r": "_Loser",
						"s": "__gnu_parallel",
						"u": "_LOSER",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "370f9a2a030ded048423f91d3ab248bea2b30dfc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "int",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser::_M_source",
						"r": "int _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9147148ab12662076489c67422562e550992540"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_keyp",
						"t": "const _Tp *",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser::_M_keyp",
						"r": "const _Tp *_M_keyp",
						"s": "__gnu_parallel",
						"u": "_M_KEYP",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE::_LOSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37ff2399c2d7d02b6b15e1ab0691aad119a782a5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_ik",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_M_ik",
						"r": "unsigned int _M_ik",
						"s": "__gnu_parallel",
						"u": "_M_IK",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11ce2d9ecf265c69e4727f5f4a030ce775ab45d0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_k",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_M_k",
						"r": "unsigned int _M_k",
						"s": "__gnu_parallel",
						"u": "_M_K",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "951d1a849b190d961beaa6822d6b975212542795"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_offset",
						"t": "unsigned int",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_M_offset",
						"r": "unsigned int _M_offset",
						"s": "__gnu_parallel",
						"u": "_M_OFFSET",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "373a70053879d0bf054e43563a9bea0f61305e05"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_losers",
						"t": "_Loser *",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_M_losers",
						"r": "__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser *_M_losers",
						"s": "__gnu_parallel",
						"u": "_M_LOSERS",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49d3fcdcf7a1b335cf25dfd0c6b1532d81241213"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerUnguardedBase<_Tp, _Compare>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::_LoserTreePointerUnguardedBase(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreePointerUnguardedBase<_Tp, _Compare>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERUNGUARDEDBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cd4de84e6137ebc38d21066a07a9bb2a78fb1b6"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~_LoserTreePointerUnguardedBase<_Tp, _Compare>",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::~_LoserTreePointerUnguardedBase()",
						"r": "~_LoserTreePointerUnguardedBase<_Tp, _Compare>()",
						"s": "__gnu_parallel",
						"u": "~_LOSERTREEPOINTERUNGUARDEDBASE<_TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89ce82e9b6def40460d85606b589da44a9c1ef30"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__get_min_source",
						"t": "int ()",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::__get_min_source()",
						"r": "int __get_min_source()",
						"s": "__gnu_parallel",
						"u": "__GET_MIN_SOURCE",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bef386ed9e51d8581458e86ce2c163f79ad458b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__insert_start",
						"t": "void (const _Tp &, int, bool)",
						"i": "__gnu_parallel::_LoserTreePointerUnguardedBase::__insert_start(const _Tp&,int,bool)",
						"r": "void __insert_start(const _Tp& __key, int __source, bool)",
						"s": "__gnu_parallel",
						"u": "__INSERT_START",
						"q": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDEDBASE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "647b0f41cc6c3672a34c7e6769c03f4b0bd3708c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerUnguarded",
						"t": "",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded",
						"r": "template <bool __stable, typename _Tp, typename _Compare> _LoserTreePointerUnguarded : public _LoserTreePointerUnguardedBase<_Tp, _Compare>",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERUNGUARDED",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "__gnu_parallel::_LoserTreePointerUnguardedBase",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c95b991988e13ca052f80e16ef1520db07a5e64"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreePointerUnguarded::_Base",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::_Base",
						"r": "typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base",
						"s": "__gnu_parallel",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32c9faa4322e1cfb9712a3c5aa882835a783fb6e"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerUnguarded<__stable, _Tp, _Compare>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::_LoserTreePointerUnguarded(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreePointerUnguarded<__stable, _Tp, _Compare>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "_LOSERTREEPOINTERUNGUARDED<__STABLE, _TP, _COMPARE>",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90c82cfc0e23627be42dedf8ba444a25d0d647a5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "__gnu_parallel",
						"u": "__INIT_WINNER",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72765a518fd5a81da5eaf950c32f8e10c4ac4474"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::__init()",
						"r": "void __init()",
						"s": "__gnu_parallel",
						"u": "__INIT",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1baf54edeb1555ef79a7dcfdc5397d8f599fdf68"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (const _Tp &, bool)",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::__delete_min_insert(const _Tp&,bool)",
						"r": "void __delete_min_insert(const _Tp& __key, bool __sup)",
						"s": "__gnu_parallel",
						"u": "__DELETE_MIN_INSERT",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2270f148709d480c348c1079990653d21da09939"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Base",
						"t": "__gnu_parallel::_LoserTreePointerUnguarded<false, type-parameter-0-0, type-parameter-0-1>::_Base",
						"i": "__gnu_parallel::_LoserTreePointerUnguarded::_Base",
						"r": "typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base",
						"s": "",
						"u": "_BASE",
						"q": "__gnu_parallel::_LoserTreePointerUnguarded",
						"w": "__GNU_PARALLEL::_LOSERTREEPOINTERUNGUARDED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32c9faa4322e1cfb9712a3c5aa882835a783fb6e"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LoserTreePointerUnguarded<false, type-parameter-0-0, type-parameter-0-1>",
						"t": "void (unsigned int, const _Tp &, _Compare)",
						"i": "_LoserTreePointerUnguarded(unsigned int,const _Tp&,_Compare)",
						"r": "_LoserTreePointerUnguarded<false, type-parameter-0-0, type-parameter-0-1>(unsigned int __k, const _Tp& __sentinel, _Compare __comp = less<_Tp>())",
						"s": "",
						"u": "_LOSERTREEPOINTERUNGUARDED<FALSE, TYPE-PARAMETER-0-0, TYPE-PARAMETER-0-1>",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90c82cfc0e23627be42dedf8ba444a25d0d647a5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init_winner",
						"t": "unsigned int (unsigned int)",
						"i": "__init_winner(unsigned int)",
						"r": "unsigned int __init_winner(unsigned int __root)",
						"s": "",
						"u": "__INIT_WINNER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d1b8601f99698a448b51dfb1cd8f254619b2b63"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__init",
						"t": "void ()",
						"i": "__init()",
						"r": "void __init()",
						"s": "",
						"u": "__INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1baf54edeb1555ef79a7dcfdc5397d8f599fdf68"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__delete_min_insert",
						"t": "void (const _Tp &, bool)",
						"i": "__delete_min_insert(const _Tp&,bool)",
						"r": "void __delete_min_insert(const _Tp& __key, bool __sup)",
						"s": "",
						"u": "__DELETE_MIN_INSERT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b64399d8cfe852114882f82405d2ecdd7355d1d8"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/multiseq_selection.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H",
						"r": "_GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80b5e1109d11d4bb8fe2cfeabf30415744cfa04c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Lexicographic",
						"t": "",
						"i": "__gnu_parallel::_Lexicographic",
						"r": "template <typename _T1, typename _T2, typename _Compare> _Lexicographic : public binary_function<std::pair<_T1, _T2>, std::pair<_T1, _T2>, bool>",
						"s": "__gnu_parallel",
						"u": "_LEXICOGRAPHIC",
						"q": "__gnu_parallel::_Lexicographic",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHIC",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3014485008c17965bee31093d19a6fc01ded193e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::_Lexicographic::_M_comp",
						"r": "_Compare& _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_Lexicographic",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHIC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4186351d175eca3dd2a9a598eca7f4410d3f46bb"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Lexicographic<_T1, _T2, _Compare>",
						"t": "void (_Compare &)",
						"i": "__gnu_parallel::_Lexicographic::_Lexicographic(_Compare&)",
						"r": "_Lexicographic<_T1, _T2, _Compare>(_Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "_LEXICOGRAPHIC<_T1, _T2, _COMPARE>",
						"q": "__gnu_parallel::_Lexicographic",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHIC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf84cfb9b5727613f20aa732d3c3200a5f2b7649"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const std::pair<_T1, _T2> &, const std::pair<_T1, _T2> &) const",
						"i": "__gnu_parallel::_Lexicographic::operator()(const std::pair&,const std::pair&)const",
						"r": "bool operator()(const pair<_T1, _T2>& __p1, const pair<_T1, _T2>& __p2) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Lexicographic",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHIC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08b1e83e3ebaf2a7e29b2e375a9e08162fd98b90"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LexicographicReverse",
						"t": "",
						"i": "__gnu_parallel::_LexicographicReverse",
						"r": "template <typename _T1, typename _T2, typename _Compare> _LexicographicReverse : public binary_function<_T1, _T2, bool>",
						"s": "__gnu_parallel",
						"u": "_LEXICOGRAPHICREVERSE",
						"q": "__gnu_parallel::_LexicographicReverse",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHICREVERSE",
						"y": "std::binary_function",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b5f64fe59d782a36e1c91fc0b94d1b45a65249c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::_LexicographicReverse::_M_comp",
						"r": "_Compare& _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::_LexicographicReverse",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHICREVERSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4186351d175eca3dd2a9a598eca7f4410d3f46bb"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_LexicographicReverse<_T1, _T2, _Compare>",
						"t": "void (_Compare &)",
						"i": "__gnu_parallel::_LexicographicReverse::_LexicographicReverse(_Compare&)",
						"r": "_LexicographicReverse<_T1, _T2, _Compare>(_Compare& __comp)",
						"s": "__gnu_parallel",
						"u": "_LEXICOGRAPHICREVERSE<_T1, _T2, _COMPARE>",
						"q": "__gnu_parallel::_LexicographicReverse",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHICREVERSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5d12462166ca19d916e65add146f35b2b66cbe0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const std::pair<_T1, _T2> &, const std::pair<_T1, _T2> &) const",
						"i": "__gnu_parallel::_LexicographicReverse::operator()(const std::pair&,const std::pair&)const",
						"r": "bool operator()(const pair<_T1, _T2>& __p1, const pair<_T1, _T2>& __p2) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_LexicographicReverse",
						"w": "__GNU_PARALLEL::_LEXICOGRAPHICREVERSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0b1c1f073ede15dbcd93b62a8ebd851ec008cfc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiseq_partition",
						"t": "void (_RanSeqs, _RanSeqs, _RankType, _RankIterator, _Compare)",
						"i": "__gnu_parallel::multiseq_partition(_RanSeqs,_RanSeqs,_RankType,_RankIterator,_Compare)",
						"r": "template <typename _RanSeqs, typename _RankType, typename _RankIterator, typename _Compare> void multiseq_partition(_RanSeqs __begin_seqs, _RanSeqs __end_seqs, _RankType __rank, _RankIterator __begin_offsets, _Compare __comp = less<typename std::iterator_traits<typename std::iterator_traits<_RanSeqs>::value_type::first_type>::value_type>())",
						"s": "__gnu_parallel",
						"u": "MULTISEQ_PARTITION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89b47429665fcb567f5bc4981310eb7ee53fe5f1"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__S",
						"t": "",
						"i": "__S",
						"r": "__S",
						"s": "",
						"u": "__S",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64c50db8d1176a434ddc4a2ba0e0836768dba311"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiseq_selection",
						"t": "_Tp (_RanSeqs, _RanSeqs, _RankType, _RankType &, _Compare)",
						"i": "__gnu_parallel::multiseq_selection(_RanSeqs,_RanSeqs,_RankType,_RankType&,_Compare)",
						"r": "template <typename _Tp, typename _RanSeqs, typename _RankType, typename _Compare> _Tp multiseq_selection(_RanSeqs __begin_seqs, _RanSeqs __end_seqs, _RankType __rank, _RankType& __offset, _Compare __comp = less<_Tp>())",
						"s": "__gnu_parallel",
						"u": "MULTISEQ_SELECTION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36f567f92a50c1cc7da7c7132a1bcc64542d3841"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__S",
						"t": "",
						"i": "__S",
						"r": "__S",
						"s": "",
						"u": "__S",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64c50db8d1176a434ddc4a2ba0e0836768dba311"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/quicksort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_QUICKSORT_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_QUICKSORT_H",
						"r": "_GLIBCXX_PARALLEL_QUICKSORT_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_QUICKSORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27d5f4bf14cbdaa97330dcb9625e053c7106f3b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort_qs_divide",
						"t": "typename std::iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, _Compare, typename std::iterator_traits<_RAIter>::difference_type, typename std::iterator_traits<_RAIter>::difference_type, _ThreadIndex)",
						"i": "__gnu_parallel::__parallel_sort_qs_divide(_RAIter,_RAIter,_Compare,typename std::iterator_traits::difference_type,typename std::iterator_traits::difference_type,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Compare> typename std::iterator_traits<_RAIter>::difference_type __parallel_sort_qs_divide(_RAIter __begin, _RAIter __end, _Compare __comp, typename std::iterator_traits<_RAIter>::difference_type __pivot_rank, typename std::iterator_traits<_RAIter>::difference_type __num_samples, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT_QS_DIVIDE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7507d624e141f510b77cebc6675bc6d45f91de36"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort_qs_conquer",
						"t": "void (_RAIter, _RAIter, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::__parallel_sort_qs_conquer(_RAIter,_RAIter,_Compare,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Compare> void __parallel_sort_qs_conquer(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT_QS_CONQUER",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fdedd03395da82e187d91c464fbb58f1414ce550"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort_qs",
						"t": "void (_RAIter, _RAIter, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::__parallel_sort_qs(_RAIter,_RAIter,_Compare,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Compare> void __parallel_sort_qs(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT_QS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9986a4ea6c3204810844f9b90bf05e2aa8fa1e4"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_PARTITION_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_PARTITION_H",
						"r": "_GLIBCXX_PARALLEL_PARTITION_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec608588bb685e63e6b12bc74dd183244359afd7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_VOLATILE",
						"t": "",
						"i": "_GLIBCXX_VOLATILE",
						"r": "_GLIBCXX_VOLATILE",
						"s": "",
						"u": "_GLIBCXX_VOLATILE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ab1dacadd6b050d03dbea2858b8f425612114e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_partition",
						"t": "typename std::iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, _Predicate, _ThreadIndex)",
						"i": "__gnu_parallel::__parallel_partition(_RAIter,_RAIter,_Predicate,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Predicate> typename std::iterator_traits<_RAIter>::difference_type __parallel_partition(_RAIter __begin, _RAIter __end, _Predicate __pred, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_PARTITION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce6cc6bf2eae8227aa76a32266c1ae5884543063"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_nth_element",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "__gnu_parallel::__parallel_nth_element(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void __parallel_nth_element(_RAIter __begin, _RAIter __nth, _RAIter __end, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_NTH_ELEMENT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "485d281a17dc521edf84a227cc9458159c04fbf8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_partial_sort",
						"t": "void (_RAIter, _RAIter, _RAIter, _Compare)",
						"i": "__gnu_parallel::__parallel_partial_sort(_RAIter,_RAIter,_RAIter,_Compare)",
						"r": "template <typename _RAIter, typename _Compare> void __parallel_partial_sort(_RAIter __begin, _RAIter __middle, _RAIter __end, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_PARTIAL_SORT",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "328d5ba56566b67089fc1a460d4fde3f97a816fe"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/random_number.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_RANDOM_NUMBER_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_RANDOM_NUMBER_H",
						"r": "_GLIBCXX_PARALLEL_RANDOM_NUMBER_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_RANDOM_NUMBER_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d9591f6bc4355edd271e079e4dea8dc34fc514b"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_RandomNumber",
						"t": "__gnu_parallel::_RandomNumber",
						"i": "__gnu_parallel::_RandomNumber",
						"r": "_RandomNumber",
						"s": "__gnu_parallel",
						"u": "_RANDOMNUMBER",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c08bdcb0cfafa4535e48691ecac8c9b8dfbd54b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_mt",
						"t": "std::tr1::mt19937",
						"i": "__gnu_parallel::_RandomNumber::_M_mt",
						"r": "std::tr1::mt19937 _M_mt",
						"s": "__gnu_parallel",
						"u": "_M_MT",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4aa2a767294c07bb05147f6b86e2ad65ff4dc08"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_supremum",
						"t": "uint64_t",
						"i": "__gnu_parallel::_RandomNumber::_M_supremum",
						"r": "uint64_t _M_supremum",
						"s": "__gnu_parallel",
						"u": "_M_SUPREMUM",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c98fc5e38153bf7acf33328c5f06c5a15ca9396"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_rand_sup",
						"t": "uint64_t",
						"i": "__gnu_parallel::_RandomNumber::_M_rand_sup",
						"r": "uint64_t _M_rand_sup",
						"s": "__gnu_parallel",
						"u": "_M_RAND_SUP",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3ff8ddb86cc521b5d9d6c560fb4faf0c01158fa"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_supremum_reciprocal",
						"t": "double",
						"i": "__gnu_parallel::_RandomNumber::_M_supremum_reciprocal",
						"r": "double _M_supremum_reciprocal",
						"s": "__gnu_parallel",
						"u": "_M_SUPREMUM_RECIPROCAL",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "385d2ade5998994df2669c360246fa4088215708"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_rand_sup_reciprocal",
						"t": "double",
						"i": "__gnu_parallel::_RandomNumber::_M_rand_sup_reciprocal",
						"r": "double _M_rand_sup_reciprocal",
						"s": "__gnu_parallel",
						"u": "_M_RAND_SUP_RECIPROCAL",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "947af051dd38825495151b2dde36648e5306fcfe"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__cache",
						"t": "uint64_t",
						"i": "__gnu_parallel::_RandomNumber::__cache",
						"r": "uint64_t __cache",
						"s": "__gnu_parallel",
						"u": "__CACHE",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd7083197b7fef5dfbf3645d3f3cb854dd516dd7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bits_left",
						"t": "int",
						"i": "__gnu_parallel::_RandomNumber::__bits_left",
						"r": "int __bits_left",
						"s": "__gnu_parallel",
						"u": "__BITS_LEFT",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf969d506f34fbc5cd870bb12386d67734415338"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__scale_down",
						"t": "uint32_t (uint64_t, uint64_t, double)",
						"i": "__gnu_parallel::_RandomNumber::__scale_down(uint64_t,uint64_t,double)",
						"r": "static uint32_t __scale_down(uint64_t __x, uint64_t _M_supremum, double)",
						"s": "__gnu_parallel",
						"u": "__SCALE_DOWN",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb9d8f9fc9ea6b497dc07a8277b3357758774dcc"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_RandomNumber",
						"t": "void ()",
						"i": "__gnu_parallel::_RandomNumber::_RandomNumber()",
						"r": "_RandomNumber()",
						"s": "__gnu_parallel",
						"u": "_RANDOMNUMBER",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b63858f33688d34baf61ddbf4421b8edff786771"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_RandomNumber",
						"t": "void (uint32_t, uint64_t)",
						"i": "__gnu_parallel::_RandomNumber::_RandomNumber(uint32_t,uint64_t)",
						"r": "_RandomNumber(uint32_t __seed, uint64_t _M_supremum = 4294967296ULL)",
						"s": "__gnu_parallel",
						"u": "_RANDOMNUMBER",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "881fc5e43da42bf90ccd46eaad35dd64f7663be0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "uint32_t ()",
						"i": "__gnu_parallel::_RandomNumber::operator()()",
						"r": "uint32_t operator()()",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9dcf0ade0b4264a5ee8e0458eecf751d260954e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "uint32_t (uint64_t)",
						"i": "__gnu_parallel::_RandomNumber::operator()(uint64_t)",
						"r": "uint32_t operator()(uint64_t local_supremum)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d88e8a32e40947e5ccec32ece3f05f34e8845f7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__genrand_bits",
						"t": "unsigned long (int)",
						"i": "__gnu_parallel::_RandomNumber::__genrand_bits(int)",
						"r": "unsigned long __genrand_bits(int __bits)",
						"s": "__gnu_parallel",
						"u": "__GENRAND_BITS",
						"q": "__gnu_parallel::_RandomNumber",
						"w": "__GNU_PARALLEL::_RANDOMNUMBER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "730fb8e291167777c604153dbc6964f1f3cd4534"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/balanced_quicksort.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H",
						"r": "_GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d83daaa1b0d5fa13d59f31b533ca4ad2bdc6857"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_QSBThreadLocal",
						"t": "",
						"i": "__gnu_parallel::_QSBThreadLocal",
						"r": "template <typename _RAIter> _QSBThreadLocal",
						"s": "__gnu_parallel",
						"u": "_QSBTHREADLOCAL",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fe59620d73237fda2727aead71ae73fce30f3eb"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::_QSBThreadLocal::_TraitsType",
						"i": "__gnu_parallel::_QSBThreadLocal::_TraitsType",
						"r": "typedef iterator_traits<_RAIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c511a79b6a35534dba687e3679bd5fdf8f97e026"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_QSBThreadLocal::_DifferenceType",
						"i": "__gnu_parallel::_QSBThreadLocal::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Piece",
						"t": "__gnu_parallel::_QSBThreadLocal::_Piece",
						"i": "__gnu_parallel::_QSBThreadLocal::_Piece",
						"r": "typedef pair<_RAIter, _RAIter> _Piece",
						"s": "__gnu_parallel",
						"u": "_PIECE",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc3be613de23aad36f1b9b8799d35b8c43474932"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_initial",
						"t": "_Piece",
						"i": "__gnu_parallel::_QSBThreadLocal::_M_initial",
						"r": "__gnu_parallel::_QSBThreadLocal::_Piece _M_initial",
						"s": "__gnu_parallel",
						"u": "_M_INITIAL",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4cb4dcef7e1bb79d68a99cd3feabfd3c69d20a4a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_leftover_parts",
						"t": "_RestrictedBoundedConcurrentQueue<_Piece>",
						"i": "__gnu_parallel::_QSBThreadLocal::_M_leftover_parts",
						"r": "_RestrictedBoundedConcurrentQueue<_Piece> _M_leftover_parts",
						"s": "__gnu_parallel",
						"u": "_M_LEFTOVER_PARTS",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9185d45325baf509982f1899bc0b6ef32478e62"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_threads",
						"t": "_ThreadIndex",
						"i": "__gnu_parallel::_QSBThreadLocal::_M_num_threads",
						"r": "__gnu_parallel::_ThreadIndex _M_num_threads",
						"s": "__gnu_parallel",
						"u": "_M_NUM_THREADS",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06dc7846aaba8b7d5ee74d4d597b5e2a580a1872"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_elements_leftover",
						"t": "volatile _DifferenceType *",
						"i": "__gnu_parallel::_QSBThreadLocal::_M_elements_leftover",
						"r": "volatile __gnu_parallel::_QSBThreadLocal::_DifferenceType *_M_elements_leftover",
						"s": "__gnu_parallel",
						"u": "_M_ELEMENTS_LEFTOVER",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9400412768edae3d23afff89352cc0bb277a2eb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_global",
						"t": "_Piece",
						"i": "__gnu_parallel::_QSBThreadLocal::_M_global",
						"r": "__gnu_parallel::_QSBThreadLocal::_Piece _M_global",
						"s": "__gnu_parallel",
						"u": "_M_GLOBAL",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f684d89c402842704c19950028fbb43f9e6a8e2"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_QSBThreadLocal<_RAIter>",
						"t": "void (int)",
						"i": "__gnu_parallel::_QSBThreadLocal::_QSBThreadLocal(int)",
						"r": "_QSBThreadLocal<_RAIter>(int __queue_size)",
						"s": "__gnu_parallel",
						"u": "_QSBTHREADLOCAL<_RAITER>",
						"q": "__gnu_parallel::_QSBThreadLocal",
						"w": "__GNU_PARALLEL::_QSBTHREADLOCAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0be50707dc9beb9802418c45a44850b824a368b0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__qsb_divide",
						"t": "typename std::iterator_traits<_RAIter>::difference_type (_RAIter, _RAIter, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::__qsb_divide(_RAIter,_RAIter,_Compare,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Compare> typename std::iterator_traits<_RAIter>::difference_type __qsb_divide(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__QSB_DIVIDE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b02ca6d53a1b6aa0889b9f122166c8be6bb7edba"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__qsb_conquer",
						"t": "void (_QSBThreadLocal<_RAIter> **, _RAIter, _RAIter, _Compare, _ThreadIndex, _ThreadIndex, bool)",
						"i": "__gnu_parallel::__qsb_conquer(_QSBThreadLocal**,_RAIter,_RAIter,_Compare,_ThreadIndex,_ThreadIndex,bool)",
						"r": "template <typename _RAIter, typename _Compare> void __qsb_conquer(_QSBThreadLocal<_RAIter> **__tls, _RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __iam, __gnu_parallel::_ThreadIndex __num_threads, bool __parent_wait)",
						"s": "__gnu_parallel",
						"u": "__QSB_CONQUER",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b4a7046352bd62dd7ee862ccfd083d0d5ebcf5c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__qsb_local_sort_with_helping",
						"t": "void (_QSBThreadLocal<_RAIter> **, _Compare &, _ThreadIndex, bool)",
						"i": "__gnu_parallel::__qsb_local_sort_with_helping(_QSBThreadLocal**,_Compare&,_ThreadIndex,bool)",
						"r": "template <typename _RAIter, typename _Compare> void __qsb_local_sort_with_helping(_QSBThreadLocal<_RAIter> **__tls, _Compare& __comp, __gnu_parallel::_ThreadIndex __iam, bool __wait)",
						"s": "__gnu_parallel",
						"u": "__QSB_LOCAL_SORT_WITH_HELPING",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64a58ad33cc5d0390c4a01bdae0001e629ffcbf2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_sort_qsb",
						"t": "void (_RAIter, _RAIter, _Compare, _ThreadIndex)",
						"i": "__gnu_parallel::__parallel_sort_qsb(_RAIter,_RAIter,_Compare,_ThreadIndex)",
						"r": "template <typename _RAIter, typename _Compare> void __parallel_sort_qsb(_RAIter __begin, _RAIter __end, _Compare __comp, __gnu_parallel::_ThreadIndex __num_threads)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SORT_QSB",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65bb181a004911ecf5eca8e2a277fd7b5a1f9e70"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/queue.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_QUEUE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_QUEUE_H",
						"r": "_GLIBCXX_PARALLEL_QUEUE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_QUEUE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42f5e1e04f11f2595dc45a9a1c95346d5ac2d699"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_VOLATILE",
						"t": "",
						"i": "_GLIBCXX_VOLATILE",
						"r": "_GLIBCXX_VOLATILE",
						"s": "",
						"u": "_GLIBCXX_VOLATILE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ab1dacadd6b050d03dbea2858b8f425612114e9"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_RestrictedBoundedConcurrentQueue",
						"t": "",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"r": "template <typename _Tp> _RestrictedBoundedConcurrentQueue",
						"s": "__gnu_parallel",
						"u": "_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0716d2e134e54de6445c9ce381d870d5cf8b57f4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_base",
						"t": "_Tp *",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::_M_base",
						"r": "_Tp *_M_base",
						"s": "__gnu_parallel",
						"u": "_M_BASE",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1d76e3b9e162613a8a0e24586c09afe1b019fad"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_max_size",
						"t": "_SequenceIndex",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::_M_max_size",
						"r": "__gnu_parallel::_SequenceIndex _M_max_size",
						"s": "__gnu_parallel",
						"u": "_M_MAX_SIZE",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45d644f283a70bf50a0365ccec7dab9dd3289d33"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_borders",
						"t": "volatile _CASable",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::_M_borders",
						"r": "volatile __gnu_parallel::_CASable _M_borders",
						"s": "__gnu_parallel",
						"u": "_M_BORDERS",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "949d422745647e5174b841197659c4baa9aa531c"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_RestrictedBoundedConcurrentQueue<_Tp>",
						"t": "void (_SequenceIndex)",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::_RestrictedBoundedConcurrentQueue(_SequenceIndex)",
						"r": "_RestrictedBoundedConcurrentQueue<_Tp>(__gnu_parallel::_SequenceIndex __max_size)",
						"s": "__gnu_parallel",
						"u": "_RESTRICTEDBOUNDEDCONCURRENTQUEUE<_TP>",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78a95b33bef606f83fa1aeb0a85adf4305d2b91b"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~_RestrictedBoundedConcurrentQueue<_Tp>",
						"t": "void ()",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::~_RestrictedBoundedConcurrentQueue()",
						"r": "~_RestrictedBoundedConcurrentQueue<_Tp>()",
						"s": "__gnu_parallel",
						"u": "~_RESTRICTEDBOUNDEDCONCURRENTQUEUE<_TP>",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52e44cb356ac087303a0cc227c75640b1a163f17"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "push_front",
						"t": "void (const _Tp &)",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::push_front(const _Tp&)",
						"r": "void push_front(const _Tp& __t)",
						"s": "__gnu_parallel",
						"u": "PUSH_FRONT",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "092c3c2a966c97a81b6b55624e8c1df0521deed7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "pop_front",
						"t": "bool (_Tp &)",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::pop_front(_Tp&)",
						"r": "bool pop_front(_Tp& __t)",
						"s": "__gnu_parallel",
						"u": "POP_FRONT",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83acf8cbe44b7ac37efdd6076e4ba4c548722d96"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "pop_back",
						"t": "bool (_Tp &)",
						"i": "__gnu_parallel::_RestrictedBoundedConcurrentQueue::pop_back(_Tp&)",
						"r": "bool pop_back(_Tp& __t)",
						"s": "__gnu_parallel",
						"u": "POP_BACK",
						"q": "__gnu_parallel::_RestrictedBoundedConcurrentQueue",
						"w": "__GNU_PARALLEL::_RESTRICTEDBOUNDEDCONCURRENTQUEUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fe6fec40a312065b43149ae4ca281c9ee01ea04"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/workstealing.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_WORKSTEALING_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_WORKSTEALING_H",
						"r": "_GLIBCXX_PARALLEL_WORKSTEALING_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_WORKSTEALING_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4087978ebeacfb104bd7ca1b7d2268255e2046a7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_JOB_VOLATILE",
						"t": "",
						"i": "_GLIBCXX_JOB_VOLATILE",
						"r": "_GLIBCXX_JOB_VOLATILE",
						"s": "",
						"u": "_GLIBCXX_JOB_VOLATILE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cab81636264b70a5f253f0c0f58826b7d912852"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Job",
						"t": "",
						"i": "__gnu_parallel::_Job",
						"r": "template <typename _DifferenceTp> _Job",
						"s": "__gnu_parallel",
						"u": "_JOB",
						"q": "__gnu_parallel::_Job",
						"w": "__GNU_PARALLEL::_JOB",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a2c7cfe8c9bd284f6f10ddf5fa3d7b99163454bd"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_Job::_DifferenceType",
						"i": "__gnu_parallel::_Job::_DifferenceType",
						"r": "typedef _DifferenceTp _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_Job",
						"w": "__GNU_PARALLEL::_JOB",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a9bd399321bf880e7635133fc1dedfc3be194a5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_first",
						"t": "volatile _DifferenceType",
						"i": "__gnu_parallel::_Job::_M_first",
						"r": "volatile __gnu_parallel::_Job::_DifferenceType _M_first",
						"s": "__gnu_parallel",
						"u": "_M_FIRST",
						"q": "__gnu_parallel::_Job",
						"w": "__GNU_PARALLEL::_JOB",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ac7217e1e43b237a8b82b65b8de0eecf693781e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_last",
						"t": "volatile _DifferenceType",
						"i": "__gnu_parallel::_Job::_M_last",
						"r": "volatile __gnu_parallel::_Job::_DifferenceType _M_last",
						"s": "__gnu_parallel",
						"u": "_M_LAST",
						"q": "__gnu_parallel::_Job",
						"w": "__GNU_PARALLEL::_JOB",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f025fd7ec26f50cbfa7cff57ff623020065c19f9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_load",
						"t": "volatile _DifferenceType",
						"i": "__gnu_parallel::_Job::_M_load",
						"r": "volatile __gnu_parallel::_Job::_DifferenceType _M_load",
						"s": "__gnu_parallel",
						"u": "_M_LOAD",
						"q": "__gnu_parallel::_Job",
						"w": "__GNU_PARALLEL::_JOB",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d82e96a493f1724e8b54ca331e5ac3520800266"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_template_random_access_workstealing",
						"t": "_Op (_RAIter, _RAIter, _Op, _Fu &, _Red, _Result, _Result &, typename std::iterator_traits<_RAIter>::difference_type)",
						"i": "__gnu_parallel::__for_each_template_random_access_workstealing(_RAIter,_RAIter,_Op,_Fu&,_Red,_Result,_Result&,typename std::iterator_traits::difference_type)",
						"r": "template <typename _RAIter, typename _Op, typename _Fu, typename _Red, typename _Result> _Op __for_each_template_random_access_workstealing(_RAIter __begin, _RAIter __end, _Op __op, _Fu& __f, _Red __r, _Result __base, _Result& __output, typename std::iterator_traits<_RAIter>::difference_type __bound)",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_TEMPLATE_RANDOM_ACCESS_WORKSTEALING",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36c8d3c670e0374ee5e9fc99289fe0ea51775cee"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/par_loop.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_PAR_LOOP_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_PAR_LOOP_H",
						"r": "_GLIBCXX_PARALLEL_PAR_LOOP_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_PAR_LOOP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b94ac276996d7fd4d2085bfaa884c7ab6a1b60c8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_template_random_access_ed",
						"t": "_Op (_RAIter, _RAIter, _Op, _Fu &, _Red, _Result, _Result &, typename std::iterator_traits<_RAIter>::difference_type)",
						"i": "__gnu_parallel::__for_each_template_random_access_ed(_RAIter,_RAIter,_Op,_Fu&,_Red,_Result,_Result&,typename std::iterator_traits::difference_type)",
						"r": "template <typename _RAIter, typename _Op, typename _Fu, typename _Red, typename _Result> _Op __for_each_template_random_access_ed(_RAIter __begin, _RAIter __end, _Op __o, _Fu& __f, _Red __r, _Result __base, _Result& __output, typename std::iterator_traits<_RAIter>::difference_type __bound)",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_TEMPLATE_RANDOM_ACCESS_ED",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b26e7919266f50f2c3621bfb7a2d55efaa60bcc2"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/omp_loop.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_OMP_LOOP_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_OMP_LOOP_H",
						"r": "_GLIBCXX_PARALLEL_OMP_LOOP_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_OMP_LOOP_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a594505134acc5de1703260667404663168fd54"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_template_random_access_omp_loop",
						"t": "_Op (_RAIter, _RAIter, _Op, _Fu &, _Red, _Result, _Result &, typename std::iterator_traits<_RAIter>::difference_type)",
						"i": "__gnu_parallel::__for_each_template_random_access_omp_loop(_RAIter,_RAIter,_Op,_Fu&,_Red,_Result,_Result&,typename std::iterator_traits::difference_type)",
						"r": "template <typename _RAIter, typename _Op, typename _Fu, typename _Red, typename _Result> _Op __for_each_template_random_access_omp_loop(_RAIter __begin, _RAIter __end, _Op __o, _Fu& __f, _Red __r, _Result __base, _Result& __output, typename std::iterator_traits<_RAIter>::difference_type __bound)",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_TEMPLATE_RANDOM_ACCESS_OMP_LOOP",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "170852d2cfb67596e7787f10fed5dccbe2f6e35c"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/omp_loop_static.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H",
						"r": "_GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7745f037fc25c590ccabddb1e8d6b7bcc143fa1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_template_random_access_omp_loop_static",
						"t": "_Op (_RAIter, _RAIter, _Op, _Fu &, _Red, _Result, _Result &, typename std::iterator_traits<_RAIter>::difference_type)",
						"i": "__gnu_parallel::__for_each_template_random_access_omp_loop_static(_RAIter,_RAIter,_Op,_Fu&,_Red,_Result,_Result&,typename std::iterator_traits::difference_type)",
						"r": "template <typename _RAIter, typename _Op, typename _Fu, typename _Red, typename _Result> _Op __for_each_template_random_access_omp_loop_static(_RAIter __begin, _RAIter __end, _Op __o, _Fu& __f, _Red __r, _Result __base, _Result& __output, typename std::iterator_traits<_RAIter>::difference_type __bound)",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_TEMPLATE_RANDOM_ACCESS_OMP_LOOP_STATIC",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cd67bd58e6ab9541d94d184a9720983b431ef53"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/for_each_selectors.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H",
						"r": "_GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4acc171fc6c685acdd86e85c05cb85bc276c6f1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generic_for_each_selector",
						"t": "",
						"i": "__gnu_parallel::__generic_for_each_selector",
						"r": "template <typename _It> __generic_for_each_selector",
						"s": "__gnu_parallel",
						"u": "__GENERIC_FOR_EACH_SELECTOR",
						"q": "__gnu_parallel::__generic_for_each_selector",
						"w": "__GNU_PARALLEL::__GENERIC_FOR_EACH_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "624942fb3df71a75669043db401d01fa01e498d1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_finish_iterator",
						"t": "_It",
						"i": "__gnu_parallel::__generic_for_each_selector::_M_finish_iterator",
						"r": "_It _M_finish_iterator",
						"s": "__gnu_parallel",
						"u": "_M_FINISH_ITERATOR",
						"q": "__gnu_parallel::__generic_for_each_selector",
						"w": "__GNU_PARALLEL::__GENERIC_FOR_EACH_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfcc1e78f712edee457eb4f32c3ba600223f8da4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_selector",
						"t": "",
						"i": "__gnu_parallel::__for_each_selector",
						"r": "template <typename _It> __for_each_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_SELECTOR",
						"q": "__gnu_parallel::__for_each_selector",
						"w": "__GNU_PARALLEL::__FOR_EACH_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f153a1ca2a4e371e22932ffb315ab17ad18b01c0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__for_each_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__for_each_selector",
						"w": "__GNU_PARALLEL::__FOR_EACH_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7263345f2bed496733ad034d97e6ff358e31c6f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__generate_selector",
						"t": "",
						"i": "__gnu_parallel::__generate_selector",
						"r": "template <typename _It> __generate_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__GENERATE_SELECTOR",
						"q": "__gnu_parallel::__generate_selector",
						"w": "__GNU_PARALLEL::__GENERATE_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a181a240bfd2807c0724ee55f2e5133f2a5b476"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__generate_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__generate_selector",
						"w": "__GNU_PARALLEL::__GENERATE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d6ca41d750d635671e11f84bdaca5c3eba0b031"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__fill_selector",
						"t": "",
						"i": "__gnu_parallel::__fill_selector",
						"r": "template <typename _It> __fill_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__FILL_SELECTOR",
						"q": "__gnu_parallel::__fill_selector",
						"w": "__GNU_PARALLEL::__FILL_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "099d70339cfe22d416e0ee9771a1fbcb51a87795"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_ValueType &, _It)",
						"i": "__gnu_parallel::__fill_selector::operator()(_ValueType&,_It)",
						"r": "template <typename _ValueType> bool operator()(_ValueType& __v, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__fill_selector",
						"w": "__GNU_PARALLEL::__FILL_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b36ed1e3789d4a923783360b22b6e1f72e6d2fdc"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform1_selector",
						"t": "",
						"i": "__gnu_parallel::__transform1_selector",
						"r": "template <typename _It> __transform1_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__TRANSFORM1_SELECTOR",
						"q": "__gnu_parallel::__transform1_selector",
						"w": "__GNU_PARALLEL::__TRANSFORM1_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1adb6875f81aac0207aeacdcd7ac5386d6c99a0c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__transform1_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__transform1_selector",
						"w": "__GNU_PARALLEL::__TRANSFORM1_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43b60f24623f18289366b3c24b3f7b486ffdb612"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__transform2_selector",
						"t": "",
						"i": "__gnu_parallel::__transform2_selector",
						"r": "template <typename _It> __transform2_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__TRANSFORM2_SELECTOR",
						"q": "__gnu_parallel::__transform2_selector",
						"w": "__GNU_PARALLEL::__TRANSFORM2_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a475cc494a2cbe0058e0f463049a518d3bbf8e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__transform2_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__transform2_selector",
						"w": "__GNU_PARALLEL::__TRANSFORM2_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a67dc9563786a278d4e1cffd595fe600b68db676"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_selector",
						"t": "",
						"i": "__gnu_parallel::__replace_selector",
						"r": "template <typename _It, typename _Tp> __replace_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__REPLACE_SELECTOR",
						"q": "__gnu_parallel::__replace_selector",
						"w": "__GNU_PARALLEL::__REPLACE_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1a7ad9f5bce3e577162253555a5c04cdc8fe5aae"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__new_val",
						"t": "const _Tp &",
						"i": "__gnu_parallel::__replace_selector::__new_val",
						"r": "const _Tp& __new_val",
						"s": "__gnu_parallel",
						"u": "__NEW_VAL",
						"q": "__gnu_parallel::__replace_selector",
						"w": "__GNU_PARALLEL::__REPLACE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c43ed5314e12c4e72bad52db908c504e0ca9db8d"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_selector<_It, _Tp>",
						"t": "void (const _Tp &)",
						"i": "__gnu_parallel::__replace_selector::__replace_selector(const _Tp&)",
						"r": "explicit __replace_selector<_It, _Tp>(const _Tp& __new_val)",
						"s": "__gnu_parallel",
						"u": "__REPLACE_SELECTOR<_IT, _TP>",
						"q": "__gnu_parallel::__replace_selector",
						"w": "__GNU_PARALLEL::__REPLACE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0331845cd69667c9f7d45d69c1cde83c2e05384d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Tp &, _It)",
						"i": "__gnu_parallel::__replace_selector::operator()(_Tp&,_It)",
						"r": "bool operator()(_Tp& __v, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__replace_selector",
						"w": "__GNU_PARALLEL::__REPLACE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed00c57dba4520d2630642094f948037418043c9"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_if_selector",
						"t": "",
						"i": "__gnu_parallel::__replace_if_selector",
						"r": "template <typename _It, typename _Op, typename _Tp> __replace_if_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__REPLACE_IF_SELECTOR",
						"q": "__gnu_parallel::__replace_if_selector",
						"w": "__GNU_PARALLEL::__REPLACE_IF_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27a9e5cd55da72acfd46ad47a9511780a52b1c9f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__new_val",
						"t": "const _Tp &",
						"i": "__gnu_parallel::__replace_if_selector::__new_val",
						"r": "const _Tp& __new_val",
						"s": "__gnu_parallel",
						"u": "__NEW_VAL",
						"q": "__gnu_parallel::__replace_if_selector",
						"w": "__GNU_PARALLEL::__REPLACE_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c43ed5314e12c4e72bad52db908c504e0ca9db8d"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__replace_if_selector<_It, _Op, _Tp>",
						"t": "void (const _Tp &)",
						"i": "__gnu_parallel::__replace_if_selector::__replace_if_selector(const _Tp&)",
						"r": "explicit __replace_if_selector<_It, _Op, _Tp>(const _Tp& __new_val)",
						"s": "__gnu_parallel",
						"u": "__REPLACE_IF_SELECTOR<_IT, _OP, _TP>",
						"q": "__gnu_parallel::__replace_if_selector",
						"w": "__GNU_PARALLEL::__REPLACE_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da5f1432b0d5a8f43a18a18566d8a764947d8ea2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__replace_if_selector::operator()(_Op&,_It)",
						"r": "bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__replace_if_selector",
						"w": "__GNU_PARALLEL::__REPLACE_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "433ad9627ea53bdc944e04f3ddfe301cbf9c068b"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_selector",
						"t": "",
						"i": "__gnu_parallel::__count_selector",
						"r": "template <typename _It, typename _Diff> __count_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__COUNT_SELECTOR",
						"q": "__gnu_parallel::__count_selector",
						"w": "__GNU_PARALLEL::__COUNT_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b8d8431d0c94b9967ae09c189f568da470f1f5c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Diff (_ValueType &, _It)",
						"i": "__gnu_parallel::__count_selector::operator()(_ValueType&,_It)",
						"r": "template <typename _ValueType> _Diff operator()(_ValueType& __v, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__count_selector",
						"w": "__GNU_PARALLEL::__COUNT_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b657d77465dbcc1b72025719f94bb1be48f65c9c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count_if_selector",
						"t": "",
						"i": "__gnu_parallel::__count_if_selector",
						"r": "template <typename _It, typename _Diff> __count_if_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__COUNT_IF_SELECTOR",
						"q": "__gnu_parallel::__count_if_selector",
						"w": "__GNU_PARALLEL::__COUNT_IF_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f5ba2115d2040ac37e1da7ebabf2d61adb5d76e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Diff (_Op &, _It)",
						"i": "__gnu_parallel::__count_if_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> _Diff operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__count_if_selector",
						"w": "__GNU_PARALLEL::__COUNT_IF_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0129bf5e5f9c1ea1fa4701852e53635433190a92"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__accumulate_selector",
						"t": "",
						"i": "__gnu_parallel::__accumulate_selector",
						"r": "template <typename _It> __accumulate_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__ACCUMULATE_SELECTOR",
						"q": "__gnu_parallel::__accumulate_selector",
						"w": "__GNU_PARALLEL::__ACCUMULATE_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8da050a7597389561251a2ba237c79589899894c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "typename std::iterator_traits<_It>::value_type (_Op, _It)",
						"i": "__gnu_parallel::__accumulate_selector::operator()(_Op,_It)",
						"r": "template <typename _Op> typename std::iterator_traits<_It>::value_type operator()(_Op __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__accumulate_selector",
						"w": "__GNU_PARALLEL::__ACCUMULATE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69b58a5f40beb60cc037f9a87e6ad8ee53ad1e29"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__inner_product_selector",
						"t": "",
						"i": "__gnu_parallel::__inner_product_selector",
						"r": "template <typename _It, typename _It2, typename _Tp> __inner_product_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__INNER_PRODUCT_SELECTOR",
						"q": "__gnu_parallel::__inner_product_selector",
						"w": "__GNU_PARALLEL::__INNER_PRODUCT_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbbe1a4f392d210f097de015b40422bcc9b91e82"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__begin1_iterator",
						"t": "_It",
						"i": "__gnu_parallel::__inner_product_selector::__begin1_iterator",
						"r": "_It __begin1_iterator",
						"s": "__gnu_parallel",
						"u": "__BEGIN1_ITERATOR",
						"q": "__gnu_parallel::__inner_product_selector",
						"w": "__GNU_PARALLEL::__INNER_PRODUCT_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87ad41466c44c4b46b93f982e775b0e82384d7cc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__begin2_iterator",
						"t": "_It2",
						"i": "__gnu_parallel::__inner_product_selector::__begin2_iterator",
						"r": "_It2 __begin2_iterator",
						"s": "__gnu_parallel",
						"u": "__BEGIN2_ITERATOR",
						"q": "__gnu_parallel::__inner_product_selector",
						"w": "__GNU_PARALLEL::__INNER_PRODUCT_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b2d1c830e2d8ac19d77eabf75199e52ada45bcf"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__inner_product_selector<_It, _It2, _Tp>",
						"t": "void (_It, _It2)",
						"i": "__gnu_parallel::__inner_product_selector::__inner_product_selector(_It,_It2)",
						"r": "explicit __inner_product_selector<_It, _It2, _Tp>(_It __b1, _It2 __b2)",
						"s": "__gnu_parallel",
						"u": "__INNER_PRODUCT_SELECTOR<_IT, _IT2, _TP>",
						"q": "__gnu_parallel::__inner_product_selector",
						"w": "__GNU_PARALLEL::__INNER_PRODUCT_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "841801e76a9963055da56a133686da781c92abd1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp (_Op, _It)",
						"i": "__gnu_parallel::__inner_product_selector::operator()(_Op,_It)",
						"r": "template <typename _Op> _Tp operator()(_Op __mult, _It __current)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__inner_product_selector",
						"w": "__GNU_PARALLEL::__INNER_PRODUCT_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcfcc0087659d02c28862db4caeeda4677f9dc8f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__identity_selector",
						"t": "",
						"i": "__gnu_parallel::__identity_selector",
						"r": "template <typename _It> __identity_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__IDENTITY_SELECTOR",
						"q": "__gnu_parallel::__identity_selector",
						"w": "__GNU_PARALLEL::__IDENTITY_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da75866b7df4e23067b7c90ce486b51292fca790"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_It (_Op, _It)",
						"i": "__gnu_parallel::__identity_selector::operator()(_Op,_It)",
						"r": "template <typename _Op> _It operator()(_Op __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__identity_selector",
						"w": "__GNU_PARALLEL::__IDENTITY_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c047ad74de45dc0cbea8021f5b9621876526d7d3"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__adjacent_difference_selector",
						"t": "",
						"i": "__gnu_parallel::__adjacent_difference_selector",
						"r": "template <typename _It> __adjacent_difference_selector : public __generic_for_each_selector<_It>",
						"s": "__gnu_parallel",
						"u": "__ADJACENT_DIFFERENCE_SELECTOR",
						"q": "__gnu_parallel::__adjacent_difference_selector",
						"w": "__GNU_PARALLEL::__ADJACENT_DIFFERENCE_SELECTOR",
						"y": "__gnu_parallel::__generic_for_each_selector",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1774d0eec75758b0e8b84d6e0614d3b2759d26c3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Op &, _It)",
						"i": "__gnu_parallel::__adjacent_difference_selector::operator()(_Op&,_It)",
						"r": "template <typename _Op> bool operator()(_Op& __o, _It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__adjacent_difference_selector",
						"w": "__GNU_PARALLEL::__ADJACENT_DIFFERENCE_SELECTOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95a34c9937c2cb7063666e89cbe311736966973d"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Nothing",
						"t": "__gnu_parallel::_Nothing",
						"i": "__gnu_parallel::_Nothing",
						"r": "_Nothing",
						"s": "__gnu_parallel",
						"u": "_NOTHING",
						"q": "__gnu_parallel::_Nothing",
						"w": "__GNU_PARALLEL::_NOTHING",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b49c6099c0582f2e55c7d723672800611038084"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (_It)",
						"i": "__gnu_parallel::_Nothing::operator()(_It)",
						"r": "template <typename _It> void operator()(_It __i)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_Nothing",
						"w": "__GNU_PARALLEL::_NOTHING",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b10ee363c216f4f722c72f1f764f7e5a6d769f3c"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DummyReduct",
						"t": "__gnu_parallel::_DummyReduct",
						"i": "__gnu_parallel::_DummyReduct",
						"r": "_DummyReduct",
						"s": "__gnu_parallel",
						"u": "_DUMMYREDUCT",
						"q": "__gnu_parallel::_DummyReduct",
						"w": "__GNU_PARALLEL::_DUMMYREDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34dd41d0242484efa1403e22f02a5c19bf0dce26"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (bool, bool) const",
						"i": "__gnu_parallel::_DummyReduct::operator()(bool,bool)const",
						"r": "bool operator()(bool, bool) const",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::_DummyReduct",
						"w": "__GNU_PARALLEL::_DUMMYREDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb1765cc49ab682458e7e30da92b4bb20a3b5350"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element_reduct",
						"t": "",
						"i": "__gnu_parallel::__min_element_reduct",
						"r": "template <typename _Compare, typename _It> __min_element_reduct",
						"s": "__gnu_parallel",
						"u": "__MIN_ELEMENT_REDUCT",
						"q": "__gnu_parallel::__min_element_reduct",
						"w": "__GNU_PARALLEL::__MIN_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c22f732a1dff82eab27bfd8092a2d8f9f868051"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::__min_element_reduct::__comp",
						"r": "_Compare& __comp",
						"s": "__gnu_parallel",
						"u": "__COMP",
						"q": "__gnu_parallel::__min_element_reduct",
						"w": "__GNU_PARALLEL::__MIN_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "878f4f4d4e92e2e3895d8ffc004eedcbf0a700ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__min_element_reduct<_Compare, _It>",
						"t": "void (_Compare &)",
						"i": "__gnu_parallel::__min_element_reduct::__min_element_reduct(_Compare&)",
						"r": "explicit __min_element_reduct<_Compare, _It>(_Compare& __c)",
						"s": "__gnu_parallel",
						"u": "__MIN_ELEMENT_REDUCT<_COMPARE, _IT>",
						"q": "__gnu_parallel::__min_element_reduct",
						"w": "__GNU_PARALLEL::__MIN_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6aad405dbcd7024fe6b417fceeaf5a48abd238e8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_It (_It, _It)",
						"i": "__gnu_parallel::__min_element_reduct::operator()(_It,_It)",
						"r": "_It operator()(_It __x, _It __y)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__min_element_reduct",
						"w": "__GNU_PARALLEL::__MIN_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6eed4f68bf399cf0e2ce718aff4593baa9d55f4c"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__max_element_reduct",
						"t": "",
						"i": "__gnu_parallel::__max_element_reduct",
						"r": "template <typename _Compare, typename _It> __max_element_reduct",
						"s": "__gnu_parallel",
						"u": "__MAX_ELEMENT_REDUCT",
						"q": "__gnu_parallel::__max_element_reduct",
						"w": "__GNU_PARALLEL::__MAX_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d5991817a38bd159967498702a5da4705fa8a8b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__comp",
						"t": "_Compare &",
						"i": "__gnu_parallel::__max_element_reduct::__comp",
						"r": "_Compare& __comp",
						"s": "__gnu_parallel",
						"u": "__COMP",
						"q": "__gnu_parallel::__max_element_reduct",
						"w": "__GNU_PARALLEL::__MAX_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "878f4f4d4e92e2e3895d8ffc004eedcbf0a700ee"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__max_element_reduct<_Compare, _It>",
						"t": "void (_Compare &)",
						"i": "__gnu_parallel::__max_element_reduct::__max_element_reduct(_Compare&)",
						"r": "explicit __max_element_reduct<_Compare, _It>(_Compare& __c)",
						"s": "__gnu_parallel",
						"u": "__MAX_ELEMENT_REDUCT<_COMPARE, _IT>",
						"q": "__gnu_parallel::__max_element_reduct",
						"w": "__GNU_PARALLEL::__MAX_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96a179dc5f8093ce1d761554f307405915d4af18"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_It (_It, _It)",
						"i": "__gnu_parallel::__max_element_reduct::operator()(_It,_It)",
						"r": "_It operator()(_It __x, _It __y)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__max_element_reduct",
						"w": "__GNU_PARALLEL::__MAX_ELEMENT_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50b85dafbebd58a025c35244e6c91ff158e79f66"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__accumulate_binop_reduct",
						"t": "",
						"i": "__gnu_parallel::__accumulate_binop_reduct",
						"r": "template <typename _BinOp> __accumulate_binop_reduct",
						"s": "__gnu_parallel",
						"u": "__ACCUMULATE_BINOP_REDUCT",
						"q": "__gnu_parallel::__accumulate_binop_reduct",
						"w": "__GNU_PARALLEL::__ACCUMULATE_BINOP_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe9817faf958fad6195a955517b8229175130cb6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__binop",
						"t": "_BinOp &",
						"i": "__gnu_parallel::__accumulate_binop_reduct::__binop",
						"r": "_BinOp& __binop",
						"s": "__gnu_parallel",
						"u": "__BINOP",
						"q": "__gnu_parallel::__accumulate_binop_reduct",
						"w": "__GNU_PARALLEL::__ACCUMULATE_BINOP_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e31e8dc2d740a6a73bbf01e5d5ef80df1a59453"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__accumulate_binop_reduct<_BinOp>",
						"t": "void (_BinOp &)",
						"i": "__gnu_parallel::__accumulate_binop_reduct::__accumulate_binop_reduct(_BinOp&)",
						"r": "explicit __accumulate_binop_reduct<_BinOp>(_BinOp& __b)",
						"s": "__gnu_parallel",
						"u": "__ACCUMULATE_BINOP_REDUCT<_BINOP>",
						"q": "__gnu_parallel::__accumulate_binop_reduct",
						"w": "__GNU_PARALLEL::__ACCUMULATE_BINOP_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a142f8266cd53a4a84e559884ba61322dcefe68"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Result (const _Result &, const _Addend &)",
						"i": "__gnu_parallel::__accumulate_binop_reduct::operator()(const _Result&,const _Addend&)",
						"r": "template <typename _Result, typename _Addend> _Result operator()(const _Result& __x, const _Addend& __y)",
						"s": "__gnu_parallel",
						"u": "OPERATOR()",
						"q": "__gnu_parallel::__accumulate_binop_reduct",
						"w": "__GNU_PARALLEL::__ACCUMULATE_BINOP_REDUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a29d69657da3414bea52293f1a86763ca282698"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/for_each.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_FOR_EACH_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_FOR_EACH_H",
						"r": "_GLIBCXX_PARALLEL_FOR_EACH_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_FOR_EACH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "877dc8ea491a8887e17c90dd89ca5357658ad032"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_template_random_access",
						"t": "_UserOp (_IIter, _IIter, _UserOp, _Functionality &, _Red, _Result, _Result &, typename std::iterator_traits<_IIter>::difference_type, _Parallelism)",
						"i": "__gnu_parallel::__for_each_template_random_access(_IIter,_IIter,_UserOp,_Functionality&,_Red,_Result,_Result&,typename std::iterator_traits::difference_type,_Parallelism)",
						"r": "template <typename _IIter, typename _UserOp, typename _Functionality, typename _Red, typename _Result> _UserOp __for_each_template_random_access(_IIter __begin, _IIter __end, _UserOp __user_op, _Functionality& __functionality, _Red __reduction, _Result __reduction_start, _Result& __output, typename std::iterator_traits<_IIter>::difference_type __bound, __gnu_parallel::_Parallelism __parallelism_tag)",
						"s": "__gnu_parallel",
						"u": "__FOR_EACH_TEMPLATE_RANDOM_ACCESS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7c34419fb7fe9101fa80c5da4104ed0eb73c75d4"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/search.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_SEARCH_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_SEARCH_H",
						"r": "_GLIBCXX_PARALLEL_SEARCH_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_SEARCH_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54994cdfc92c7e4db27503a4a023fd6c9563e0ee"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__calc_borders",
						"t": "void (_RAIter, _DifferenceTp, _DifferenceTp *)",
						"i": "__gnu_parallel::__calc_borders(_RAIter,_DifferenceTp,_DifferenceTp*)",
						"r": "template <typename _RAIter, typename _DifferenceTp> void __calc_borders(_RAIter __elements, _DifferenceTp __length, _DifferenceTp *__off)",
						"s": "__gnu_parallel",
						"u": "__CALC_BORDERS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37bed7e73970d49b6216392dbdfb12b816bc520d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__search_template",
						"t": "__RAIter1 (__RAIter1, __RAIter1, __RAIter2, __RAIter2, _Pred)",
						"i": "__gnu_parallel::__search_template(__RAIter1,__RAIter1,__RAIter2,__RAIter2,_Pred)",
						"r": "template <typename __RAIter1, typename __RAIter2, typename _Pred> __RAIter1 __search_template(__RAIter1 __begin1, __RAIter1 __end1, __RAIter2 __begin2, __RAIter2 __end2, _Pred __pred)",
						"s": "__gnu_parallel",
						"u": "__SEARCH_TEMPLATE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a4a9ee8ccb65eadc45794035d3e0c6c22866346"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/random_shuffle.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H",
						"r": "_GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35c8ef20fbd8a09173d158f4b495c971091de363"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_BinIndex",
						"t": "__gnu_parallel::_BinIndex",
						"i": "__gnu_parallel::_BinIndex",
						"r": "typedef unsigned short _BinIndex",
						"s": "__gnu_parallel",
						"u": "_BININDEX",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d68803ecf014a210bf5e4173733cef95ea3b56b2"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DRandomShufflingGlobalData",
						"t": "",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData",
						"r": "template <typename _RAIter> _DRandomShufflingGlobalData",
						"s": "__gnu_parallel",
						"u": "_DRANDOMSHUFFLINGGLOBALDATA",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c78ba89b6c4bb0aa756d6df6edbbfdffa7968682"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::_DRandomShufflingGlobalData::_TraitsType",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_TraitsType",
						"r": "typedef iterator_traits<_RAIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c511a79b6a35534dba687e3679bd5fdf8f97e026"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_ValueType",
						"t": "__gnu_parallel::_DRandomShufflingGlobalData::_ValueType",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_ValueType",
						"r": "typedef typename _TraitsType::value_type _ValueType",
						"s": "__gnu_parallel",
						"u": "_VALUETYPE",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2130774d7677924c91c4b61f63b21c10029f5423"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::_DRandomShufflingGlobalData::_DifferenceType",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_source",
						"t": "_RAIter &",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_source",
						"r": "_RAIter& _M_source",
						"s": "__gnu_parallel",
						"u": "_M_SOURCE",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a08e1903b3256e9113d9df0d12a84e177722ee46"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_temporaries",
						"t": "_ValueType **",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_temporaries",
						"r": "__gnu_parallel::_DRandomShufflingGlobalData::_ValueType **_M_temporaries",
						"s": "__gnu_parallel",
						"u": "_M_TEMPORARIES",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9c2823d9dd55713b5d807ccec886d548fe3f490"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_dist",
						"t": "_DifferenceType **",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_dist",
						"r": "__gnu_parallel::_DRandomShufflingGlobalData::_DifferenceType **_M_dist",
						"s": "__gnu_parallel",
						"u": "_M_DIST",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a48cce122e91f5bcccc7fe0af97bc694328452dc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_starts",
						"t": "_DifferenceType *",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_starts",
						"r": "__gnu_parallel::_DRandomShufflingGlobalData::_DifferenceType *_M_starts",
						"s": "__gnu_parallel",
						"u": "_M_STARTS",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a5f77417f28b5fd8a7b5fd9177c8f8527ecb3c9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_bin_proc",
						"t": "_ThreadIndex *",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_bin_proc",
						"r": "__gnu_parallel::_ThreadIndex *_M_bin_proc",
						"s": "__gnu_parallel",
						"u": "_M_BIN_PROC",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a05ee29095a60f908419447861fe67f25953c4f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_bins",
						"t": "int",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_num_bins",
						"r": "int _M_num_bins",
						"s": "__gnu_parallel",
						"u": "_M_NUM_BINS",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3919584970ecbd4189030eeb5a764c60e8adffb8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_bits",
						"t": "int",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_M_num_bits",
						"r": "int _M_num_bits",
						"s": "__gnu_parallel",
						"u": "_M_NUM_BITS",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9999d614b12a4203d775e2f101ad8ee833745187"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DRandomShufflingGlobalData<_RAIter>",
						"t": "void (_RAIter &)",
						"i": "__gnu_parallel::_DRandomShufflingGlobalData::_DRandomShufflingGlobalData(_RAIter&)",
						"r": "_DRandomShufflingGlobalData<_RAIter>(_RAIter& __source)",
						"s": "__gnu_parallel",
						"u": "_DRANDOMSHUFFLINGGLOBALDATA<_RAITER>",
						"q": "__gnu_parallel::_DRandomShufflingGlobalData",
						"w": "__GNU_PARALLEL::_DRANDOMSHUFFLINGGLOBALDATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "763f3f0e0a5c5866d8882a0079c3cf91557360fc"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DRSSorterPU",
						"t": "",
						"i": "__gnu_parallel::_DRSSorterPU",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> _DRSSorterPU",
						"s": "__gnu_parallel",
						"u": "_DRSSORTERPU",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "243e9b90abc4bb3d73fbb5be240afeb27ccb7c39"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_num_threads",
						"t": "int",
						"i": "__gnu_parallel::_DRSSorterPU::_M_num_threads",
						"r": "int _M_num_threads",
						"s": "__gnu_parallel",
						"u": "_M_NUM_THREADS",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94aad96db9a098fd12c2c401eaabb89598facd78"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_bins_begin",
						"t": "_BinIndex",
						"i": "__gnu_parallel::_DRSSorterPU::_M_bins_begin",
						"r": "__gnu_parallel::_BinIndex _M_bins_begin",
						"s": "__gnu_parallel",
						"u": "_M_BINS_BEGIN",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e377454641a0946390c17ab0cfa0df45856209c1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bins_end",
						"t": "_BinIndex",
						"i": "__gnu_parallel::_DRSSorterPU::__bins_end",
						"r": "__gnu_parallel::_BinIndex __bins_end",
						"s": "__gnu_parallel",
						"u": "__BINS_END",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e43c0d8fac55b215e81d1da49c77d15744b980ba"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_seed",
						"t": "uint32_t",
						"i": "__gnu_parallel::_DRSSorterPU::_M_seed",
						"r": "uint32_t _M_seed",
						"s": "__gnu_parallel",
						"u": "_M_SEED",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9d4b2beb170ff86e5c63146b2165545c946495d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_sd",
						"t": "_DRandomShufflingGlobalData<_RAIter> *",
						"i": "__gnu_parallel::_DRSSorterPU::_M_sd",
						"r": "_DRandomShufflingGlobalData<_RAIter> *_M_sd",
						"s": "__gnu_parallel",
						"u": "_M_SD",
						"q": "__gnu_parallel::_DRSSorterPU",
						"w": "__GNU_PARALLEL::_DRSSORTERPU",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66baadd19079cbf08afa71d8de31918a692e43e5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__random_number_pow2",
						"t": "int (int, _RandomNumberGenerator &)",
						"i": "__gnu_parallel::__random_number_pow2(int,_RandomNumberGenerator&)",
						"r": "template <typename _RandomNumberGenerator> int __random_number_pow2(int __logp, _RandomNumberGenerator& __rng)",
						"s": "__gnu_parallel",
						"u": "__RANDOM_NUMBER_POW2",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db94eac84265f63a754c05fa110acfdd2d63c4f3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_random_shuffle_drs_pu",
						"t": "void (_DRSSorterPU<_RAIter, _RandomNumberGenerator> *)",
						"i": "__gnu_parallel::__parallel_random_shuffle_drs_pu(_DRSSorterPU*)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void __parallel_random_shuffle_drs_pu(_DRSSorterPU<_RAIter, _RandomNumberGenerator> *__pus)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_RANDOM_SHUFFLE_DRS_PU",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17ba053753b6e0fcb1839a9236debbb54ccf3b54"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__round_up_to_pow2",
						"t": "_Tp (_Tp)",
						"i": "__gnu_parallel::__round_up_to_pow2(_Tp)",
						"r": "template <typename _Tp> _Tp __round_up_to_pow2(_Tp __x)",
						"s": "__gnu_parallel",
						"u": "__ROUND_UP_TO_POW2",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28e2ea91bd16be306e9fd180915015cade11c141"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_random_shuffle_drs",
						"t": "void (_RAIter, _RAIter, typename std::iterator_traits<_RAIter>::difference_type, _ThreadIndex, _RandomNumberGenerator &)",
						"i": "__gnu_parallel::__parallel_random_shuffle_drs(_RAIter,_RAIter,typename std::iterator_traits::difference_type,_ThreadIndex,_RandomNumberGenerator&)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void __parallel_random_shuffle_drs(_RAIter __begin, _RAIter __end, typename std::iterator_traits<_RAIter>::difference_type __n, __gnu_parallel::_ThreadIndex __num_threads, _RandomNumberGenerator& __rng)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_RANDOM_SHUFFLE_DRS",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f21b527ad36ed0c307bc358871088c0b7e780a1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__sequential_random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator &)",
						"i": "__gnu_parallel::__sequential_random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator&)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void __sequential_random_shuffle(_RAIter __begin, _RAIter __end, _RandomNumberGenerator& __rng)",
						"s": "__gnu_parallel",
						"u": "__SEQUENTIAL_RANDOM_SHUFFLE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "121903627b1b5728262f7c57fd1f40a3d957bb4a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_random_shuffle",
						"t": "void (_RAIter, _RAIter, _RandomNumberGenerator)",
						"i": "__gnu_parallel::__parallel_random_shuffle(_RAIter,_RAIter,_RandomNumberGenerator)",
						"r": "template <typename _RAIter, typename _RandomNumberGenerator> void __parallel_random_shuffle(_RAIter __begin, _RAIter __end, _RandomNumberGenerator __rng = __gnu_parallel::_RandomNumber())",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_RANDOM_SHUFFLE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "907ad71fc707b3ba06f5d5d3c2ab7838d5fe7987"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/merge.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_MERGE_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_MERGE_H",
						"r": "_GLIBCXX_PARALLEL_MERGE_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_MERGE_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c0eec62c64054ae812a81d6baa9848de6adfb1a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__merge_advance_usual",
						"t": "_OutputIterator (_RAIter1 &, _RAIter1, _RAIter2 &, _RAIter2, _OutputIterator, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__merge_advance_usual(_RAIter1&,_RAIter1,_RAIter2&,_RAIter2,_OutputIterator,_DifferenceTp,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _OutputIterator, typename _DifferenceTp, typename _Compare> _OutputIterator __merge_advance_usual(_RAIter1& __begin1, _RAIter1 __end1, _RAIter2& __begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__MERGE_ADVANCE_USUAL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8521ce8bdd892ea8f770d35fc893b4bf1deef861"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__merge_advance_movc",
						"t": "_OutputIterator (_RAIter1 &, _RAIter1, _RAIter2 &, _RAIter2, _OutputIterator, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__merge_advance_movc(_RAIter1&,_RAIter1,_RAIter2&,_RAIter2,_OutputIterator,_DifferenceTp,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _OutputIterator, typename _DifferenceTp, typename _Compare> _OutputIterator __merge_advance_movc(_RAIter1& __begin1, _RAIter1 __end1, _RAIter2& __begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__MERGE_ADVANCE_MOVC",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71bf42d5ffa9c8111cb94eefa1c12468f619b244"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__merge_advance",
						"t": "_OutputIterator (_RAIter1 &, _RAIter1, _RAIter2 &, _RAIter2, _OutputIterator, _DifferenceTp, _Compare)",
						"i": "__gnu_parallel::__merge_advance(_RAIter1&,_RAIter1,_RAIter2&,_RAIter2,_OutputIterator,_DifferenceTp,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _OutputIterator, typename _DifferenceTp, typename _Compare> _OutputIterator __merge_advance(_RAIter1& __begin1, _RAIter1 __end1, _RAIter2& __begin2, _RAIter2 __end2, _OutputIterator __target, _DifferenceTp __max_length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__MERGE_ADVANCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a760a61ad3c331735b3d138ad64c3bde71be5a2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_merge_advance",
						"t": "_RAIter3 (_RAIter1 &, _RAIter1, _RAIter2 &, _RAIter2, _RAIter3, typename std::iterator_traits<_RAIter1>::difference_type, _Compare)",
						"i": "__gnu_parallel::__parallel_merge_advance(_RAIter1&,_RAIter1,_RAIter2&,_RAIter2,_RAIter3,typename std::iterator_traits::difference_type,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter2, typename _RAIter3, typename _Compare> _RAIter3 __parallel_merge_advance(_RAIter1& __begin1, _RAIter1 __end1, _RAIter2& __begin2, _RAIter2 __end2, _RAIter3 __target, typename std::iterator_traits<_RAIter1>::difference_type __max_length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_MERGE_ADVANCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99766deacc2309ae81a8f687926d5de55fa4ad03"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_merge_advance",
						"t": "_RAIter3 (_RAIter1 &, _RAIter1, _RAIter1 &, _RAIter1, _RAIter3, typename std::iterator_traits<_RAIter1>::difference_type, _Compare)",
						"i": "__gnu_parallel::__parallel_merge_advance(_RAIter1&,_RAIter1,_RAIter1&,_RAIter1,_RAIter3,typename std::iterator_traits::difference_type,_Compare)",
						"r": "template <typename _RAIter1, typename _RAIter3, typename _Compare> _RAIter3 __parallel_merge_advance(_RAIter1& __begin1, _RAIter1 __end1, _RAIter1& __begin2, _RAIter1 __end2, _RAIter3 __target, typename std::iterator_traits<_RAIter1>::difference_type __max_length, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_MERGE_ADVANCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0acceba8f7321652bffbc99da3f57f51e650de6"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/unique_copy.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_UNIQUE_COPY_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_UNIQUE_COPY_H",
						"r": "_GLIBCXX_PARALLEL_UNIQUE_COPY_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_UNIQUE_COPY_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8132f472815e7bd1c1f0b651a9b54170ce9ee346"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator, _BinaryPredicate)",
						"i": "__gnu_parallel::__parallel_unique_copy(_IIter,_IIter,_OutputIterator,_BinaryPredicate)",
						"r": "template <typename _IIter, class _OutputIterator, class _BinaryPredicate> _OutputIterator __parallel_unique_copy(_IIter __first, _IIter __last, _OutputIterator __result, _BinaryPredicate __binary_pred)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_UNIQUE_COPY",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e916963670b717b1dbd9045d08dcdd1ff13253f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_unique_copy",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator)",
						"i": "__gnu_parallel::__parallel_unique_copy(_IIter,_IIter,_OutputIterator)",
						"r": "template <typename _IIter, class _OutputIterator> _OutputIterator __parallel_unique_copy(_IIter __first, _IIter __last, _OutputIterator __result)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_UNIQUE_COPY",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b39639b144ba9af84631b680a45e1adcd02eb24"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/set_operations.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_SET_OPERATIONS_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_SET_OPERATIONS_H",
						"r": "_GLIBCXX_PARALLEL_SET_OPERATIONS_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_SET_OPERATIONS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6d9e2488a1ed92e2484e1132ee96b1fc9f4c8b7e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__copy_tail",
						"t": "_OutputIterator (std::pair<_IIter, _IIter>, std::pair<_IIter, _IIter>, _OutputIterator)",
						"i": "__gnu_parallel::__copy_tail(std::pair,std::pair,_OutputIterator)",
						"r": "template <typename _IIter, typename _OutputIterator> _OutputIterator __copy_tail(pair<_IIter, _IIter> __b, pair<_IIter, _IIter> __e, _OutputIterator __r)",
						"s": "__gnu_parallel",
						"u": "__COPY_TAIL",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "070ae6d50424dbf8fa7c8df7bbb3584489da0341"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__symmetric_difference_func",
						"t": "",
						"i": "__gnu_parallel::__symmetric_difference_func",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> __symmetric_difference_func",
						"s": "__gnu_parallel",
						"u": "__SYMMETRIC_DIFFERENCE_FUNC",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b633e826d2cc54841fa52542f92821a0bd3be142"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::__symmetric_difference_func::_TraitsType",
						"i": "__gnu_parallel::__symmetric_difference_func::_TraitsType",
						"r": "typedef iterator_traits<_IIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a47d31a150e00c6921ad22f3724d6579c3ae04a9"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::__symmetric_difference_func::_DifferenceType",
						"i": "__gnu_parallel::__symmetric_difference_func::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair",
						"t": "__gnu_parallel::__symmetric_difference_func::_IteratorPair",
						"i": "__gnu_parallel::__symmetric_difference_func::_IteratorPair",
						"r": "typedef typename pair<_IIter, _IIter> _IteratorPair",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51ab1f937d4d871d5d8cfc1c0cafa3ad86983f68"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__symmetric_difference_func<_IIter, _OutputIterator, _Compare>",
						"t": "void (_Compare)",
						"i": "__gnu_parallel::__symmetric_difference_func::__symmetric_difference_func(_Compare)",
						"r": "__symmetric_difference_func<_IIter, _OutputIterator, _Compare>(_Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__SYMMETRIC_DIFFERENCE_FUNC<_IITER, _OUTPUTITERATOR, _COMPARE>",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e62b85e60f1b457467c642301ff743fc1e077158"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::__symmetric_difference_func::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_invoke",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__symmetric_difference_func::_M_invoke(_IIter,_IIter,_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const",
						"s": "__gnu_parallel",
						"u": "_M_INVOKE",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73222e36b0162956710db3d344a970d5e5a66361"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "_DifferenceType (_IIter, _IIter, _IIter, _IIter) const",
						"i": "__gnu_parallel::__symmetric_difference_func::__count(_IIter,_IIter,_IIter,_IIter)const",
						"r": "__gnu_parallel::__symmetric_difference_func::_DifferenceType __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const",
						"s": "__gnu_parallel",
						"u": "__COUNT",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a3eea6ca73e3f58c3717142112d1f89f4277b97"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__symmetric_difference_func::__first_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__FIRST_EMPTY",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bdfcb942b2b08f8efbcae4b5445179471c340b7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__second_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__symmetric_difference_func::__second_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__SECOND_EMPTY",
						"q": "__gnu_parallel::__symmetric_difference_func",
						"w": "__GNU_PARALLEL::__SYMMETRIC_DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2eb64955b902d379055b06182501f10640368c4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__difference_func",
						"t": "",
						"i": "__gnu_parallel::__difference_func",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> __difference_func",
						"s": "__gnu_parallel",
						"u": "__DIFFERENCE_FUNC",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87e0ee1ae28e76b60aac2c8166aeb50a91d09935"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::__difference_func::_TraitsType",
						"i": "__gnu_parallel::__difference_func::_TraitsType",
						"r": "typedef iterator_traits<_IIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a47d31a150e00c6921ad22f3724d6579c3ae04a9"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::__difference_func::_DifferenceType",
						"i": "__gnu_parallel::__difference_func::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair",
						"t": "__gnu_parallel::__difference_func::_IteratorPair",
						"i": "__gnu_parallel::__difference_func::_IteratorPair",
						"r": "typedef typename pair<_IIter, _IIter> _IteratorPair",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51ab1f937d4d871d5d8cfc1c0cafa3ad86983f68"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__difference_func<_IIter, _OutputIterator, _Compare>",
						"t": "void (_Compare)",
						"i": "__gnu_parallel::__difference_func::__difference_func(_Compare)",
						"r": "__difference_func<_IIter, _OutputIterator, _Compare>(_Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__DIFFERENCE_FUNC<_IITER, _OUTPUTITERATOR, _COMPARE>",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd358bb79738e384ac25eabdbb4a39b7adb1c6c6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::__difference_func::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_invoke",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__difference_func::_M_invoke(_IIter,_IIter,_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const",
						"s": "__gnu_parallel",
						"u": "_M_INVOKE",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5de80c995d96de7b52745a54654db73f50debd61"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "_DifferenceType (_IIter, _IIter, _IIter, _IIter) const",
						"i": "__gnu_parallel::__difference_func::__count(_IIter,_IIter,_IIter,_IIter)const",
						"r": "__gnu_parallel::__difference_func::_DifferenceType __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const",
						"s": "__gnu_parallel",
						"u": "__COUNT",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4b8255ce5033910ac3dc8ee797fa251cf5df4c8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__difference_func::__first_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __first_empty(_IIter, _IIter, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__FIRST_EMPTY",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e35140ae8508b471e399dce5f863af9b1ec2ff60"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__second_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__difference_func::__second_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__SECOND_EMPTY",
						"q": "__gnu_parallel::__difference_func",
						"w": "__GNU_PARALLEL::__DIFFERENCE_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2eb64955b902d379055b06182501f10640368c4"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__intersection_func",
						"t": "",
						"i": "__gnu_parallel::__intersection_func",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> __intersection_func",
						"s": "__gnu_parallel",
						"u": "__INTERSECTION_FUNC",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b878ed0eca2177ef4f6b84cd4907b642ab700df"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_TraitsType",
						"t": "__gnu_parallel::__intersection_func::_TraitsType",
						"i": "__gnu_parallel::__intersection_func::_TraitsType",
						"r": "typedef iterator_traits<_IIter> _TraitsType",
						"s": "__gnu_parallel",
						"u": "_TRAITSTYPE",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a47d31a150e00c6921ad22f3724d6579c3ae04a9"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::__intersection_func::_DifferenceType",
						"i": "__gnu_parallel::__intersection_func::_DifferenceType",
						"r": "typedef typename _TraitsType::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0c099db0068506b5c3167ce5e50082728492b4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_IteratorPair",
						"t": "__gnu_parallel::__intersection_func::_IteratorPair",
						"i": "__gnu_parallel::__intersection_func::_IteratorPair",
						"r": "typedef typename pair<_IIter, _IIter> _IteratorPair",
						"s": "__gnu_parallel",
						"u": "_ITERATORPAIR",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51ab1f937d4d871d5d8cfc1c0cafa3ad86983f68"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__intersection_func<_IIter, _OutputIterator, _Compare>",
						"t": "void (_Compare)",
						"i": "__gnu_parallel::__intersection_func::__intersection_func(_Compare)",
						"r": "__intersection_func<_IIter, _OutputIterator, _Compare>(_Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__INTERSECTION_FUNC<_IITER, _OUTPUTITERATOR, _COMPARE>",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e20e6608627821060502f7b812147cba592cd213"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::__intersection_func::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_invoke",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__intersection_func::_M_invoke(_IIter,_IIter,_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d, _OutputIterator __r) const",
						"s": "__gnu_parallel",
						"u": "_M_INVOKE",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "708d741f8f384dbea383a07c46b96f84ce34a090"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "_DifferenceType (_IIter, _IIter, _IIter, _IIter) const",
						"i": "__gnu_parallel::__intersection_func::__count(_IIter,_IIter,_IIter,_IIter)const",
						"r": "__gnu_parallel::__intersection_func::_DifferenceType __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const",
						"s": "__gnu_parallel",
						"u": "__COUNT",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de4c3d3662dbc2670108db5049a6915cfea56276"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__intersection_func::__first_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __first_empty(_IIter, _IIter, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__FIRST_EMPTY",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e35140ae8508b471e399dce5f863af9b1ec2ff60"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__second_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__intersection_func::__second_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __second_empty(_IIter, _IIter, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__SECOND_EMPTY",
						"q": "__gnu_parallel::__intersection_func",
						"w": "__GNU_PARALLEL::__INTERSECTION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c8ecc88e2a0811c601cb07f3e75801612f6ddec"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__union_func",
						"t": "",
						"i": "__gnu_parallel::__union_func",
						"r": "template <class _IIter, class _OutputIterator, class _Compare> __union_func",
						"s": "__gnu_parallel",
						"u": "__UNION_FUNC",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3feeb7986f1f9919b6ef8056866b3933316c5a1"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_DifferenceType",
						"t": "__gnu_parallel::__union_func::_DifferenceType",
						"i": "__gnu_parallel::__union_func::_DifferenceType",
						"r": "typedef typename std::iterator_traits<_IIter>::difference_type _DifferenceType",
						"s": "__gnu_parallel",
						"u": "_DIFFERENCETYPE",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5fd8031a1bc2a270ec932782613f8c3026f8dcd8"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__union_func<_IIter, _OutputIterator, _Compare>",
						"t": "void (_Compare)",
						"i": "__gnu_parallel::__union_func::__union_func(_Compare)",
						"r": "__union_func<_IIter, _OutputIterator, _Compare>(_Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__UNION_FUNC<_IITER, _OUTPUTITERATOR, _COMPARE>",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8c504b4169b1cbdbac484725960a36bc56be60d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_comp",
						"t": "_Compare",
						"i": "__gnu_parallel::__union_func::_M_comp",
						"r": "_Compare _M_comp",
						"s": "__gnu_parallel",
						"u": "_M_COMP",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3da8104c55a44ff107cfbe27cb390111d7482c6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_invoke",
						"t": "_OutputIterator (_IIter, const _IIter, _IIter, const _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__union_func::_M_invoke(_IIter,const _IIter,_IIter,const _IIter,_OutputIterator)const",
						"r": "_OutputIterator _M_invoke(_IIter __a, const _IIter __b, _IIter __c, const _IIter __d, _OutputIterator __r) const",
						"s": "__gnu_parallel",
						"u": "_M_INVOKE",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe337943c768839d36ceb9b30e57f289b55eab6f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__count",
						"t": "_DifferenceType (_IIter, _IIter, _IIter, _IIter) const",
						"i": "__gnu_parallel::__union_func::__count(_IIter,_IIter,_IIter,_IIter)const",
						"r": "__gnu_parallel::__union_func::_DifferenceType __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const",
						"s": "__gnu_parallel",
						"u": "__COUNT",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bcf5a4c859726df554a7afe672dd8a36a6d2774"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__first_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__union_func::__first_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__FIRST_EMPTY",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bdfcb942b2b08f8efbcae4b5445179471c340b7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__second_empty",
						"t": "_OutputIterator (_IIter, _IIter, _OutputIterator) const",
						"i": "__gnu_parallel::__union_func::__second_empty(_IIter,_IIter,_OutputIterator)const",
						"r": "_OutputIterator __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const",
						"s": "__gnu_parallel",
						"u": "__SECOND_EMPTY",
						"q": "__gnu_parallel::__union_func",
						"w": "__GNU_PARALLEL::__UNION_FUNC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2eb64955b902d379055b06182501f10640368c4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_operation",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator, _Operation)",
						"i": "__gnu_parallel::__parallel_set_operation(_IIter,_IIter,_IIter,_IIter,_OutputIterator,_Operation)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Operation> _OutputIterator __parallel_set_operation(_IIter __begin1, _IIter __end1, _IIter __begin2, _IIter __end2, _OutputIterator __result, _Operation __op)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SET_OPERATION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eacb5dbbea85eb8bbecd2dda08a3792d9b771ea4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_union",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator, _Compare)",
						"i": "__gnu_parallel::__parallel_set_union(_IIter,_IIter,_IIter,_IIter,_OutputIterator,_Compare)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> _OutputIterator __parallel_set_union(_IIter __begin1, _IIter __end1, _IIter __begin2, _IIter __end2, _OutputIterator __result, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SET_UNION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "309e058acb2b86f72f5417d9825e0db25b862768"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_intersection",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator, _Compare)",
						"i": "__gnu_parallel::__parallel_set_intersection(_IIter,_IIter,_IIter,_IIter,_OutputIterator,_Compare)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> _OutputIterator __parallel_set_intersection(_IIter __begin1, _IIter __end1, _IIter __begin2, _IIter __end2, _OutputIterator __result, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SET_INTERSECTION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac62e22488552bff5000f13f111d0fa94507c8c4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_difference",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator, _Compare)",
						"i": "__gnu_parallel::__parallel_set_difference(_IIter,_IIter,_IIter,_IIter,_OutputIterator,_Compare)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> _OutputIterator __parallel_set_difference(_IIter __begin1, _IIter __end1, _IIter __begin2, _IIter __end2, _OutputIterator __result, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SET_DIFFERENCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2802647aed9c9672b72fc9b599cd2ddc28f93ba"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_symmetric_difference",
						"t": "_OutputIterator (_IIter, _IIter, _IIter, _IIter, _OutputIterator, _Compare)",
						"i": "__gnu_parallel::__parallel_set_symmetric_difference(_IIter,_IIter,_IIter,_IIter,_OutputIterator,_Compare)",
						"r": "template <typename _IIter, typename _OutputIterator, typename _Compare> _OutputIterator __parallel_set_symmetric_difference(_IIter __begin1, _IIter __end1, _IIter __begin2, _IIter __end2, _OutputIterator __result, _Compare __comp)",
						"s": "__gnu_parallel",
						"u": "__PARALLEL_SET_SYMMETRIC_DIFFERENCE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26ad462ab360931683dee1a4c22f1e2c8b204f49"
							}
						]
					}
				]
			}
		},
		{
			"key": "parallel/list_partition.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_GLIBCXX_PARALLEL_LIST_PARTITION_H",
						"t": "",
						"i": "_GLIBCXX_PARALLEL_LIST_PARTITION_H",
						"r": "_GLIBCXX_PARALLEL_LIST_PARTITION_H",
						"s": "",
						"u": "_GLIBCXX_PARALLEL_LIST_PARTITION_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc77568029a3c7ae17a3aceedd25d50ea291517b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__shrink_and_double",
						"t": "void (std::vector<_IIter> &, size_t &, size_t &, const bool)",
						"i": "__gnu_parallel::__shrink_and_double(std::vector&,size_t&,size_t&,const bool)",
						"r": "template <typename _IIter> void __shrink_and_double(vector<_IIter>& __os_starts, size_t& __count_to_two, size_t& __range_length, const bool __make_twice)",
						"s": "__gnu_parallel",
						"u": "__SHRINK_AND_DOUBLE",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e8c30d06746c9198c4c4a9cd43f74bbc379919d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__shrink",
						"t": "void (std::vector<_IIter> &, size_t &, size_t &)",
						"i": "__gnu_parallel::__shrink(std::vector&,size_t&,size_t&)",
						"r": "template <typename _IIter> void __shrink(vector<_IIter>& __os_starts, size_t& __count_to_two, size_t& __range_length)",
						"s": "__gnu_parallel",
						"u": "__SHRINK",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5643d02cadcdde88230843649619b5c07e0d7e22"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "list_partition",
						"t": "size_t (const _IIter, const _IIter, _IIter *, size_t *, const int, _FunctorType &, int)",
						"i": "__gnu_parallel::list_partition(const _IIter,const _IIter,_IIter*,size_t*,const int,_FunctorType&,int)",
						"r": "template <typename _IIter, typename _FunctorType> size_t list_partition(const _IIter __begin, const _IIter __end, _IIter *__starts, size_t *__lengths, const int __num_parts, _FunctorType& __f, int __oversampling = 0)",
						"s": "__gnu_parallel",
						"u": "LIST_PARTITION",
						"q": "__gnu_parallel",
						"w": "__GNU_PARALLEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "947bc1321496a1758369164cd3d0e6706641ae0a"
							}
						]
					}
				]
			}
		}
	]
}