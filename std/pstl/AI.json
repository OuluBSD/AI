{
	"saved_hash": "677b4f0c6975f16345a7ead554ae394546f894f4",
	"files": [
		{
			"key": "pstl/glue_memory_defs.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_MEMORY_DEFS_H",
						"t": "",
						"i": "_PSTL_GLUE_MEMORY_DEFS_H",
						"r": "_PSTL_GLUE_MEMORY_DEFS_H",
						"s": "",
						"u": "_PSTL_GLUE_MEMORY_DEFS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "223a2530d73d829711c78a03823326ba2c53db0c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _InputIterator, _ForwardIterator)",
						"i": "std::uninitialized_copy(_ExecutionPolicy&&,_InputIterator,_InputIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_copy(_ExecutionPolicy&& __exec, _InputIterator __first, _InputIterator __last, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2145784dc8b5a8c2f864c8ea4c47f15ba9436b07"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_copy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _Size, _ForwardIterator)",
						"i": "std::uninitialized_copy_n(_ExecutionPolicy&&,_InputIterator,_Size,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _Size, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_copy_n(_ExecutionPolicy&& __exec, _InputIterator __first, _Size __n, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_COPY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e04e72fc417124891beaece76a4d65103f17a858"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_move",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _InputIterator, _ForwardIterator)",
						"i": "std::uninitialized_move(_ExecutionPolicy&&,_InputIterator,_InputIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_move(_ExecutionPolicy&& __exec, _InputIterator __first, _InputIterator __last, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_MOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5301cead7c6bc49aeebad4c2176b946ba5043922"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_move_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _Size, _ForwardIterator)",
						"i": "std::uninitialized_move_n(_ExecutionPolicy&&,_InputIterator,_Size,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _Size, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_move_n(_ExecutionPolicy&& __exec, _InputIterator __first, _Size __n, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_MOVE_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b36645d0ae0aedb3017dc3fc00323b2225eff811"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_fill",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::uninitialized_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_fill(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "UNINITIALIZED_FILL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4dfacb1cedc29c54c54b6e1ff61132d77258bb9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_fill_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::uninitialized_fill_n(_ExecutionPolicy&&,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_fill_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n, const _Tp& __value)",
						"s": "std",
						"u": "UNINITIALIZED_FILL_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38c7a623d23f336bfc90625f9d641f0859e18d8e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "destroy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::destroy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> destroy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "DESTROY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9fe027ccc1e6c6247bc3e9f3b5d4ab9726229416"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "destroy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::destroy_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> destroy_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "DESTROY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb677582151b634cb12921b86e23cb442b6e00d7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_default_construct",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::uninitialized_default_construct(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_default_construct(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNINITIALIZED_DEFAULT_CONSTRUCT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc270a49d024a2d75b7e6a4e47a097e6ef366e7d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_default_construct_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::uninitialized_default_construct_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_default_construct_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "UNINITIALIZED_DEFAULT_CONSTRUCT_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0acd1c4055049e1cd2523be4abed9e47ea6fefd9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_value_construct",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::uninitialized_value_construct(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_value_construct(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNINITIALIZED_VALUE_CONSTRUCT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "774e355dafe90021dc0aacbe9c2df23ca3dd4b9b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "uninitialized_value_construct_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::uninitialized_value_construct_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_value_construct_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "UNINITIALIZED_VALUE_CONSTRUCT_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0633f09d84fe2b25e1d127113c10be2ba410c0b"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_memory_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_MEMORY_IMPL_H",
						"t": "",
						"i": "_PSTL_GLUE_MEMORY_IMPL_H",
						"r": "_PSTL_GLUE_MEMORY_IMPL_H",
						"s": "",
						"u": "_PSTL_GLUE_MEMORY_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9331891681e3433e8d90b9d7ee038b3aea7cd5f5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _InputIterator, _ForwardIterator)",
						"i": "std::uninitialized_copy(_ExecutionPolicy&&,_InputIterator,_InputIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_copy(_ExecutionPolicy&& __exec, _InputIterator __first, _InputIterator __last, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f640b785a69096ae3f3109f0fd75bddd373f6b9c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_copy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _Size, _ForwardIterator)",
						"i": "std::uninitialized_copy_n(_ExecutionPolicy&&,_InputIterator,_Size,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _Size, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_copy_n(_ExecutionPolicy&& __exec, _InputIterator __first, _Size __n, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_COPY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47c85df605c394da224920b0c958923eb891ae95"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_move",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _InputIterator, _ForwardIterator)",
						"i": "std::uninitialized_move(_ExecutionPolicy&&,_InputIterator,_InputIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_move(_ExecutionPolicy&& __exec, _InputIterator __first, _InputIterator __last, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_MOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c864409468e71ce9da289e23c4ce5e287e72ccd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_move_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _InputIterator, _Size, _ForwardIterator)",
						"i": "std::uninitialized_move_n(_ExecutionPolicy&&,_InputIterator,_Size,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _InputIterator, class _Size, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_move_n(_ExecutionPolicy&& __exec, _InputIterator __first, _Size __n, _ForwardIterator __result)",
						"s": "std",
						"u": "UNINITIALIZED_MOVE_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "040cb26ef653bcbd6a808a9d149adc16f3e85c2d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_fill",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::uninitialized_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_fill(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "UNINITIALIZED_FILL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2f15fbdd1104253ea6e5179dee3cbea0ce0ac87"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_fill_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::uninitialized_fill_n(_ExecutionPolicy&&,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_fill_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n, const _Tp& __value)",
						"s": "std",
						"u": "UNINITIALIZED_FILL_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3fc1afa7a70949ae43faf8f862fa9ee2edb50d6b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "destroy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::destroy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> destroy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "DESTROY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8f8ed82ff25d51acc3b3e0e6f8633fbe0ee00e0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "destroy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::destroy_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> destroy_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "DESTROY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d81b5c4ab841423948cabc9224d69041599118e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_default_construct",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::uninitialized_default_construct(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_default_construct(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNINITIALIZED_DEFAULT_CONSTRUCT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d857456a12ac1b4dcd54da4c50f95d0d72e7505"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_default_construct_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::uninitialized_default_construct_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_default_construct_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "UNINITIALIZED_DEFAULT_CONSTRUCT_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03e7e577388b3a57267e81cf3428c86a14e37d5a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_value_construct",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::uninitialized_value_construct(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, void> uninitialized_value_construct(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNINITIALIZED_VALUE_CONSTRUCT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98a602a468177350896957c970f5e71a5005147b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "uninitialized_value_construct_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size)",
						"i": "std::uninitialized_value_construct_n(_ExecutionPolicy&&,_ForwardIterator,_Size)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> uninitialized_value_construct_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n)",
						"s": "std",
						"u": "UNINITIALIZED_VALUE_CONSTRUCT_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2c181f088abdea32dd3229517a0e99b637629ee"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/pstl_config.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CONFIG_H",
						"t": "",
						"i": "_PSTL_CONFIG_H",
						"r": "_PSTL_CONFIG_H",
						"s": "",
						"u": "_PSTL_CONFIG_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f5fb61e544262fbcb88e60dbb941db528d74cdd"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_VERSION",
						"t": "",
						"i": "_PSTL_VERSION",
						"r": "_PSTL_VERSION",
						"s": "",
						"u": "_PSTL_VERSION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2629908476f09c7a09ea226d4e24e663facd674"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_VERSION_MAJOR",
						"t": "",
						"i": "_PSTL_VERSION_MAJOR",
						"r": "_PSTL_VERSION_MAJOR",
						"s": "",
						"u": "_PSTL_VERSION_MAJOR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1322a831291c8ab3394bcb4ca7f20046b8a2e612"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_PSTL_VERSION_MINOR",
						"t": "",
						"i": "_PSTL_VERSION_MINOR",
						"r": "_PSTL_VERSION_MINOR",
						"s": "",
						"u": "_PSTL_VERSION_MINOR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e654d0cb07166827a6cf8df7875d78ea36a20614"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_VERSION_PATCH",
						"t": "",
						"i": "_PSTL_VERSION_PATCH",
						"r": "_PSTL_VERSION_PATCH",
						"s": "",
						"u": "_PSTL_VERSION_PATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0f6978b93f5e1d640c8e6eb6feae68e0449b913"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_USAGE_WARNINGS",
						"t": "",
						"i": "_PSTL_USAGE_WARNINGS",
						"r": "_PSTL_USAGE_WARNINGS",
						"s": "",
						"u": "_PSTL_USAGE_WARNINGS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9452bc30ef9b0a21c0716c618e035864427438b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA",
						"t": "",
						"i": "_PSTL_PRAGMA",
						"r": "_PSTL_PRAGMA",
						"s": "",
						"u": "_PSTL_PRAGMA",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f515441220187e87f91d8ae4fafcd8402e2a211"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_STRING_AUX",
						"t": "",
						"i": "_PSTL_STRING_AUX",
						"r": "_PSTL_STRING_AUX",
						"s": "",
						"u": "_PSTL_STRING_AUX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65851e98ce1fbabb9a46432411f3f90535200342"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_STRING",
						"t": "",
						"i": "_PSTL_STRING",
						"r": "_PSTL_STRING",
						"s": "",
						"u": "_PSTL_STRING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "140d034758295927f16e55ae9eaed229536c6e5f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_STRING_CONCAT",
						"t": "",
						"i": "_PSTL_STRING_CONCAT",
						"r": "_PSTL_STRING_CONCAT",
						"s": "",
						"u": "_PSTL_STRING_CONCAT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "256d59f03834f4fc4a7f6d35227a266e497a7b5c"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_HIDE_FROM_ABI_PUSH",
						"t": "",
						"i": "_PSTL_HIDE_FROM_ABI_PUSH",
						"r": "_PSTL_HIDE_FROM_ABI_PUSH",
						"s": "",
						"u": "_PSTL_HIDE_FROM_ABI_PUSH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27caae849049ee54b81cc733619a7953baf7ebdf"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_HIDE_FROM_ABI_POP",
						"t": "",
						"i": "_PSTL_HIDE_FROM_ABI_POP",
						"r": "_PSTL_HIDE_FROM_ABI_POP",
						"s": "",
						"u": "_PSTL_HIDE_FROM_ABI_POP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f122802a6759acbdc07dd815283de34aadeb63b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GCC_VERSION",
						"t": "",
						"i": "_PSTL_GCC_VERSION",
						"r": "_PSTL_GCC_VERSION",
						"s": "",
						"u": "_PSTL_GCC_VERSION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a0e7143466558a7a64b868574dccd834a2c7cb77"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CLANG_VERSION",
						"t": "",
						"i": "_PSTL_CLANG_VERSION",
						"r": "_PSTL_CLANG_VERSION",
						"s": "",
						"u": "_PSTL_CLANG_VERSION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86f771cd363b556e04173f75abf65089ec86713b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD",
						"r": "_PSTL_PRAGMA_SIMD",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa586f779d1bb2445a048b9ed63623a6f7c3fbad"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_DECLARE_SIMD",
						"t": "",
						"i": "_PSTL_PRAGMA_DECLARE_SIMD",
						"r": "_PSTL_PRAGMA_DECLARE_SIMD",
						"s": "",
						"u": "_PSTL_PRAGMA_DECLARE_SIMD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "79b58fcd945f8ddfb71845ae87f48a71fdc46218"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_REDUCTION",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_REDUCTION",
						"r": "_PSTL_PRAGMA_SIMD_REDUCTION",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_REDUCTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a78f7ba5f3d3422eaa274759c084279daca81005"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_FORCEINLINE",
						"t": "",
						"i": "_PSTL_PRAGMA_FORCEINLINE",
						"r": "_PSTL_PRAGMA_FORCEINLINE",
						"s": "",
						"u": "_PSTL_PRAGMA_FORCEINLINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89983dae19e13b31293f17384eebff052e650e7a"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_SCAN",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_SCAN",
						"r": "_PSTL_PRAGMA_SIMD_SCAN",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_SCAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98158e497a7379b84c7ab7d13a40e44f7720bb99"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN",
						"r": "_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e7da28b897f4b8f322fc83902fd1a127577b19d"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN",
						"r": "_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4ec4b074f0b0f1f19381a24f672c98652112e18"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP17_EXECUTION_POLICIES_PRESENT",
						"t": "",
						"i": "_PSTL_CPP17_EXECUTION_POLICIES_PRESENT",
						"r": "_PSTL_CPP17_EXECUTION_POLICIES_PRESENT",
						"s": "",
						"u": "_PSTL_CPP17_EXECUTION_POLICIES_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "92f6c3be8ed131b8386a965229a4075ea50ee60b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT",
						"t": "",
						"i": "_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT",
						"r": "_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT",
						"s": "",
						"u": "_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6f0821371a564489914c9f753d50e5c0aefc7250"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT",
						"t": "",
						"i": "_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT",
						"r": "_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT",
						"s": "",
						"u": "_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1861fcd2f2084933fa6cd56a95cfae6579809b80"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT",
						"t": "",
						"i": "_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT",
						"r": "_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT",
						"s": "",
						"u": "_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e9e1bca865d65b4ea9336b129013409b01322e7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT",
						"t": "",
						"i": "_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT",
						"r": "_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT",
						"s": "",
						"u": "_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56cd449726eb4a108a60c5a3b506d9355c07378f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_EARLYEXIT_PRESENT",
						"t": "",
						"i": "_PSTL_EARLYEXIT_PRESENT",
						"r": "_PSTL_EARLYEXIT_PRESENT",
						"s": "",
						"u": "_PSTL_EARLYEXIT_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b4d608d6f80c33b102696ea92b2e36f08e7d8ed"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_MONOTONIC_PRESENT",
						"t": "",
						"i": "_PSTL_MONOTONIC_PRESENT",
						"r": "_PSTL_MONOTONIC_PRESENT",
						"s": "",
						"u": "_PSTL_MONOTONIC_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b7ed17cf4f743a21a6aa4c20f41ec68d92c0faa9"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_UDR_PRESENT",
						"t": "",
						"i": "_PSTL_UDR_PRESENT",
						"r": "_PSTL_UDR_PRESENT",
						"s": "",
						"u": "_PSTL_UDR_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bf79686271c5e501f80bb48b8239b3b76fa5a56"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_UDS_PRESENT",
						"t": "",
						"i": "_PSTL_UDS_PRESENT",
						"r": "_PSTL_UDS_PRESENT",
						"s": "",
						"u": "_PSTL_UDS_PRESENT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91a05aab539d619add13970feedc3fb827bd750e"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_EARLYEXIT",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_EARLYEXIT",
						"r": "_PSTL_PRAGMA_SIMD_EARLYEXIT",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_EARLYEXIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd6b2b0ae8bf2d01d96cd2e297d678c7ca1dd2ac"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC",
						"r": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f9915f765cb0004bdec7eedd652d46380b95679"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS",
						"t": "",
						"i": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS",
						"r": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS",
						"s": "",
						"u": "_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bcd773d3465108ffce246e7864e5a547dbe7433"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "_PSTL_PRAGMA_DECLARE_REDUCTION",
						"t": "",
						"i": "_PSTL_PRAGMA_DECLARE_REDUCTION",
						"r": "_PSTL_PRAGMA_DECLARE_REDUCTION",
						"s": "",
						"u": "_PSTL_PRAGMA_DECLARE_REDUCTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ae8c73d401b8866c778a8657c9c8890f8cd9fc9"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_VECTOR_UNALIGNED",
						"t": "",
						"i": "_PSTL_PRAGMA_VECTOR_UNALIGNED",
						"r": "_PSTL_PRAGMA_VECTOR_UNALIGNED",
						"s": "",
						"u": "_PSTL_PRAGMA_VECTOR_UNALIGNED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd3a1dc4a72bec1c61ea9243f72cebd403c97602"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED",
						"t": "",
						"i": "_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED",
						"r": "_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED",
						"s": "",
						"u": "_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fdc40d322ca917fb61dbccb6f266c67d436ab025"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_LOCATION",
						"t": "",
						"i": "_PSTL_PRAGMA_LOCATION",
						"r": "_PSTL_PRAGMA_LOCATION",
						"s": "",
						"u": "_PSTL_PRAGMA_LOCATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "21502f28372b0db174b1adc3b0896cfa0ecf8966"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_MESSAGE_IMPL",
						"t": "",
						"i": "_PSTL_PRAGMA_MESSAGE_IMPL",
						"r": "_PSTL_PRAGMA_MESSAGE_IMPL",
						"s": "",
						"u": "_PSTL_PRAGMA_MESSAGE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1eb19ffb1ac8dded8a34307b4618d2ac46ca848a"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_MESSAGE",
						"t": "",
						"i": "_PSTL_PRAGMA_MESSAGE",
						"r": "_PSTL_PRAGMA_MESSAGE",
						"s": "",
						"u": "_PSTL_PRAGMA_MESSAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00f337c2f26bbc443625791222c5b4961a290a1f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PRAGMA_MESSAGE_POLICIES",
						"t": "",
						"i": "_PSTL_PRAGMA_MESSAGE_POLICIES",
						"r": "_PSTL_PRAGMA_MESSAGE_POLICIES",
						"s": "",
						"u": "_PSTL_PRAGMA_MESSAGE_POLICIES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4b2987d9f18e4671b68d47bdc6066e9c0f59f21"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_CPP11_STD_ROTATE_BROKEN",
						"t": "",
						"i": "_PSTL_CPP11_STD_ROTATE_BROKEN",
						"r": "_PSTL_CPP11_STD_ROTATE_BROKEN",
						"s": "",
						"u": "_PSTL_CPP11_STD_ROTATE_BROKEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f955012dd4ce9ca397b22eafcc49fd966780d5a2"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_ICC_18_OMP_SIMD_BROKEN",
						"t": "",
						"i": "_PSTL_ICC_18_OMP_SIMD_BROKEN",
						"r": "_PSTL_ICC_18_OMP_SIMD_BROKEN",
						"s": "",
						"u": "_PSTL_ICC_18_OMP_SIMD_BROKEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "186d7b9e92d6c52511e5f7e0646ea841257c61f5"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_algorithm_defs.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_ALGORITHM_DEFS_H",
						"t": "",
						"i": "_PSTL_GLUE_ALGORITHM_DEFS_H",
						"r": "_PSTL_GLUE_ALGORITHM_DEFS_H",
						"s": "",
						"u": "_PSTL_GLUE_ALGORITHM_DEFS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f231975663dde3ddaf9f3fe8d1f315bb6203d9a1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "any_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, bool> any_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "ANY_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1aade55734eb8076bfe08b704e69960f24d11d4c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "all_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::all_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, bool> all_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "ALL_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ce3911f4cd9916fbc084495040e0f1cec2d9cd1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "none_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::none_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, bool> none_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "NONE_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa930787f4d394b85681d31a0849f0c765c19cf0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function)",
						"i": "std::for_each(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function> __enable_if_execution_policy<_ExecutionPolicy, void> for_each(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Function __f)",
						"s": "std",
						"u": "FOR_EACH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2870447bcc70a50b8f37c24139daf1b064c11b1a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "for_each_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, _Function)",
						"i": "std::for_each_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Function)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Function> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> for_each_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n, _Function __f)",
						"s": "std",
						"u": "FOR_EACH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba0734d617a42213a74815e594ffa2e0fb76823e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "FIND_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87af64aa6d5cf862a07b5fce2a5dcccc6be97f12"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_if_not",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::find_if_not(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find_if_not(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "FIND_IF_NOT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f703a84878eae6babd558cd172abcae1680ef0a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e24882f906c09fd686c2cd0fb41bae25fcca7ab0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_end(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "FIND_END",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8234157157b7b51f325920afb109a925b41a6ba"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_end(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "FIND_END",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd0f9013103808e267d7b6c8135dee43f4452e2b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_first_of(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "FIND_FIRST_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4fe74a117a1bfc2f3467f55309cd176410370010"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_first_of(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "FIND_FIRST_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75163964703c28efa6bb82b14b142ed30fc9b8f4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> adjacent_find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "ADJACENT_FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c63584ed743d1b48a1137da5b77ae1725f799416"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> adjacent_find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "ADJACENT_FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fdf447d5a100b3859b05b322cfdd4e5d305107c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> count(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "COUNT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "667ab4e1f40dc1016d1372120b34de7b2bffb220"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::count_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> count_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "COUNT_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91267dcf41eae932d772891a84c72c200dcb90ed"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> search(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "SEARCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "710a76aac9417cf4faaf43fb6516267ef6de2fa4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> search(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "SEARCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3efc54796d0acd3b1fb74f57989cf4128cbdafd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate)",
						"i": "std::search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> search_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred)",
						"s": "std",
						"u": "SEARCH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e3e98e8685cee937938428fb86b206ec017bf69"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> search_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value)",
						"s": "std",
						"u": "SEARCH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b8734a0f351fb51ffe0c79e8c05232e6261640d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4879e62098a204998b2dff673496ea3fffefed5b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2)",
						"i": "std::copy_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy_n(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _Size __n, _ForwardIterator2 __result)",
						"s": "std",
						"u": "COPY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a80c3f6330c285f30cb6804e1db7c36249f7df54"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Predicate)",
						"i": "std::copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 result, _Predicate __pred)",
						"s": "std",
						"u": "COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "480337a14d022624f9084c5b27be4c982aea1348"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "swap_ranges",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::swap_ranges(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> swap_ranges(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "SWAP_RANGES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "68d63ea430ff6a2010522a0bc05e6cc4bff086ab"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _UnaryOperation)",
						"i": "std::transform(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _UnaryOperation __op)",
						"s": "std",
						"u": "TRANSFORM",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e0fc0e2b326b92c3595e43e8813756eba87a4be"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator, _BinaryOperation)",
						"i": "std::transform(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> transform(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator __result, _BinaryOperation __op)",
						"s": "std",
						"u": "TRANSFORM",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f38d7c8c7523211e10cd44e3c6e0f8f35716357"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, const _Tp &)",
						"i": "std::replace_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> replace_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d66e201ca0c1822b93035ae5dc65a7382b13fa19"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, const _Tp &)",
						"i": "std::replace(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> replace(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "beb70bd2d9c077b84d101430592abacf963931b4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _UnaryPredicate, const _Tp &)",
						"i": "std::replace_copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_UnaryPredicate,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryPredicate, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> replace_copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _UnaryPredicate __pred, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20574382e0c8e23cdf580ddcfd983816a51c2812"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, const _Tp &, const _Tp &)",
						"i": "std::replace_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,const _Tp&,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> replace_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2254b778988d277396e62d9b85fd2af6810f7b21"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "fill",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> fill(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "FILL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b015e884d7eb393f3129e7720f70757090f58c85"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "fill_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::fill_n(_ExecutionPolicy&&,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> fill_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __count, const _Tp& __value)",
						"s": "std",
						"u": "FILL_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e107fcbfa0b5a9531edf3d352c83ea9960603a6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator)",
						"i": "std::generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator> __enable_if_execution_policy<_ExecutionPolicy, void> generate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Generator __g)",
						"s": "std",
						"u": "GENERATE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "091d9b77cc77be26a20af51b113af8ffd80ad885"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, _Generator)",
						"i": "std::generate_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Generator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Generator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> generate_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size count, _Generator __g)",
						"s": "std",
						"u": "GENERATE_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0db1cc3d79fab3f9f4ee7836a137123ad5e278d6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Predicate)",
						"i": "std::remove_copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> remove_copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Predicate __pred)",
						"s": "std",
						"u": "REMOVE_COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b4b1d17420f0fb7d10d41bee5861571f32eb057"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, const _Tp &)",
						"i": "std::remove_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> remove_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, const _Tp& __value)",
						"s": "std",
						"u": "REMOVE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5fa5d593a95f22268ca0aa3f8b5cf4c035dbb54e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> remove_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "REMOVE_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6959be68759b019ed5873ad42389ed4af77fd1d2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "remove",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::remove(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> remove(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "REMOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03b29bc3ba8a96787113c5502b58b7590ff9f8db"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> unique(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "UNIQUE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a791c2330162ff17944c7126cfe90ca686bc8759"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> unique(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNIQUE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be187f60930182d0f27ad47dff2c14768a0e5419"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::unique_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> unique_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryPredicate __pred)",
						"s": "std",
						"u": "UNIQUE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b94a74db7a33fa71bf9bc257327a29e793f0ed54"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::unique_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> unique_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "UNIQUE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b6536d8d6f74524e07d4b2420a7b707eccb68b5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reverse",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator> __enable_if_execution_policy<_ExecutionPolicy, void> reverse(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std",
						"u": "REVERSE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d33a3e63cc955ee79efa5e8fd9e2c4bc2c2e1862"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reverse_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _ForwardIterator)",
						"i": "std::reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> reverse_copy(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _ForwardIterator __d_first)",
						"s": "std",
						"u": "REVERSE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "899577da80bc9fddf76c6ea71f001fe4beb594df"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "rotate",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator)",
						"i": "std::rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> rotate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)",
						"s": "std",
						"u": "ROTATE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1550da31abad416d5c6c711a9a2a9f5cada499b4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "rotate_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::rotate_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> rotate_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __middle, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "ROTATE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd54946faaeff1a55dcf9357217f1a0d2e6c7ad4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_partitioned",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> is_partitioned(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "IS_PARTITIONED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe7b1ac2487e7e943943c2cb51f9778ecb88c830"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> partition(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "PARTITION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36fcc7e816a414aea3183662716c0a6528ae588c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_partition",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _BidirectionalIterator> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate)",
						"i": "std::stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _BidirectionalIterator> stable_partition(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "STABLE_PARTITION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af9c428ffa3907be613562a1bc9ae9eddf4507a4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partition_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator1, _ForwardIterator2, _UnaryPredicate)",
						"i": "std::partition_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator1,_ForwardIterator2,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _ForwardIterator1, class _ForwardIterator2, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> partition_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _ForwardIterator1 __out_true, _ForwardIterator2 __out_false, _UnaryPredicate __pred)",
						"s": "std",
						"u": "PARTITION_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e97fe50dfa4a60e57586e2c673572ed5b38fbf2a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e04614a466c5dbdc1d7bb6e7a4c7ac63aec8bd5e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f79b0050b7621e9fed0e674544310e97e8711263"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> stable_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "STABLE_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10f5aa372542515e3cb025b368c5239abe35d326"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> stable_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "STABLE_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c246df167268305b79daadda6825a738cb634d0f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5b1a42754f766820aaf5443002cab5868d3d600"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __pred)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9acc2b25f789d899b0dcab58bedb263392d29c53"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56bb25b0674e2632adfb8d9f0fa3f68b6f04064a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d549145078d2fefc4fa2164fb8dcf87b450dc01b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __p)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "936debc855c2f3aa487839a7a1ea1160fe99d432"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fa15262037d61fdea57376cfce6bff62470b1ab"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __p)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df66c4824109bc2baee9b7c39b4ee4a9897d5266"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65183ed5426a7b626ffbf70f908ba56066346a84"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "move",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::move(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> move(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first)",
						"s": "std",
						"u": "MOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd10f6abd36d863bd29dee9f71eef5be7ccc8646"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> partial_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "PARTIAL_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e57feef83b634b95a599211da52560c7a861dcb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> partial_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)",
						"s": "std",
						"u": "PARTIAL_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4bd4c632ed7fc4e6748d6de8c907f2b672bcaa7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> partial_sort_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last, _Compare __comp)",
						"s": "std",
						"u": "PARTIAL_SORT_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a324e463f0d02825ec2a8bd260b95393c1863468"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> partial_sort_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last)",
						"s": "std",
						"u": "PARTIAL_SORT_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da0b2b99250b5f0534393992e81821d0015dd489"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::is_sorted_until(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> is_sorted_until(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_SORTED_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef1f27d8a137348d206779f9739df43f96cf2df2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::is_sorted_until(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> is_sorted_until(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "IS_SORTED_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25891f2c22f8e0cf28ed440fe77f7a68a2f37c89"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::is_sorted(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> is_sorted(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_SORTED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b27fafddd0d589b976404db05c14b0889799257"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::is_sorted(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, bool> is_sorted(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "IS_SORTED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "494d2e583245bd458a9fba24592a4745c830fb83"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> nth_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "NTH_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f15db9530d55d773ac3c7c334ce7232c1fbff2f6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> nth_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last)",
						"s": "std",
						"u": "NTH_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1cef640e268f9b1536d0994396648edaa2a6fc9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> merge(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __d_first, _Compare __comp)",
						"s": "std",
						"u": "MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19c2c2f50cb18f14d74cb9de6eb13896a06e095a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> merge(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __d_first)",
						"s": "std",
						"u": "MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "81751c19658aa6d1fe20b10f19606f1688a0ffe4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> inplace_merge(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std",
						"u": "INPLACE_MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d127f8b52820bf5d523ba98103b3bf47fbb6bc8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator> __enable_if_execution_policy<_ExecutionPolicy, void> inplace_merge(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last)",
						"s": "std",
						"u": "INPLACE_MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c81f87e4de296b63b8e99448742212dfffa5244d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare)",
						"i": "std::includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> includes(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp)",
						"s": "std",
						"u": "INCLUDES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b248f767099520678cb097db8c0ed3a47866c04"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> includes(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "INCLUDES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "799c320ab65fcad751f988a35fd820e48365ce8f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_union(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_UNION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af3dc353329fb0f2a10862fb93a2a24981f356f0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_union(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_UNION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6eab6779cb59af332e9aa129116a6d625288bbc5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_intersection(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_INTERSECTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "92ab02df1cb4f5d01d47b91337ff2aeadc81c4c0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_intersection(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_INTERSECTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c71c8d3fd83d9e8188362ba684088f7ed2657f53"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e7e3d721474ef9512c422de99fc1e3732dca4a4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "61621f5614d25d6deff1a4d0a307b87917416834"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_symmetric_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator result, _Compare __comp)",
						"s": "std",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20cc099fe8eb350c9e350f76318b1aea12ca132f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_symmetric_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ccda051e5e39e8f7142e509312eb816b99a45834"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> is_heap_until(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_HEAP_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37e474c6613ad734c45f20ee9ad2e9f07c72aa96"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> is_heap_until(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "IS_HEAP_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f3d8d8b5c879a4bb46c13506f4e0c747d69d722"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::is_heap(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> is_heap(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_HEAP",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47b2f21a94e5d65749044a897d4824a2865941ab"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::is_heap(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, bool> is_heap(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "IS_HEAP",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27ceb97ef5b88f54cee272b9e2abe6f98881d1f2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> min_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MIN_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "622cbfa96c4caa851f893cf217c36f52285821cf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> min_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MIN_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c111de2e36f13e20baa090ff93be4baf1c9d2cd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::max_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> max_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ef72f7f43f67a260bcd85f38538afb46508ce88"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::max_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> max_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69c98967b46c01baf091d04442207db976cf207a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> minmax_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MINMAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d42611515cecca99cbf8d4131307c531dcb6cdc6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> minmax_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MINMAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef30a3fd6a5714464911c81d9b267fff7c5e3f8a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare)",
						"i": "std::lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> lexicographical_compare(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp)",
						"s": "std",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13eb9ecccff9487a88ed28c2cd2228a87f8a302e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> lexicographical_compare(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bece1188884ecd4f3086642f25ad90ac844e5c79"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/execution_defs.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_EXECUTION_POLICY_DEFS_H",
						"t": "",
						"i": "_PSTL_EXECUTION_POLICY_DEFS_H",
						"r": "_PSTL_EXECUTION_POLICY_DEFS_H",
						"s": "",
						"u": "_PSTL_EXECUTION_POLICY_DEFS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f579eebe40d2942e9696517c1724813747a8925c"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sequenced_policy",
						"t": "__pstl::execution::sequenced_policy",
						"i": "__pstl::execution::sequenced_policy",
						"r": "sequenced_policy",
						"s": "__pstl::execution::v1",
						"u": "SEQUENCED_POLICY",
						"q": "__pstl::execution::sequenced_policy",
						"w": "__PSTL::EXECUTION::SEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5fea4a1b53f6865d1ad6faa34f0ee5be981a625"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_unsequenced",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::sequenced_policy::__allow_unsequenced()",
						"r": "static constexpr std::false_type __allow_unsequenced()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_UNSEQUENCED",
						"q": "__pstl::execution::v1::sequenced_policy",
						"w": "__PSTL::EXECUTION::V1::SEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3446ec1e88e383b1f123af15401b72c77a64603"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_vector",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::sequenced_policy::__allow_vector()",
						"r": "static constexpr std::false_type __allow_vector()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_VECTOR",
						"q": "__pstl::execution::v1::sequenced_policy",
						"w": "__PSTL::EXECUTION::V1::SEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da9261fe390dfbd9412030ff4a0528890101ab04"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_parallel",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::sequenced_policy::__allow_parallel()",
						"r": "static constexpr std::false_type __allow_parallel()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_PARALLEL",
						"q": "__pstl::execution::v1::sequenced_policy",
						"w": "__PSTL::EXECUTION::V1::SEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "629a938b1f6689daa4c6d3336bff683b14e0eed3"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_policy",
						"t": "__pstl::execution::parallel_policy",
						"i": "__pstl::execution::parallel_policy",
						"r": "parallel_policy",
						"s": "__pstl::execution::v1",
						"u": "PARALLEL_POLICY",
						"q": "__pstl::execution::parallel_policy",
						"w": "__PSTL::EXECUTION::PARALLEL_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8bea75b2ebc58b950324b67536e280f18096635a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_unsequenced",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::parallel_policy::__allow_unsequenced()",
						"r": "static constexpr std::false_type __allow_unsequenced()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_UNSEQUENCED",
						"q": "__pstl::execution::v1::parallel_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3446ec1e88e383b1f123af15401b72c77a64603"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_vector",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::parallel_policy::__allow_vector()",
						"r": "static constexpr std::false_type __allow_vector()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_VECTOR",
						"q": "__pstl::execution::v1::parallel_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da9261fe390dfbd9412030ff4a0528890101ab04"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_parallel",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::parallel_policy::__allow_parallel()",
						"r": "static constexpr std::true_type __allow_parallel()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_PARALLEL",
						"q": "__pstl::execution::v1::parallel_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2d28e73086adbf8bd311cc1bb8002a24f90c6c7"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parallel_unsequenced_policy",
						"t": "__pstl::execution::parallel_unsequenced_policy",
						"i": "__pstl::execution::parallel_unsequenced_policy",
						"r": "parallel_unsequenced_policy",
						"s": "__pstl::execution::v1",
						"u": "PARALLEL_UNSEQUENCED_POLICY",
						"q": "__pstl::execution::parallel_unsequenced_policy",
						"w": "__PSTL::EXECUTION::PARALLEL_UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12b75633ba184a8bea75f0fde6b1eb9cbf5011b0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_unsequenced",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::parallel_unsequenced_policy::__allow_unsequenced()",
						"r": "static constexpr std::true_type __allow_unsequenced()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_UNSEQUENCED",
						"q": "__pstl::execution::v1::parallel_unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b433819aca5c182a6266fc45b717d1c30b9d773"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_vector",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::parallel_unsequenced_policy::__allow_vector()",
						"r": "static constexpr std::true_type __allow_vector()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_VECTOR",
						"q": "__pstl::execution::v1::parallel_unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b062d3b8f958b4971200c3b902de7fdb1e46fde2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_parallel",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::parallel_unsequenced_policy::__allow_parallel()",
						"r": "static constexpr std::true_type __allow_parallel()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_PARALLEL",
						"q": "__pstl::execution::v1::parallel_unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::PARALLEL_UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2d28e73086adbf8bd311cc1bb8002a24f90c6c7"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unsequenced_policy",
						"t": "__pstl::execution::unsequenced_policy",
						"i": "__pstl::execution::unsequenced_policy",
						"r": "unsequenced_policy",
						"s": "__pstl::execution::v1",
						"u": "UNSEQUENCED_POLICY",
						"q": "__pstl::execution::unsequenced_policy",
						"w": "__PSTL::EXECUTION::UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6862f1c273e8b55ef69cc2d4c633ee1b01aebf2a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_unsequenced",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::unsequenced_policy::__allow_unsequenced()",
						"r": "static constexpr std::true_type __allow_unsequenced()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_UNSEQUENCED",
						"q": "__pstl::execution::v1::unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b433819aca5c182a6266fc45b717d1c30b9d773"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_vector",
						"t": "std::true_type ()",
						"i": "__pstl::execution::v1::unsequenced_policy::__allow_vector()",
						"r": "static constexpr std::true_type __allow_vector()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_VECTOR",
						"q": "__pstl::execution::v1::unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b062d3b8f958b4971200c3b902de7fdb1e46fde2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": true,
						"n": "__allow_parallel",
						"t": "std::false_type ()",
						"i": "__pstl::execution::v1::unsequenced_policy::__allow_parallel()",
						"r": "static constexpr std::false_type __allow_parallel()",
						"s": "__pstl::execution::v1",
						"u": "__ALLOW_PARALLEL",
						"q": "__pstl::execution::v1::unsequenced_policy",
						"w": "__PSTL::EXECUTION::V1::UNSEQUENCED_POLICY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "629a938b1f6689daa4c6d3336bff683b14e0eed3"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "seq",
						"t": "const sequenced_policy",
						"i": "__pstl::execution::v1::seq",
						"r": "constexpr __pstl::execution::sequenced_policy seq",
						"s": "__pstl::execution::v1",
						"u": "SEQ",
						"q": "__pstl::execution::v1",
						"w": "__PSTL::EXECUTION::V1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74752c8adb0723d24ebc48fe099d9396d2cd4cea"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "par",
						"t": "const parallel_policy",
						"i": "__pstl::execution::v1::par",
						"r": "constexpr __pstl::execution::parallel_policy par",
						"s": "__pstl::execution::v1",
						"u": "PAR",
						"q": "__pstl::execution::v1",
						"w": "__PSTL::EXECUTION::V1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0eea479e9a22fac17e4c594a4910e9631ed73ade"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "par_unseq",
						"t": "const parallel_unsequenced_policy",
						"i": "__pstl::execution::v1::par_unseq",
						"r": "constexpr __pstl::execution::parallel_unsequenced_policy par_unseq",
						"s": "__pstl::execution::v1",
						"u": "PAR_UNSEQ",
						"q": "__pstl::execution::v1",
						"w": "__PSTL::EXECUTION::V1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aacebf810f1c302c08149b18d54621db45995593"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unseq",
						"t": "const unsequenced_policy",
						"i": "__pstl::execution::v1::unseq",
						"r": "constexpr __pstl::execution::unsequenced_policy unseq",
						"s": "__pstl::execution::v1",
						"u": "UNSEQ",
						"q": "__pstl::execution::v1",
						"w": "__PSTL::EXECUTION::V1",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "060c7037dd6953ee31985204889318c0d9b0ed15"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_execution_policy",
						"t": "",
						"i": "__pstl::execution::v1::is_execution_policy",
						"r": "template <class _Tp> is_execution_policy : std::false_type",
						"s": "__pstl::execution::v1",
						"u": "IS_EXECUTION_POLICY",
						"q": "__pstl::execution::v1::is_execution_policy",
						"w": "__PSTL::EXECUTION::V1::IS_EXECUTION_POLICY",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64add5f68a722a26f59db4c0094840d5669c8c04"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_execution_policy",
						"t": "__pstl::execution::is_execution_policy<__pstl::execution::sequenced_policy>",
						"i": "__pstl::execution::is_execution_policy",
						"r": "template<> is_execution_policy<__pstl::execution::sequenced_policy> : std::true_type",
						"s": "__pstl::execution::v1",
						"u": "IS_EXECUTION_POLICY",
						"q": "__pstl::execution::is_execution_policy",
						"w": "__PSTL::EXECUTION::IS_EXECUTION_POLICY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "423f5f3c5c9716f99680eab6ab869197c65badef"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_execution_policy",
						"t": "__pstl::execution::is_execution_policy<__pstl::execution::parallel_policy>",
						"i": "__pstl::execution::is_execution_policy",
						"r": "template<> is_execution_policy<__pstl::execution::parallel_policy> : std::true_type",
						"s": "__pstl::execution::v1",
						"u": "IS_EXECUTION_POLICY",
						"q": "__pstl::execution::is_execution_policy",
						"w": "__PSTL::EXECUTION::IS_EXECUTION_POLICY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fedf6e8d9e2264305b9ca38c6b2a4d95016e4088"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_execution_policy",
						"t": "__pstl::execution::is_execution_policy<__pstl::execution::parallel_unsequenced_policy>",
						"i": "__pstl::execution::is_execution_policy",
						"r": "template<> is_execution_policy<__pstl::execution::parallel_unsequenced_policy> : std::true_type",
						"s": "__pstl::execution::v1",
						"u": "IS_EXECUTION_POLICY",
						"q": "__pstl::execution::is_execution_policy",
						"w": "__PSTL::EXECUTION::IS_EXECUTION_POLICY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3fc9efb0937cee4d34598ab715f31325b96a9931"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_execution_policy",
						"t": "__pstl::execution::is_execution_policy<__pstl::execution::unsequenced_policy>",
						"i": "__pstl::execution::is_execution_policy",
						"r": "template<> is_execution_policy<__pstl::execution::unsequenced_policy> : std::true_type",
						"s": "__pstl::execution::v1",
						"u": "IS_EXECUTION_POLICY",
						"q": "__pstl::execution::is_execution_policy",
						"w": "__PSTL::EXECUTION::IS_EXECUTION_POLICY",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49a7b1faf14372e2f7bef9c2c32692ce24e94778"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__enable_if_execution_policy",
						"t": "__pstl::__internal::__enable_if_execution_policy",
						"i": "__pstl::__internal::__enable_if_execution_policy",
						"r": "using __enable_if_execution_policy",
						"s": "__pstl::__internal",
						"u": "__ENABLE_IF_EXECUTION_POLICY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "612d7f44e8c4037166f49cdf8adc8f1b9c5c2a26"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_numeric_defs.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_NUMERIC_DEFS_H",
						"t": "",
						"i": "_PSTL_GLUE_NUMERIC_DEFS_H",
						"r": "_PSTL_GLUE_NUMERIC_DEFS_H",
						"s": "",
						"u": "_PSTL_GLUE_NUMERIC_DEFS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd45cc4489802ed7f29c39db289226934e624509"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _Tp> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5066dbb9a490a067eb02a11fa1260f2c4505ddd7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _Tp> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ea4bd7634d1e62c09be42761517e6a7c5f5eab3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::value_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::value_type> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ec3534acdf76672b1784581745daeb5aab31bad"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52a2252e098de5b2c21347c9e1b0ec97377a82f3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cc7631509def00c4695e0feb7e230137f044dff"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32f4ea3c9982da15be1b1c831893351ebb8ed4d5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp)",
						"i": "std::exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init)",
						"s": "std",
						"u": "EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf49f11fca25273ee59a360917e281497cd60d8b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation)",
						"i": "std::exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "81942107c7e3cfbae50342f5c0cd3eb1d4756534"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b5d31ceed2ca02803d73685f623699dffef8d22"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e0d29b5ab4bb8ede21f1c8f96102c9187383b78"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _Tp)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _Tp __init)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "611d651ab4528da2c96adeb2f4a0fb06785f597d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47a6a53098cca025451f0bcbe4a86e5917dbf883"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _UnaryOperation, _Tp)",
						"i": "std::transform_inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_UnaryOperation,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation, class _UnaryOperation, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op, _Tp __init)",
						"s": "std",
						"u": "TRANSFORM_INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7120858febffa84b664f08c6b5047ac430791bd7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "transform_inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryOperation, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54bb5708d9e3d70c63fa80aa7a9bd1582b16f451"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation)",
						"i": "std::adjacent_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> adjacent_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first, _BinaryOperation __op)",
						"s": "std",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3c4610e8503a650b928a713b76e504a60aa55c5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::adjacent_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> adjacent_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first)",
						"s": "std",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e27ec99880c24177df255d7c21a41c16162428f8"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_numeric_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_NUMERIC_IMPL_H",
						"t": "",
						"i": "_PSTL_GLUE_NUMERIC_IMPL_H",
						"r": "_PSTL_GLUE_NUMERIC_IMPL_H",
						"s": "",
						"u": "_PSTL_GLUE_NUMERIC_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ed45b5f8b187a74e9d8afa2906a636df37de350"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _Tp> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "754d95c0abd581550cb67ec531b41d0c58980c97"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _Tp> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ffc8a0e68142733d4f7697f0215444edd52b001"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::value_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::value_type> reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c2abd10a23a5edf7741a0bffd01ff05e8c19ade"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17f77233398d5d3caf8da262144efc6980044308"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38b8fe459843f5f8e3b212461b2055f962732d4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_reduce",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _Tp> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _Tp> transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_REDUCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb05a52ab677562b476733c45366d3475db61140"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp)",
						"i": "std::exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init)",
						"s": "std",
						"u": "EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b08e91499603515d18f3f79d344d1dd7e8ca47a0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation)",
						"i": "std::exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56a83db1d6d6bb27507185d39887a10b7d915a43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0aafa31eef4a2beb8903c3bcf9105bf41c59b1e1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab3454ef7822661e8ff02db006614ffc3a9c33b9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _Tp)",
						"i": "std::inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _Tp __init)",
						"s": "std",
						"u": "INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44bc8a3280a5f6ff77ae3446614d4d66cb18a57f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_exclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_exclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_exclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_EXCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b81dd87c6b1ff3ffa1de710ce59279d8f47859f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _UnaryOperation, _Tp)",
						"i": "std::transform_inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_UnaryOperation,_Tp)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation, class _UnaryOperation, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op, _Tp __init)",
						"s": "std",
						"u": "TRANSFORM_INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d8baeb6c87b5a68403b0298fdf4f28edbf8b8309"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform_inclusive_scan",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _UnaryOperation)",
						"i": "std::transform_inclusive_scan(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryOperation, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform_inclusive_scan(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryOperation __binary_op, _UnaryOperation __unary_op)",
						"s": "std",
						"u": "TRANSFORM_INCLUSIVE_SCAN",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a17bf2712625984ffd2b889c7c9d2adc62e010e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation)",
						"i": "std::adjacent_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> adjacent_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first, _BinaryOperation __op)",
						"s": "std",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e27f0ae06d13f4ddfacf2205d52379b4e63dbb4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::adjacent_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> adjacent_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first)",
						"s": "std",
						"u": "ADJACENT_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73070006dd8ba4249f7d19fd1824df419dca2f67"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_algorithm_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_ALGORITHM_IMPL_H",
						"t": "",
						"i": "_PSTL_GLUE_ALGORITHM_IMPL_H",
						"r": "_PSTL_GLUE_ALGORITHM_IMPL_H",
						"s": "",
						"u": "_PSTL_GLUE_ALGORITHM_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f7e7dd565647cef59271a612920921b14162b0a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "any_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, bool> any_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "ANY_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71cdb03db4cf08a576962ce06c9f43168ba1258c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "all_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Pred)",
						"i": "std::all_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Pred)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Pred> __enable_if_execution_policy<_ExecutionPolicy, bool> all_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Pred __pred)",
						"s": "std",
						"u": "ALL_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0666abc6ef52bba26ef0d4ced642ae46ae14b3cb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "none_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::none_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, bool> none_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "NONE_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e7cfe5bc6d3364e82e43fef26a071e5fb66cd828"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function)",
						"i": "std::for_each(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function> __enable_if_execution_policy<_ExecutionPolicy, void> for_each(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Function __f)",
						"s": "std",
						"u": "FOR_EACH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e775d38cccab584cba3d037ecd621aa0e671c2b6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "for_each_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, _Function)",
						"i": "std::for_each_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Function)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Function> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> for_each_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __n, _Function __f)",
						"s": "std",
						"u": "FOR_EACH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb6d50705ff8fe04ee21a1b3ac55587278af1c6e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "FIND_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ad57f0cad5dc0da6854b38c8f6eba65636a60b8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_if_not",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::find_if_not(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find_if_not(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "FIND_IF_NOT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2ebecbe60165b73694718efd31e557bcbc7f2be1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3fc194330c7a2bb4532ca278caa722257689f4d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_end(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "FIND_END",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6057dae4147859354ef53dd89ba2819a5f104522"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_end",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_end(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "FIND_END",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "149ba9fc93ffe9efd1500557218060602a899c28"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_first_of(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "FIND_FIRST_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c6c9f3d9e1752ce93bf008b7a15a8212648e366"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "find_first_of",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> find_first_of(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "FIND_FIRST_OF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b13b31c37956392fcc49cc61aacc8f8695047184"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> adjacent_find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "ADJACENT_FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a60c462b8625a08fa10caee6f0b3f1069e6c31e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adjacent_find",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> adjacent_find(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "ADJACENT_FIND",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ab6cae9bc1668623e175de677c3a5d1a309d009"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> count(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "COUNT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "353fd87e8f5f8965b5ebd8fe9f0c0dc13e232be8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate)",
						"i": "std::count_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, typename iterator_traits<_ForwardIterator>::difference_type> count_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)",
						"s": "std",
						"u": "COUNT_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b2255111f4518affda90ba25b237bf707ca6178"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> search(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "SEARCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "250aeacf1b65a74b54f17984b302d4227f88911e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator1> search(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last)",
						"s": "std",
						"u": "SEARCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd636edf75aa5f93a1f042319cf1cda58e95f0f9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate)",
						"i": "std::search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> search_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred)",
						"s": "std",
						"u": "SEARCH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e36bdef5e84a23a2dcc90c4bb7c6ada1746cf979"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "search_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> search_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value)",
						"s": "std",
						"u": "SEARCH_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e81930f47c81ad00fb3b4e50de9cbce190d9cd93"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbf8a595bd5105af99064b32197ef6bcbc93c5e1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2)",
						"i": "std::copy_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy_n(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _Size __n, _ForwardIterator2 __result)",
						"s": "std",
						"u": "COPY_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3bc8f2e47b4eb92d0e2cd2a326eeecb76ddd415e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Predicate)",
						"i": "std::copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Predicate __pred)",
						"s": "std",
						"u": "COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f42e5ba99060d8f8ce2c1491d16b053307fdc16a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "swap_ranges",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::swap_ranges(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> swap_ranges(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "SWAP_RANGES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd9e2b9d5754499662ef18d5414c6bd69102e263"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _UnaryOperation)",
						"i": "std::transform(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_UnaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> transform(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _UnaryOperation __op)",
						"s": "std",
						"u": "TRANSFORM",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "268a861116c7261a444f800957db46e536d4f0fe"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "transform",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator, _BinaryOperation)",
						"i": "std::transform(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator,_BinaryOperation)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _BinaryOperation> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> transform(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator __result, _BinaryOperation __op)",
						"s": "std",
						"u": "TRANSFORM",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83f1b6f57d3c0c8a1f0113ab0c27cf31a59c73cc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, const _Tp &)",
						"i": "std::replace_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> replace_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "386d8f08ac584ca0a528b830363b8af559b71b1b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, const _Tp &)",
						"i": "std::replace(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> replace(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a34eedab7e0b5562a60806be630aec19a7405501"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _UnaryPredicate, const _Tp &)",
						"i": "std::replace_copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_UnaryPredicate,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _UnaryPredicate, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> replace_copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _UnaryPredicate __pred, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e8268b11940e7b304ab32b5910f395257036d86"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, const _Tp &, const _Tp &)",
						"i": "std::replace_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,const _Tp&,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> replace_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, const _Tp& __old_value, const _Tp& __new_value)",
						"s": "std",
						"u": "REPLACE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d0af6b7bbc3e77ba101bc32a2ae01a446202196"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fill",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, void> fill(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "FILL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d8548cbec64444926675d558c798ef7756c6d0c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fill_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, const _Tp &)",
						"i": "std::fill_n(_ExecutionPolicy&&,_ForwardIterator,_Size,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> fill_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __count, const _Tp& __value)",
						"s": "std",
						"u": "FILL_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87fd70b7151e668ad8117197060454cb0e22cc76"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator)",
						"i": "std::generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator> __enable_if_execution_policy<_ExecutionPolicy, void> generate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Generator __g)",
						"s": "std",
						"u": "GENERATE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e33deb3efa3650246147aa1443c8ec1c59cd55a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "generate_n",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _Size, _Generator)",
						"i": "std::generate_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Generator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Generator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> generate_n(_ExecutionPolicy&& __exec, _ForwardIterator __first, _Size __count, _Generator __g)",
						"s": "std",
						"u": "GENERATE_N",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b4b7ca5c76fae7ae99d55d7707a4d8cb160a43e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "remove_copy_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Predicate)",
						"i": "std::remove_copy_if(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Predicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> remove_copy_if(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _Predicate __pred)",
						"s": "std",
						"u": "REMOVE_COPY_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59c36eef9accd51d2608b8ea8cb2381652af7987"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "remove_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, const _Tp &)",
						"i": "std::remove_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> remove_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, const _Tp& __value)",
						"s": "std",
						"u": "REMOVE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "432e62e403bd459542a69b5d77739fe87f9b814d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "remove_if",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> remove_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "REMOVE_IF",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bd7fef32f095bcb8c792b5bc50b297c8ff2e2cd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "remove",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &)",
						"i": "std::remove(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> remove(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)",
						"s": "std",
						"u": "REMOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e17f8c6f6b32242c64f04d99053d84c1b5704d9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate)",
						"i": "std::unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> unique(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred)",
						"s": "std",
						"u": "UNIQUE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f3ce0545a2e4f85621a9b2e579759eba42196a5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> unique(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "UNIQUE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d7390c1d76e1c8b9bd90027315615d07baa72c8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::unique_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> unique_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result, _BinaryPredicate __pred)",
						"s": "std",
						"u": "UNIQUE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3a4f1ce9716a8b4e6cba8954c8624b4d7f59a4c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "unique_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::unique_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> unique_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "UNIQUE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e7f98ffa358da132d634038aaef988eae3c05660"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reverse",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator> __enable_if_execution_policy<_ExecutionPolicy, void> reverse(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last)",
						"s": "std",
						"u": "REVERSE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e66317686ed21adc5496b8f0677920f9bc98b388"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reverse_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _ForwardIterator)",
						"i": "std::reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> reverse_copy(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _ForwardIterator __d_first)",
						"s": "std",
						"u": "REVERSE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39b70198d3046088a5bfc42fb28c297c8be0167e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rotate",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator)",
						"i": "std::rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> rotate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)",
						"s": "std",
						"u": "ROTATE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1b140dd8bae89d0d6461e7abd9c28f7116c88c2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rotate_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::rotate_copy(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> rotate_copy(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __middle, _ForwardIterator1 __last, _ForwardIterator2 __result)",
						"s": "std",
						"u": "ROTATE_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eda910ffb3735e2e0591a2ee6ae7c3c7cb1d746e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_partitioned",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> is_partitioned(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "IS_PARTITIONED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c8060c40e7f08b233d90d97149f33ddc3400bab"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate)",
						"i": "std::partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> partition(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "PARTITION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab1c29dd8896bad60ea61034fcba649bbff635d8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_partition",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _BidirectionalIterator> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate)",
						"i": "std::stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, _BidirectionalIterator> stable_partition(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred)",
						"s": "std",
						"u": "STABLE_PARTITION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9dfb041b3eaf43bef619f153f5b9c71a7462e4dc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partition_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator1, _ForwardIterator2, _UnaryPredicate)",
						"i": "std::partition_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator1,_ForwardIterator2,_UnaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _ForwardIterator1, class _ForwardIterator2, class _UnaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> partition_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _ForwardIterator1 __out_true, _ForwardIterator2 __out_false, _UnaryPredicate __pred)",
						"s": "std",
						"u": "PARTITION_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1f5c0eb7104ecddb9924e0561a50c645f919802"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ea712b46814fdd399d9e7a829cf3ade5e495fa8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b65c2ca9bb3e2f1d4c61c44b86be3bba8598b211"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> stable_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "STABLE_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6193c9c1fc8e8dfff6e4055729607e61f3f3d4a5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stable_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> stable_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "STABLE_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "70e735e9167ddb2d16dd6501e2b2b8d08291926b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32938272a8be4c3c4ea921e0e9d4516beae6016e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __pred)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cca26cba2ee14c30840e7cba0cba5b68e7b05883"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "612acda2a29b036bd5c28f96b171b059a20bcce1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mismatch",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator1, _ForwardIterator2>> mismatch(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "MISMATCH",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d860c01860adaef9f4744295cb177eeda2b0931e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __p)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d19ee01bf429241a57ccccfef339d15d90cc3951"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd78ba7e6b2b6caa097ee9c439bf7fcd2f3ce6a5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __p)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10c41189343f5af601a0fcb3d9c7f12089b22fc7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "equal",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> equal(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "EQUAL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7124736f9123c444878a762f6df73a6bb4e7646a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "move",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2)",
						"i": "std::move(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator2> move(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first)",
						"s": "std",
						"u": "MOVE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06f20603091b9bffdd7b2a79585dc4b73db24b56"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> partial_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "PARTIAL_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c113151e78b7e226007659c0aae63ce5ef75c29c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> partial_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)",
						"s": "std",
						"u": "PARTIAL_SORT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9961f78a7d1630cb011052ff65dcd6245cfd7c82"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> partial_sort_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last, _Compare __comp)",
						"s": "std",
						"u": "PARTIAL_SORT_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d55118a5f7e3f5ca1f145338badf93cbdab1521e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "partial_sort_copy",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> partial_sort_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last)",
						"s": "std",
						"u": "PARTIAL_SORT_COPY",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "31e16ea75ef7ac934ddd67317d5874762d423a16"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::is_sorted_until(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> is_sorted_until(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_SORTED_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b786606b6d994f6fea5f040c88335f7f59edd8f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_sorted_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::is_sorted_until(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> is_sorted_until(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "IS_SORTED_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd93e2de0dda043e00c4f4e95c46611789b3574f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::is_sorted(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> is_sorted(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_SORTED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e9391dda61329852648f2a14a682139d0d4b2f4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_sorted",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::is_sorted(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, bool> is_sorted(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "IS_SORTED",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d87781ed45c76c8fa4952c4b6944114cefa3dacc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> merge(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __d_first, _Compare __comp)",
						"s": "std",
						"u": "MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "797706cbcc0c35c69b5a978a9f5f0519903e725b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> merge(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __d_first)",
						"s": "std",
						"u": "MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce41eacea8e9ed3551a5e9908ee2d7bf9641c07a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare)",
						"i": "std::inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> inplace_merge(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)",
						"s": "std",
						"u": "INPLACE_MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82c64a0fac980e0f5fd5f2c15a43446e5d7a72f4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inplace_merge",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator)",
						"i": "std::inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator> __enable_if_execution_policy<_ExecutionPolicy, void> inplace_merge(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last)",
						"s": "std",
						"u": "INPLACE_MERGE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "761440349501d8d9fdbde1b3c3474fdb36075f5b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare)",
						"i": "std::includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> includes(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp)",
						"s": "std",
						"u": "INCLUDES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "868fc01e9b347f02a178b53e9400ab81c7421cfa"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "includes",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> includes(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "INCLUDES",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de4d4e52a4e0b7df79b5810b1d3f1488baf79666"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_union(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_UNION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cf1fc41384b23b60d66fa765edf0c593707a039"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_union",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_union(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_UNION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d31c98f7e164e9ac206e42557282b51935321471"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_intersection(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_INTERSECTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8079e88e408a5382e1b140386ac9733a9652de4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_intersection",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_intersection(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_INTERSECTION",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4bcb04114670c8c1a38f930cd7f054585007a11"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13cadd7e41852b85d9e447f26388591652339754"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e2f766f6296d9fe6987e5dbbfab3db0b4920480"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator, _Compare)",
						"i": "std::set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_symmetric_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result, _Compare __comp)",
						"s": "std",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4358e6535add3674487f3811d72a1cf244ddf54e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_symmetric_difference",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _ForwardIterator)",
						"i": "std::set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> set_symmetric_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _ForwardIterator __result)",
						"s": "std",
						"u": "SET_SYMMETRIC_DIFFERENCE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28a66efbce4128477784f111341855b4d11d5ef2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> is_heap_until(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_HEAP_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "607b3859d865471a818da6e38e56376886549f43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_heap_until",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, _RandomAccessIterator> is_heap_until(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "IS_HEAP_UNTIL",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "acc85d85c6765d01cb627a694fbbb894c19af9e5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::is_heap(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> is_heap(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "IS_HEAP",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9687e1274a897feb5b18e9050733c2f9c5ac84b7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_heap",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::is_heap(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, bool> is_heap(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last)",
						"s": "std",
						"u": "IS_HEAP",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b9bf702a5f6e555c1519d835639930a70b6d037"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> min_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MIN_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b7e4d20795ca5a0c67f7d7252a1dd2cdd2ece1f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> min_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MIN_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4616ba6421561cdc9e0af560be709c2f44ae6d23"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::max_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> max_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03358d4c9525053c66e66a431cc1c9aa3ae66c02"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::max_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, _ForwardIterator> max_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77cf6a70da9e527fb8864307396883575500a6b9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare)",
						"i": "std::minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> minmax_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp)",
						"s": "std",
						"u": "MINMAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bac66d89885fe37d973a871d4f724217f630db8f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "minmax_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator)",
						"i": "std::minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator> __enable_if_execution_policy<_ExecutionPolicy, std::pair<_ForwardIterator, _ForwardIterator>> minmax_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last)",
						"s": "std",
						"u": "MINMAX_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8f823f40b0ddee4bd1455050a4de5b263a82d6d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare)",
						"i": "std::nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, void> nth_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)",
						"s": "std",
						"u": "NTH_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2ccd461538da192881b34b2c6cd9e169c838d26"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "nth_element",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator)",
						"i": "std::nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator> __enable_if_execution_policy<_ExecutionPolicy, void> nth_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last)",
						"s": "std",
						"u": "NTH_ELEMENT",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc4c743596af8fcb133f235c9451e398ca279c2e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare)",
						"i": "std::lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare> __enable_if_execution_policy<_ExecutionPolicy, bool> lexicographical_compare(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp)",
						"s": "std",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cdbd2f4bf6c0a8453f465d6d5b142d04d6113ea9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lexicographical_compare",
						"t": "__pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, bool> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)",
						"i": "std::lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2> __enable_if_execution_policy<_ExecutionPolicy, bool> lexicographical_compare(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)",
						"s": "std",
						"u": "LEXICOGRAPHICAL_COMPARE",
						"q": "std",
						"w": "STD",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5687a5d6eb3cd0d4c3928ce5bd13a5cd0a95f9ec"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/utils.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_UTILS_H",
						"t": "",
						"i": "_PSTL_UTILS_H",
						"r": "_PSTL_UTILS_H",
						"s": "",
						"u": "_PSTL_UTILS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c42ff3318b8bfdf295a004674cb55206799da0de"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__except_handler",
						"t": "typename std::result_of<_Fp ()>::type (_Fp)",
						"i": "__pstl::__internal::__except_handler(_Fp)",
						"r": "template <typename _Fp> typename std::result_of<_Fp ()>::type __except_handler(_Fp __f)",
						"s": "__pstl::__internal",
						"u": "__EXCEPT_HANDLER",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1dcf9cdf8fdd2b64618c5b71b257eeb811c5ac16"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if",
						"t": "void (std::true_type, _Fp)",
						"i": "__pstl::__internal::__invoke_if(std::true_type,_Fp)",
						"r": "template <typename _Fp> void __invoke_if(std::true_type, _Fp __f)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1387af231cc7f5cb4fcbe455f3c98f6f75e53970"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if",
						"t": "void (std::false_type, _Fp)",
						"i": "__pstl::__internal::__invoke_if(std::false_type,_Fp)",
						"r": "template <typename _Fp> void __invoke_if(std::false_type, _Fp __f)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de15415521dd5c52aabf9bc62b679f26e13c3d44"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if_not",
						"t": "void (std::false_type, _Fp)",
						"i": "__pstl::__internal::__invoke_if_not(std::false_type,_Fp)",
						"r": "template <typename _Fp> void __invoke_if_not(std::false_type, _Fp __f)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF_NOT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d781983e4981a38eb9c75bec766c131cfb4781e1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if_not",
						"t": "void (std::true_type, _Fp)",
						"i": "__pstl::__internal::__invoke_if_not(std::true_type,_Fp)",
						"r": "template <typename _Fp> void __invoke_if_not(std::true_type, _Fp __f)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF_NOT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9e03fab066e263b55e6f01f3b8e96508ae15817"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if_else",
						"t": "typename std::result_of<_F1 ()>::type (std::true_type, _F1, _F2)",
						"i": "__pstl::__internal::__invoke_if_else(std::true_type,_F1,_F2)",
						"r": "template <typename _F1, typename _F2> typename std::result_of<_F1 ()>::type __invoke_if_else(std::true_type, _F1 __f1, _F2 __f2)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF_ELSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03bc11f41667e629854bcd758eee14de7a94d92c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__invoke_if_else",
						"t": "typename std::result_of<_F2 ()>::type (std::false_type, _F1, _F2)",
						"i": "__pstl::__internal::__invoke_if_else(std::false_type,_F1,_F2)",
						"r": "template <typename _F1, typename _F2> typename std::result_of<_F2 ()>::type __invoke_if_else(std::false_type, _F1 __f1, _F2 __f2)",
						"s": "__pstl::__internal",
						"u": "__INVOKE_IF_ELSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99848b6ae715fd0f29b2e9cb1ef55e6c6a9f6ff7"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__no_op",
						"t": "__pstl::__internal::__no_op",
						"i": "__pstl::__internal::__no_op",
						"r": "__no_op",
						"s": "__pstl::__internal",
						"u": "__NO_OP",
						"q": "__pstl::__internal::__no_op",
						"w": "__PSTL::__INTERNAL::__NO_OP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f172b77ffc8563f0b1c8842c458a7375de942221"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_Tp &&(_Tp &&) const",
						"i": "__pstl::__internal::__no_op::operator()(_Tp&&)const",
						"r": "template <typename _Tp> _Tp&& operator()(_Tp&& __a) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__no_op",
						"w": "__PSTL::__INTERNAL::__NO_OP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7f5a01204d64b354c367bd1ee92246a16e0fbaa"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_pred",
						"t": "",
						"i": "__pstl::__internal::__not_pred",
						"r": "template <typename _Pred> __not_pred",
						"s": "__pstl::__internal",
						"u": "__NOT_PRED",
						"q": "__pstl::__internal::__not_pred",
						"w": "__PSTL::__INTERNAL::__NOT_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7e6d4a0f0c55a71e934842c767a3c5703f0654a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pred",
						"t": "_Pred",
						"i": "__pstl::__internal::__not_pred::_M_pred",
						"r": "_Pred _M_pred",
						"s": "__pstl::__internal",
						"u": "_M_PRED",
						"q": "__pstl::__internal::__not_pred",
						"w": "__PSTL::__INTERNAL::__NOT_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6494220853c7973b3b8ac0329c1faa50cfb03b47"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_pred<_Pred>",
						"t": "void (_Pred)",
						"i": "__pstl::__internal::__not_pred::__not_pred(_Pred)",
						"r": "explicit __not_pred<_Pred>(_Pred __pred)",
						"s": "__pstl::__internal",
						"u": "__NOT_PRED<_PRED>",
						"q": "__pstl::__internal::__not_pred",
						"w": "__PSTL::__INTERNAL::__NOT_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1741a06a3c6b35a94855bf8486d19b5a69c92b9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Args &&...)",
						"i": "__pstl::__internal::__not_pred::operator()(_Args&&...)",
						"r": "template <typename ..._Args> bool operator()(_Args&&...__args)",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__not_pred",
						"w": "__PSTL::__INTERNAL::__NOT_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66a45764a9ee7e10495e4cee6c94f1b06677bd19"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__reorder_pred",
						"t": "",
						"i": "__pstl::__internal::__reorder_pred",
						"r": "template <typename _Pred> __reorder_pred",
						"s": "__pstl::__internal",
						"u": "__REORDER_PRED",
						"q": "__pstl::__internal::__reorder_pred",
						"w": "__PSTL::__INTERNAL::__REORDER_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e82acef46f07a5710ef03970962e56e8d8ba677"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pred",
						"t": "_Pred",
						"i": "__pstl::__internal::__reorder_pred::_M_pred",
						"r": "_Pred _M_pred",
						"s": "__pstl::__internal",
						"u": "_M_PRED",
						"q": "__pstl::__internal::__reorder_pred",
						"w": "__PSTL::__INTERNAL::__REORDER_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6494220853c7973b3b8ac0329c1faa50cfb03b47"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__reorder_pred<_Pred>",
						"t": "void (_Pred)",
						"i": "__pstl::__internal::__reorder_pred::__reorder_pred(_Pred)",
						"r": "explicit __reorder_pred<_Pred>(_Pred __pred)",
						"s": "__pstl::__internal",
						"u": "__REORDER_PRED<_PRED>",
						"q": "__pstl::__internal::__reorder_pred",
						"w": "__PSTL::__INTERNAL::__REORDER_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "420e853082fd5482d71b4f7bb0f095692395218b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_FTp &&, _STp &&)",
						"i": "__pstl::__internal::__reorder_pred::operator()(_FTp&&,_STp&&)",
						"r": "template <typename _FTp, typename _STp> bool operator()(_FTp&& __a, _STp&& __b)",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__reorder_pred",
						"w": "__PSTL::__INTERNAL::__REORDER_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cd2f39f02d414b45c2afa94e24ed1daac80ac92"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pstl_equal",
						"t": "__pstl::__internal::__pstl_equal",
						"i": "__pstl::__internal::__pstl_equal",
						"r": "__pstl_equal",
						"s": "__pstl::__internal",
						"u": "__PSTL_EQUAL",
						"q": "__pstl::__internal::__pstl_equal",
						"w": "__PSTL::__INTERNAL::__PSTL_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b806afe10ed14781b3df9b2c18a99c2c04702cc"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pstl_equal",
						"t": "void ()",
						"i": "__pstl::__internal::__pstl_equal::__pstl_equal()",
						"r": "explicit __pstl_equal()",
						"s": "__pstl::__internal",
						"u": "__PSTL_EQUAL",
						"q": "__pstl::__internal::__pstl_equal",
						"w": "__PSTL::__INTERNAL::__PSTL_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "480eaa5c0fa7ad98b9a932c9a5fa765732821a36"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Xp &&, _Yp &&) const",
						"i": "__pstl::__internal::__pstl_equal::operator()(_Xp&&,_Yp&&)const",
						"r": "template <typename _Xp, typename _Yp> bool operator()(_Xp&& __x, _Yp&& __y) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__pstl_equal",
						"w": "__PSTL::__INTERNAL::__PSTL_EQUAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0e3f022318372559079b389ddf70bd3324c6065"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pstl_less",
						"t": "__pstl::__internal::__pstl_less",
						"i": "__pstl::__internal::__pstl_less",
						"r": "__pstl_less",
						"s": "__pstl::__internal",
						"u": "__PSTL_LESS",
						"q": "__pstl::__internal::__pstl_less",
						"w": "__PSTL::__INTERNAL::__PSTL_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6547208d055deda45a9be1f3a4863e25b908721"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pstl_less",
						"t": "void ()",
						"i": "__pstl::__internal::__pstl_less::__pstl_less()",
						"r": "explicit __pstl_less()",
						"s": "__pstl::__internal",
						"u": "__PSTL_LESS",
						"q": "__pstl::__internal::__pstl_less",
						"w": "__PSTL::__INTERNAL::__PSTL_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1063e766535f78ec8ab3760c7b095d2f3c244fc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Xp &&, _Yp &&) const",
						"i": "__pstl::__internal::__pstl_less::operator()(_Xp&&,_Yp&&)const",
						"r": "template <typename _Xp, typename _Yp> bool operator()(_Xp&& __x, _Yp&& __y) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__pstl_less",
						"w": "__PSTL::__INTERNAL::__PSTL_LESS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "157c867ee2aed0c083ac5b664440258a77cf8dc7"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_value_by_pred",
						"t": "",
						"i": "__pstl::__internal::__equal_value_by_pred",
						"r": "template <typename _Tp, typename _Predicate> __equal_value_by_pred",
						"s": "__pstl::__internal",
						"u": "__EQUAL_VALUE_BY_PRED",
						"q": "__pstl::__internal::__equal_value_by_pred",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE_BY_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "948e63d9c3e10274bed4eb281e554fce7e6b140e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_value",
						"t": "const _Tp &",
						"i": "__pstl::__internal::__equal_value_by_pred::_M_value",
						"r": "const _Tp& _M_value",
						"s": "__pstl::__internal",
						"u": "_M_VALUE",
						"q": "__pstl::__internal::__equal_value_by_pred",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE_BY_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6de15ec11139c0e90845f0e094800ad77301bb76"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_pred",
						"t": "_Predicate",
						"i": "__pstl::__internal::__equal_value_by_pred::_M_pred",
						"r": "_Predicate _M_pred",
						"s": "__pstl::__internal",
						"u": "_M_PRED",
						"q": "__pstl::__internal::__equal_value_by_pred",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE_BY_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3d295cd05a1d8101cd9b0fbec012822a1f6d9fa"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_value_by_pred<_Tp, _Predicate>",
						"t": "void (const _Tp &, _Predicate)",
						"i": "__pstl::__internal::__equal_value_by_pred::__equal_value_by_pred(const _Tp&,_Predicate)",
						"r": "__equal_value_by_pred<_Tp, _Predicate>(const _Tp& __value, _Predicate __pred)",
						"s": "__pstl::__internal",
						"u": "__EQUAL_VALUE_BY_PRED<_TP, _PREDICATE>",
						"q": "__pstl::__internal::__equal_value_by_pred",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE_BY_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a51d488f88ea9e70d6bc1611028cd2c6200db14"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Arg &&)",
						"i": "__pstl::__internal::__equal_value_by_pred::operator()(_Arg&&)",
						"r": "template <typename _Arg> bool operator()(_Arg&& __arg)",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__equal_value_by_pred",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE_BY_PRED",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a42d90be68983257b537a60ccf0b33a3cb9a8bea"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_value",
						"t": "",
						"i": "__pstl::__internal::__equal_value",
						"r": "template <typename _Tp> __equal_value",
						"s": "__pstl::__internal",
						"u": "__EQUAL_VALUE",
						"q": "__pstl::__internal::__equal_value",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75e92ee7356e8fa6ad29f6aecd0c7dbc9d1c7474"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_value",
						"t": "const _Tp &",
						"i": "__pstl::__internal::__equal_value::_M_value",
						"r": "const _Tp& _M_value",
						"s": "__pstl::__internal",
						"u": "_M_VALUE",
						"q": "__pstl::__internal::__equal_value",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6de15ec11139c0e90845f0e094800ad77301bb76"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__equal_value<_Tp>",
						"t": "void (const _Tp &)",
						"i": "__pstl::__internal::__equal_value::__equal_value(const _Tp&)",
						"r": "explicit __equal_value<_Tp>(const _Tp& __value)",
						"s": "__pstl::__internal",
						"u": "__EQUAL_VALUE<_TP>",
						"q": "__pstl::__internal::__equal_value",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9799ad44e5a39c2c6e6a29ab1935f60960dda9ee"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Arg &&) const",
						"i": "__pstl::__internal::__equal_value::operator()(_Arg&&)const",
						"r": "template <typename _Arg> bool operator()(_Arg&& __arg) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__equal_value",
						"w": "__PSTL::__INTERNAL::__EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8f4d4f9aa70137ef3be3141cc01589c4b78145f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_equal_value",
						"t": "",
						"i": "__pstl::__internal::__not_equal_value",
						"r": "template <typename _Tp> __not_equal_value",
						"s": "__pstl::__internal",
						"u": "__NOT_EQUAL_VALUE",
						"q": "__pstl::__internal::__not_equal_value",
						"w": "__PSTL::__INTERNAL::__NOT_EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd57fd20a5c228d4ef2592233c4e0d006100b2e6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_value",
						"t": "const _Tp &",
						"i": "__pstl::__internal::__not_equal_value::_M_value",
						"r": "const _Tp& _M_value",
						"s": "__pstl::__internal",
						"u": "_M_VALUE",
						"q": "__pstl::__internal::__not_equal_value",
						"w": "__PSTL::__INTERNAL::__NOT_EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6de15ec11139c0e90845f0e094800ad77301bb76"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__not_equal_value<_Tp>",
						"t": "void (const _Tp &)",
						"i": "__pstl::__internal::__not_equal_value::__not_equal_value(const _Tp&)",
						"r": "explicit __not_equal_value<_Tp>(const _Tp& __value)",
						"s": "__pstl::__internal",
						"u": "__NOT_EQUAL_VALUE<_TP>",
						"q": "__pstl::__internal::__not_equal_value",
						"w": "__PSTL::__INTERNAL::__NOT_EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4c236d5a7c9c327057cfa4e2e4c5b40daff3e4e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (_Arg &&) const",
						"i": "__pstl::__internal::__not_equal_value::operator()(_Arg&&)const",
						"r": "template <typename _Arg> bool operator()(_Arg&& __arg) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__not_equal_value",
						"w": "__PSTL::__INTERNAL::__NOT_EQUAL_VALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae064743e855c9bc1e06420b7c94f89a7763666d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__cmp_iterators_by_values",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare)",
						"i": "__pstl::__internal::__cmp_iterators_by_values(_ForwardIterator,_ForwardIterator,_Compare)",
						"r": "template <typename _ForwardIterator, typename _Compare> _ForwardIterator __cmp_iterators_by_values(_ForwardIterator __a, _ForwardIterator __b, _Compare __comp)",
						"s": "__pstl::__internal",
						"u": "__CMP_ITERATORS_BY_VALUES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "398e90b4779f9b53db77632f603be873c8c2fccd"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/algorithm_fwd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_ALGORITHM_FWD_H",
						"t": "",
						"i": "_PSTL_ALGORITHM_FWD_H",
						"r": "_PSTL_ALGORITHM_FWD_H",
						"s": "",
						"u": "_PSTL_ALGORITHM_FWD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7b8f89c8b5b4add9e8a943ff7d801d729335d43"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_any_of",
						"t": "bool (const _ForwardIterator, const _ForwardIterator, _Pred, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_any_of(const _ForwardIterator,const _ForwardIterator,_Pred,std::false_type)",
						"r": "template <class _ForwardIterator, class _Pred> bool __brick_any_of(const _ForwardIterator, const _ForwardIterator, _Pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66f4e71732dfc3e3d10c79568be3a4f53b8853b0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_any_of",
						"t": "bool (const _ForwardIterator, const _ForwardIterator, _Pred, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_any_of(const _ForwardIterator,const _ForwardIterator,_Pred,std::true_type)",
						"r": "template <class _ForwardIterator, class _Pred> bool __brick_any_of(const _ForwardIterator, const _ForwardIterator, _Pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5f27c9a9383ccdd88886d71b9263ab7361a3400"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_any_of",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Pred,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Pred, class _IsVector> bool __pattern_any_of(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e27144fbd1413450b43a58e546d3b146339dafc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_any_of",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Pred,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Pred, class _IsVector> bool __pattern_any_of(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c764915493de4c8410e68951d7bdb589ac33148d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk1",
						"t": "void (_ForwardIterator, _ForwardIterator, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1(_ForwardIterator,_ForwardIterator,_Function,std::false_type)",
						"r": "template <class _ForwardIterator, class _Function> void __brick_walk1(_ForwardIterator, _ForwardIterator, _Function, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25932554e46d385b96263f176a0353e9cf38173f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk1",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1(_RandomAccessIterator,_RandomAccessIterator,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Function> void __brick_walk1(_RandomAccessIterator, _RandomAccessIterator, _Function, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd41bc8c7d4f9cafa3cd47e239a0ee35e8f72d7e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk1(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function, class _IsVector> void __pattern_walk1(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "888fb2b9c7e434ffb044f47e4ac098215ff62b92"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk1(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function, class _IsVector> void __pattern_walk1(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d5746ab492f188d9878e358f3ea2f9599cd1b63"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk_brick(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Brick> void __pattern_walk_brick(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1a2dfbcf0553c6106404968e2a07712b2bee71d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk_brick(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Brick> void __pattern_walk_brick(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f07fe4e03edd9255e78e554b05f46fa3ce52af0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk1_n",
						"t": "_ForwardIterator (_ForwardIterator, _Size, _Function, std::false_type)",
						"i": "__pstl::__internal::__brick_walk1_n(_ForwardIterator,_Size,_Function,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Function> _ForwardIterator __brick_walk1_n(_ForwardIterator, _Size, _Function, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db866617dc213929e680df659edb3b700d8a469b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk1_n",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _DifferenceType, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1_n(_RandomAccessIterator,_DifferenceType,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _DifferenceType, class _Function> _RandomAccessIterator __brick_walk1_n(_RandomAccessIterator, _DifferenceType, _Function, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7b9fb60f5426935e6cbe080a14488009ff739b3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _Size, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk1_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Function, class _IsVector> _ForwardIterator __pattern_walk1_n(_ExecutionPolicy&&, _ForwardIterator, _Size, _Function, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08735de5a387354a4e6f9a914b4871685dea9076"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _Size, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk1_n(_ExecutionPolicy&&,_RandomAccessIterator,_Size,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Function, class _IsVector> _RandomAccessIterator __pattern_walk1_n(_ExecutionPolicy&&, _RandomAccessIterator, _Size, _Function, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc0f80b8605cbda4a88db8620a315884273a0796"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _Size, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk_brick_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Brick> _ForwardIterator __pattern_walk_brick_n(_ExecutionPolicy&&, _ForwardIterator, _Size, _Brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ac88afb20b360494c11066169f96cd80a66aedd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _Size, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk_brick_n(_ExecutionPolicy&&,_RandomAccessIterator,_Size,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Brick> _RandomAccessIterator __pattern_walk_brick_n(_ExecutionPolicy&&, _RandomAccessIterator, _Size, _Brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "551fa2b125ab89945040cd75f379170a603af9f3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk2",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5706bacbabdcd024e22ceda4d00efe9f60a080a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk2",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db1b3ee36d55903f174881a6580ba06b4a0c8bdb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk2_n",
						"t": "_ForwardIterator2 (_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2_n(_ForwardIterator1,_Size,_ForwardIterator2,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2_n(_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7a08bbb66e8de2b3f8d08676a854ac85d391f07"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk2_n",
						"t": "_ForwardIterator2 (_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2_n(_ForwardIterator1,_Size,_ForwardIterator2,_Function,std::true_type)",
						"r": "template <class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2_n(_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a2a2af9ffc67d545861a98288597794958ec82e7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a37b4cb6ed45aabc1d530d04ba1b751e968340fb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "311debebff238864b531925d6a636455d7b2718a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_n",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2_n(_ExecutionPolicy&&, _ForwardIterator1, _Size, _ForwardIterator2, _Function, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03ee232c5f95378cc1747e889e56c19f623faedd"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_n",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_n(_ExecutionPolicy&&,_RandomAccessIterator1,_Size,_RandomAccessIterator2,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _Size, class _RandomAccessIterator2, class _Function, class _IsVector> _RandomAccessIterator2 __pattern_walk2_n(_ExecutionPolicy&&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Function, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c0b449b775774a32d692f42e2e5b54394ae33a44"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_brick(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Brick> _ForwardIterator2 __pattern_walk2_brick(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef44edf51d3062755b2f1848697ef23d04f2cc0a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_brick(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Brick> _RandomAccessIterator2 __pattern_walk2_brick(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80e9d2ab8de19c850f8c25d3ebf110d06e7e43dc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick_n",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_brick_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Brick> _ForwardIterator2 __pattern_walk2_brick_n(_ExecutionPolicy&&, _ForwardIterator1, _Size, _ForwardIterator2, _Brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93bbf3b619a7f20bd4770e7a125cd3357ee9b84f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick_n",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_brick_n(_ExecutionPolicy&&,_RandomAccessIterator1,_Size,_RandomAccessIterator2,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _Size, class _RandomAccessIterator2, class _Brick> _RandomAccessIterator2 __pattern_walk2_brick_n(_ExecutionPolicy&&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb99a0f8c07c196ac6a311f9e9e6a3adfe42486c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk3",
						"t": "_ForwardIterator3 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk3(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator3,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator3, class _Function> _ForwardIterator3 __brick_walk3(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bfbfa821d799995b5da1e93a90d768749b4e749"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_walk3",
						"t": "_RandomAccessIterator3 (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk3(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator3,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _RandomAccessIterator3, class _Function> _RandomAccessIterator3 __brick_walk3(_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84c22e17144ff9be4c5c2fed1114f0c6ba01ffcc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk3",
						"t": "_ForwardIterator3 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk3(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator3,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator3, class _Function, class _IsVector> _ForwardIterator3 __pattern_walk3(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e814e480c5c7e750ae42367dd3a8b8778b3d439"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_walk3",
						"t": "_RandomAccessIterator3 (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk3(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator3,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _RandomAccessIterator3, class _Function, class _IsVector> _RandomAccessIterator3 __pattern_walk3(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5a9f1e11efcaa7a12464ba37ab9c06799f96ebc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> bool __brick_equal(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "375b8dcabc1947856915bc72999da5d740237fca"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate> bool __brick_equal(_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0817b150ebf47c98beb97a20d406db2f637fa0d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ee79787d5ea158b830aef46e1090f0904ad07ae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "22ca317fa133c95ecf71d71936484f9ec9b7ad12"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> bool __brick_equal(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49bc74ca48c57c65e570e2566c6ebdeed7ff407c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate> bool __brick_equal(_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2d4948025e7fc79dcf116f2ee4253053a5855ef"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c102cf9b90585c0ae568717f804f88be0717d32"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "564e331ba4adf0d8535a28e03fa465b73ba31a3b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_if",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_if(_ForwardIterator,_ForwardIterator,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Predicate> _ForwardIterator __brick_find_if(_ForwardIterator, _ForwardIterator, _Predicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64a146edbe0584309f788c78af38fd9bf8119340"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_if",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_if(_RandomAccessIterator,_RandomAccessIterator,_Predicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Predicate> _RandomAccessIterator __brick_find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0bf492a3b6de6705bc61330df620cc13c2559cb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> _ForwardIterator __pattern_find_if(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65fa401ba9ec7a5c7b7fe0923301a61c08819fa6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> _ForwardIterator __pattern_find_if(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87360b3db727a96a44a64f88c1a822cdaec41380"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_end(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_end(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dca0ed104af589d339a2feda6817c7600bcd6557"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_end(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_end(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af59d998bda3e580e25bed95adb6207ed5a19b75"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_end",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_end(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5979092e24e0d5a6c1cc843177d866e698798276"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_end",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_end(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76474ea5898ae879c73c5026d13144f3bed93003"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_first_of(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_first_of(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7898b04e005ee716ca0699d1b2da37ded5049bb8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_first_of(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_first_of(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8850d48744ad14a984a735363cabab6a06d04e5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_first_of",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_first_of(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2fcd5c92cd877b339ff9b83575483966fd2507ae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_find_first_of",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_first_of(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7015f07b8510c83c2d080525a981187d5f0289d8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_search(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c4263982ec49cb2e8c3951f7dee89e805999175"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_search(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "842246a64dec9796b8cdd23b076998c5536c46ff"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_search",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_search(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "007289970043f055ef29f527878f22f92619e049"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_search",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_search(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47094cd9a0299fa95d3f8810b3538b6c0d785c30"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_search_n(_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> _ForwardIterator __brick_search_n(_ForwardIterator, _ForwardIterator, _Size, const _Tp&, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "63bd9cb1c45ed7b652bd1835767beaafb015fe47"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_search_n(_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> _ForwardIterator __brick_search_n(_ForwardIterator, _ForwardIterator, _Size, const _Tp&, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5e48eaa87e716b361b56bd77c8fdfbefd14668a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_search_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_search_n(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Size, const _Tp&, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2efaca8b3dec5ae665d897cb64ceb42ce660aea1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_search_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Size, const _Tp &, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_search_n(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Size,const _Tp&,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Tp, class _BinaryPredicate, class _IsVector> _RandomAccessIterator __pattern_search_n(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Size, const _Tp&, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f47c7499dc0b415b5b34cd217182e96860d4a3db"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_n",
						"t": "_OutputIterator (_ForwardIterator, _Size, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_n(_ForwardIterator,_Size,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _OutputIterator> _OutputIterator __brick_copy_n(_ForwardIterator, _Size, _OutputIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9b4cf823377e56106e7d6c55c33623a203ab046"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_n",
						"t": "_OutputIterator (_ForwardIterator, _Size, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_n(_ForwardIterator,_Size,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _Size, class _OutputIterator> _OutputIterator __brick_copy_n(_ForwardIterator, _Size, _OutputIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b025ff772a0eabcc71d59035dde96b2da499f2c1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_copy(_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e9b320fabcb1fdf610bfb49a198bfcad0be151c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator> _OutputIterator __brick_copy(_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "890ab7b38b1bcc7e6b6eebde141061d021b9926a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_move",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_move(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_move(_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82e8af62e035f0d7ef1e17cc9de49e436d805761"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_move",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_move(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator> _OutputIterator __brick_move(_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6de9648fbc2377c9b1ec4cf38300dc2e611c5fc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_swap_ranges",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_swap_ranges(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_swap_ranges(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SWAP_RANGES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3094d3771cebdf88b7c657425fedb7b9d43ea4af"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_swap_ranges",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_swap_ranges(_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_swap_ranges(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SWAP_RANGES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9fc23004fb07c1429b1a4582d9b4a10b00b80b3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_if",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_if(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryPredicate> _OutputIterator __brick_copy_if(_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "765e5dc3d3b61809f4d5c9ddb875283fe51fb04b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_if",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_if(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryPredicate> _OutputIterator __brick_copy_if(_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa3fe8fe5e6c5d855282902816569066afeba023"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_1",
						"t": "std::pair<_DifferenceType, _DifferenceType> (_ForwardIterator, _ForwardIterator, bool *__restrict, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_1(_ForwardIterator,_ForwardIterator,bool*,_UnaryPredicate,std::false_type)",
						"r": "template <class _DifferenceType, class _ForwardIterator, class _UnaryPredicate> pair<_DifferenceType, _DifferenceType> __brick_calc_mask_1(_ForwardIterator, _ForwardIterator, bool *__restrict, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a912d1b8e618ac24d95891feac23e1bbb7127df7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_1",
						"t": "std::pair<_DifferenceType, _DifferenceType> (_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_1(_RandomAccessIterator,_RandomAccessIterator,bool*,_UnaryPredicate,std::true_type)",
						"r": "template <class _DifferenceType, class _RandomAccessIterator, class _UnaryPredicate> pair<_DifferenceType, _DifferenceType> __brick_calc_mask_1(_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f853628567dbbaf4de6f72ed9893c8beb82ec28e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator, bool *, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator,bool*,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> void __brick_copy_by_mask(_ForwardIterator, _ForwardIterator, _OutputIterator, bool *, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b37141635e0473e910ed467609a89c440316dd7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_copy_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator, bool *__restrict, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator,bool*,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> void __brick_copy_by_mask(_ForwardIterator, _ForwardIterator, _OutputIterator, bool *__restrict, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26eedc1ff52dde3c09cbf3d8eab5534704fb252d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, bool *, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,bool*,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2> void __brick_partition_by_mask(_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, bool *, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca5785c104d2a5140439f225a8b06f446e08319c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition_by_mask",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, bool *, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_by_mask(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator1,_OutputIterator2,bool*,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator1, class _OutputIterator2> void __brick_partition_by_mask(_RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, bool *, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6f43a9aeb440996c91c396b663096068c83fe14"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_copy_if",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_copy_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _UnaryPredicate, class _IsVector> _OutputIterator __pattern_copy_if(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1e04c1c977c47776cd743681226090f9f33d950"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_copy_if",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_copy_if(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryPredicate, class _IsVector> _OutputIterator __pattern_copy_if(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b15e91a6f42d0c63bb4e230cde5ad359dcdc9910"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ForwardIterator, _ForwardIterator, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_count(_ForwardIterator,_ForwardIterator,_Predicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _Predicate> typename std::iterator_traits<_ForwardIterator>::difference_type __brick_count(_ForwardIterator, _ForwardIterator, _Predicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66f6ddad9d6680156340931dc522e48ebd7667d6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ForwardIterator, _ForwardIterator, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_count(_ForwardIterator,_ForwardIterator,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Predicate> typename std::iterator_traits<_ForwardIterator>::difference_type __brick_count(_ForwardIterator, _ForwardIterator, _Predicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a190fac147810c9589b1fd7ee068e63b9415c0a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> typename std::iterator_traits<_ForwardIterator>::difference_type __pattern_count(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Predicate, std::false_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc5f3a36dcbbd33faa57e6b8383122d5dacad15f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> typename std::iterator_traits<_ForwardIterator>::difference_type __pattern_count(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Predicate, std::true_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ed5144cfba87fafd1131b771e25b3e8ee1fd6ec"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_unique(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8ef229cb5fbf90180493c245fc73913be53b81b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_unique(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d77f84b7449da907a6dfa4f5a51079f4da81786"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_unique",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_unique(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2526c36de66d7de5e1bcc64b6e83f787f05d440a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_unique",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_unique(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e40ca41ca917c40a344d0afc7ec4ff3b332de840"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_unique_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_unique_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _BinaryPredicate> _OutputIterator __brick_unique_copy(_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01fa885d2e192deb6ba893291be678d3f1418fa6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_unique_copy",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_unique_copy(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator, class _BinaryPredicate> _OutputIterator __brick_unique_copy(_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9d4937d75c9b15bb1e84efa6d2dd7d95a3698c4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_unique_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _BinaryPredicate, class _IsVector> _OutputIterator __pattern_unique_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bfed9d5370abd44878034816ec61e7d88cc1d7d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_2",
						"t": "_DifferenceType (_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_2(_RandomAccessIterator,_RandomAccessIterator,bool*,_BinaryPredicate,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _DifferenceType, class _RandomAccessIterator, class _BinaryPredicate> _DifferenceType __brick_calc_mask_2(_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3cbc57bae269e9610925caa5cd3baebaf11ac5b7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_2",
						"t": "_DifferenceType (_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_2(_RandomAccessIterator,_RandomAccessIterator,bool*,_BinaryPredicate,std::true_type)",
						"r": "template <class _DifferenceType, class _RandomAccessIterator, class _BinaryPredicate> _DifferenceType __brick_calc_mask_2(_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f599a6a4ae8dad6be8c47293010cfba235c5544"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_unique_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_unique_copy(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _BinaryPredicate, class _IsVector> _OutputIterator __pattern_unique_copy(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5852516c5e9dbbcac6924a1d3b337ee434e70de7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator, _BidirectionalIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cff63f36d90e53e95fd2f21de5b94408d7f8c0c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator, _BidirectionalIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84d080091b9aaf60198dbe49f074bef62f401eaf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54698d80e8c66322aa0475a0e17ffad75fbfc2f8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1937dfc3704a77eb1fa80c945b22edbe19df567"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _IsVector> void __pattern_reverse(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "219000ecdfc50a29853858d4a6fd08b85e3b8f99"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _IsVector> void __pattern_reverse(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15694009b42d702fe80afde701edb9d175f0860e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse_copy",
						"t": "_OutputIterator (_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse_copy(_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _OutputIterator> _OutputIterator __brick_reverse_copy(_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0ce39d7195c2e086c13ee05bed7e5f324dbc2d2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_reverse_copy",
						"t": "_OutputIterator (_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse_copy(_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _OutputIterator> _OutputIterator __brick_reverse_copy(_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e435181fa4140d5428542d81f28cf80caed2845"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_reverse_copy(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb9b9e13fc16489f84ce0b706977f3d3b67da9ea"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_reverse_copy(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c6e436d73a33f79274bb7770b51f8f81774f344"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_rotate",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate(_ForwardIterator,_ForwardIterator,_ForwardIterator,std::false_type)",
						"r": "template <class _ForwardIterator> _ForwardIterator __brick_rotate(_ForwardIterator, _ForwardIterator, _ForwardIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f0b128d2c500f32a565861df941e523d8d07c71"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_rotate",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate(_ForwardIterator,_ForwardIterator,_ForwardIterator,std::true_type)",
						"r": "template <class _ForwardIterator> _ForwardIterator __brick_rotate(_ForwardIterator, _ForwardIterator, _ForwardIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9606d7b7dd89587942dfa850555ac70dc859ac86"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _IsVector> _ForwardIterator __pattern_rotate(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3266536e0ab4e39dfaf85f4158f9685e6c66c494"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _IsVector> _ForwardIterator __pattern_rotate(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a90414ae0b18cded771c32ba8f9e559641b0621d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_rotate_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate_copy(_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_rotate_copy(_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6029c7178802cda803f0545d2728cbad14d29faf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_rotate_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate_copy(_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_rotate_copy(_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "050a1e13e01bf21f92b7c4b591305021cd223e08"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_rotate_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_rotate_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c90e769028a0b3ab2e8f80f9e523b99895fac1f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_rotate_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_rotate_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06fdbf25b49bf06c8fa1a0c004171cdfe33e9104"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_is_partitioned",
						"t": "bool (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_is_partitioned(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> bool __brick_is_partitioned(_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43d18b7bc8e42f6379c5fa9b82cf052a42e8013f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_is_partitioned",
						"t": "bool (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_is_partitioned(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> bool __brick_is_partitioned(_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8999063c2a78e6e9f42c345be939767ef33a8b67"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_is_partitioned",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> bool __pattern_is_partitioned(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ce231ef3c847de35b8134ab3015f5fe7a29bad3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_is_partitioned",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> bool __pattern_is_partitioned(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a32b609d22eda789dcf4601dc74f01c820e17c18"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_partition(_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8680251583a7e1e957522be8edc5826a0c387d04"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_partition(_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf19438f13322a3cf739180a8e3f2cdb740a9fe1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partition",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_partition(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a242d374f673a858f4fc7b700bb96b40ee094b41"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partition",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_partition(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09980d45259ad9b2ea3f3fc5c8763c612f713c4a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_stable_partition",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_stable_partition(_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _UnaryPredicate> _BidirectionalIterator __brick_stable_partition(_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "968c722e201ac1a20d0f427d81ca649b0c11804d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_stable_partition",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_stable_partition(_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _UnaryPredicate> _BidirectionalIterator __brick_stable_partition(_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47560426a2662272aeb9380c696a15d74e46655b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_partition",
						"t": "_BidirectionalIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate, class _IsVector> _BidirectionalIterator __pattern_stable_partition(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df79de2eefcba6b9fecc1b44e1a58b32340b194f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_partition",
						"t": "_BidirectionalIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate, class _IsVector> _BidirectionalIterator __pattern_stable_partition(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b6798ef6c097dab4190f287820cd4c7e1d83d34"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_copy(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate> pair<_OutputIterator1, _OutputIterator2> __brick_partition_copy(_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20db9741a3aa3531ac0242a90c61bba43b310784"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_copy(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate> pair<_OutputIterator1, _OutputIterator2> __brick_partition_copy(_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1506746105748f96622a68c76d59b055ed325f6b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partition_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate, class _IsVector> pair<_OutputIterator1, _OutputIterator2> __pattern_partition_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3efde1697dd9e93ed2fc35edf8f2795c6c1941f1"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partition_copy(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate, class _IsVector> pair<_OutputIterator1, _OutputIterator2> __pattern_partition_copy(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2807d692fd864584e6b9ef46fd4ccac50053a3b9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type, _IsMoveConstructible) noexcept",
						"i": "__pstl::__internal::__pattern_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type,_IsMoveConstructible)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector, class _IsMoveConstructible> void __pattern_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type, _IsMoveConstructible)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff1443f460e05ac7de014067409a2b86a5c1b321"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type, std::true_type)",
						"i": "__pstl::__internal::__pattern_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab14d07a8769421059b9b32f13226cad6b4c3d67"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_stable_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "930b85e715fe98cf0332dbec4902dcd84b72fd7f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_stable_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e33ee020ece3354917f4244d11eade2437c27d21"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_partial_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "046db41915ccd49fecf7dbf9c3018faa7d76fffe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_partial_sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba64104651a5cc0a20a8276f0304c42fef39e0e5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort_copy",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_partial_sort_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab6eaf74d92d3927eed134ff126ef801c9307c5b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort_copy",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_partial_sort_copy(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c81e57ee9df12f1dc0c1f113845a1af96e5eeee5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type, bool) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_find(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::true_type,bool)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_adjacent_find(_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type, bool)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3efe7c438ff674231c57b862fb6b745b3012c5d8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, bool) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_find(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type,bool)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_adjacent_find(_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, bool)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bd82dad94bb18751418b3a6b983d98fdbd39d8d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_find",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, _IsVector, bool) noexcept",
						"i": "__pstl::__internal::__pattern_adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type,_IsVector,bool)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_adjacent_find(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, _IsVector, bool)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32823df99f69ed1b5b0d007e7814956b4a4f4fe8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_find",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _BinaryPredicate, std::true_type, _IsVector, bool)",
						"i": "__pstl::__internal::__pattern_adjacent_find(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_BinaryPredicate,std::true_type,_IsVector,bool)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _BinaryPredicate, class _IsVector> _RandomAccessIterator __pattern_adjacent_find(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _BinaryPredicate, std::true_type, _IsVector, bool)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e5e1cbefc4b9e4e60dd36899220e5c849235ca6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_nth_element",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_nth_element(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_NTH_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec9b48e270b4805c7af8c1beebe12958cd0ac991"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_nth_element",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_nth_element(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_NTH_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe65cd44880767ea38eaabfc22745698ff7e2f95"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_fill(_ForwardIterator,_ForwardIterator,const _Tp&,std::true_type)",
						"r": "template <class _ForwardIterator, class _Tp> void __brick_fill(_ForwardIterator, _ForwardIterator, const _Tp&, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0a443fc23f685ce385f407e23b5300ffdcb9d3c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_fill(_ForwardIterator,_ForwardIterator,const _Tp&,std::false_type)",
						"r": "template <class _ForwardIterator, class _Tp> void __brick_fill(_ForwardIterator, _ForwardIterator, const _Tp&, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83ac1d1fe21111f9318118b5e46c4b4c06248afc"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_fill",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _IsVector> void __pattern_fill(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, const _Tp&, std::false_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ab449d0162c6c37d7df89a9ec91e866065ae2ed"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_fill",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _IsVector> _ForwardIterator __pattern_fill(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, const _Tp&, std::true_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b4370b39df631b477da7818a9b431f364feb5e7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_fill_n(_OutputIterator,_Size,const _Tp&,std::true_type)",
						"r": "template <class _OutputIterator, class _Size, class _Tp> _OutputIterator __brick_fill_n(_OutputIterator, _Size, const _Tp&, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6e307ad348aa9fca3b25340cc2415ddc0bcfd64"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_fill_n(_OutputIterator,_Size,const _Tp&,std::false_type)",
						"r": "template <class _OutputIterator, class _Size, class _Tp> _OutputIterator __brick_fill_n(_OutputIterator, _Size, const _Tp&, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "02c3bd7b0f66992a84ee3a912acbda0f8ade98b8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_fill_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, const _Tp &, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_fill_n(_ExecutionPolicy&&,_OutputIterator,_Size,const _Tp&,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Tp, class _IsVector> _OutputIterator __pattern_fill_n(_ExecutionPolicy&&, _OutputIterator, _Size, const _Tp&, std::false_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c18af5d980cf979ca528640a80b58794cba7f84"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_fill_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, const _Tp &, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_fill_n(_ExecutionPolicy&&,_OutputIterator,_Size,const _Tp&,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Tp, class _IsVector> _OutputIterator __pattern_fill_n(_ExecutionPolicy&&, _OutputIterator, _Size, const _Tp&, std::true_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc82c130f0661ccab2738584e28e7e72912b9b0e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_generate",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Generator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_generate(_RandomAccessIterator,_RandomAccessIterator,_Generator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Generator> void __brick_generate(_RandomAccessIterator, _RandomAccessIterator, _Generator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7834f64873f39599db1dbbf760b763a1172da876"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_generate",
						"t": "void (_ForwardIterator, _ForwardIterator, _Generator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_generate(_ForwardIterator,_ForwardIterator,_Generator,std::false_type)",
						"r": "template <class _ForwardIterator, class _Generator> void __brick_generate(_ForwardIterator, _ForwardIterator, _Generator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14d9f64059b76c50ef89cc3bcb9cfe523f471562"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_generate",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator, class _IsVector> void __pattern_generate(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Generator, std::false_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b55ca75775cbc374968a63c2f3f45dc68a9ccf7"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_generate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator, class _IsVector> _ForwardIterator __pattern_generate(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Generator, std::true_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5f43308cb8911a92cd1fc0a50d4e13f7d438dcf"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_generate_n(_OutputIterator,_Size,_Generator,std::true_type)",
						"r": "template <class _OutputIterator, class _Size, class _Generator> _OutputIterator __brick_generate_n(_OutputIterator, _Size, _Generator, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8a499489243f0f0293b82ae290f0c26d60aaced"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_generate_n(_OutputIterator,_Size,_Generator,std::false_type)",
						"r": "template <class _OutputIterator, class _Size, class _Generator> _OutputIterator __brick_generate_n(_OutputIterator, _Size, _Generator, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "072d8f93767f83c6d3a8f8116ad18c554669478c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_generate_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, _Generator, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_generate_n(_ExecutionPolicy&&,_OutputIterator,_Size,_Generator,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Generator, class _IsVector> _OutputIterator __pattern_generate_n(_ExecutionPolicy&&, _OutputIterator, _Size, _Generator, std::false_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f6cfe5de2560a8a6442ecbdebb3a9a87720e05fe"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_generate_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, _Generator, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_generate_n(_ExecutionPolicy&&,_OutputIterator,_Size,_Generator,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Generator, class _IsVector> _OutputIterator __pattern_generate_n(_ExecutionPolicy&&, _OutputIterator, _Size, _Generator, std::true_type, _IsVector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51d906106448f8b8ea51ca318927d16386ef955a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_remove_if",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_remove_if(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_remove_if(_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d73e37b3f3e7d0993a99ad53ef32b2ebe7d996a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_remove_if",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_remove_if(_RandomAccessIterator,_RandomAccessIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _UnaryPredicate> _RandomAccessIterator __brick_remove_if(_RandomAccessIterator, _RandomAccessIterator, _UnaryPredicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2e8a9af0b64e88da33ed9acf7b7b214f4946d56"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_remove_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_remove_if(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2dada21c4232228184aad0810df031f1e89f8c33"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_remove_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_remove_if(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "07dcd3e5aa7374ec99b39b633e88c3a6a1a0a3e2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_merge",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_merge(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_merge(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c32a1dd87b38d4f292c2126ddfc894d326e98b99"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_merge",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_merge(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_merge(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f81464a4e957b5121fc47930c15cae992ea971d0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_merge",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_merge(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "79817596e31d55917a9a0333e7dd77ee0549f1eb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_merge",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_merge(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_merge(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd5284a888e8332420fd9e9677ef449ed2f6842a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_inplace_merge(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _Compare> void __brick_inplace_merge(_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3131e8a9634e940dfcdf5d607d99001db8f38566"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_inplace_merge(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _Compare> void __brick_inplace_merge(_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76b91a487f01cf408656dae789c7d9e0f0524bd8"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_inplace_merge",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare, class _IsVector> void __pattern_inplace_merge(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3440fd466d08f75fa73418f7e08959420569ce5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_inplace_merge",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare, class _IsVector> void __pattern_inplace_merge(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "126ce826898b8abcc28244703c32cff637ba05c0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_includes",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_includes(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INCLUDES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e0d46cba4d99352dac4588c1582a2af7c2716a9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_includes",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_includes(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INCLUDES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c202c88cdfa7982572bd707931cde73d562a74b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_union",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_union(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_union(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b05a12c5bf7c714e1cfb370549d845cc6c5f5300"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_union",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_union(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_union(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3861e318baee99e0237ea4c71e77b4a4eaf314c3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_union",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_union(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5603757217ae845d1e0ea099ad0b8621125ef5f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_union",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_union(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a57661855f6fe044718cf73e372d10d7d2faf32f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_intersection",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_intersection(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_intersection(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3569be2cb45ef68c8eb803c3f5030f50f51b0ec"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_intersection",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_intersection(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_intersection(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc68fbb5a41141fd1ba030cf5d7d5c563cc1434b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_intersection",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_intersection(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff1adcc3e631dc79d2692e6d00e3403e0997ac12"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_intersection",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_intersection(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c22c8c14663267ff522762cebee77ede4c7d0914"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_difference(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8f4979c3d1ecb70349a73036bfef64455ca22aa"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_difference(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e5275edf79064a4a66ab52d9a7002f7b78f2dc0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_difference(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a5488e029b00859582dfbed96776874a7fc0a29"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_difference(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a558b73b82766c83a02d9debfef8b3e6be7e81d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_symmetric_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_symmetric_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_symmetric_difference(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fa70c09d843b3c9d7cd87ed0816ad996d9df82a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_set_symmetric_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_symmetric_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_symmetric_difference(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03d958b8ea63a8f107b04938cfe131ecf31a0ade"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_symmetric_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_symmetric_difference(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a0f4c7af36a52cc3db1e23e544541691702ccd2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_set_symmetric_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_symmetric_difference(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a78e8d9869e533ec2d61852aba11deeae564c4fb"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_is_heap_until(_RandomAccessIterator,_RandomAccessIterator,_Compare,std::false_type)",
						"r": "template <class _RandomAccessIterator, class _Compare> _RandomAccessIterator __brick_is_heap_until(_RandomAccessIterator, _RandomAccessIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "97b8e514a5b4f82fe1f358eb7452ac5847b31b11"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_is_heap_until(_RandomAccessIterator,_RandomAccessIterator,_Compare,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Compare> _RandomAccessIterator __brick_is_heap_until(_RandomAccessIterator, _RandomAccessIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6334e2759c524cd1b92ace0ceac2495da9d23583"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_is_heap_until",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_is_heap_until(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc5a8417386e74192e11c1e8289dfe8b08b0d32d"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_is_heap_until",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_is_heap_until(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9835b37f33182885c9844b92720511cf1115190f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_min_element(_ForwardIterator,_ForwardIterator,_Compare,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> _ForwardIterator __brick_min_element(_ForwardIterator, _ForwardIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca8185c0f85f58e6720767313a322d501d047850"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_min_element(_ForwardIterator,_ForwardIterator,_Compare,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> _ForwardIterator __brick_min_element(_ForwardIterator, _ForwardIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05d0413576d9f16a48a2301142f3745298893d68"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_min_element",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> _ForwardIterator __pattern_min_element(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "004adfd2b858f7a8f87f568176ffc9c48502d5a3"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_min_element",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_min_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <typename _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare, typename _IsVector> _RandomAccessIterator __pattern_min_element(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f94d41da7dc73be39ab37c1e3c4f0956c64c1ec5"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_minmax_element(_ForwardIterator,_ForwardIterator,_Compare,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> pair<_ForwardIterator, _ForwardIterator> __brick_minmax_element(_ForwardIterator, _ForwardIterator, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "53ccbfd3903092db4db7310bcb759751dee44081"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_minmax_element(_ForwardIterator,_ForwardIterator,_Compare,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> pair<_ForwardIterator, _ForwardIterator> __brick_minmax_element(_ForwardIterator, _ForwardIterator, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2042a9f70f27dd5d784224818823f670c7d2829"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> pair<_ForwardIterator, _ForwardIterator> __pattern_minmax_element(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "833142b61ade2312e1acdabb1d15fd52f912e7b0"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> pair<_ForwardIterator, _ForwardIterator> __pattern_minmax_element(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1796d6b3ed8fba52db32e41c6707f3f8261433c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_mismatch(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Predicate> pair<_ForwardIterator1, _ForwardIterator2> __brick_mismatch(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a84f39e7bca5d52c51ad0b84d971ab8f5a0cc3e9"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_mismatch(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Predicate> pair<_ForwardIterator1, _ForwardIterator2> __brick_mismatch(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e600f93210661798ad113abce35f55eed7d48698"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate, class _IsVector> pair<_ForwardIterator1, _ForwardIterator2> __pattern_mismatch(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5299de05a67864ce0931a1e105ced671faac6307"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_mismatch",
						"t": "std::pair<_RandomAccessIterator1, _RandomAccessIterator2> (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _Predicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_mismatch(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_Predicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Predicate, class _IsVector> pair<_RandomAccessIterator1, _RandomAccessIterator2> __pattern_mismatch(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _Predicate, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9c990e9157a0e835e5bbd024ee9f34493a7b728"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_lexicographical_compare",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_lexicographical_compare(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Compare> bool __brick_lexicographical_compare(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "885221ccd91c173e5f3cfa9e0e863a88f0b0034f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_lexicographical_compare",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_lexicographical_compare(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Compare> bool __brick_lexicographical_compare(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d8c612dc0543b96a86f475b4c2b20658f5a4ee9c"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_lexicographical_compare",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_lexicographical_compare(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fa55d76197c9df81a10cc9fb675e1b4a929cfec"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_lexicographical_compare",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_lexicographical_compare(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7aa4b6df2b7a528ecaaa8f71343222cbf102ea31"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/numeric_fwd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_NUMERIC_FWD_H",
						"t": "",
						"i": "_PSTL_NUMERIC_FWD_H",
						"r": "_PSTL_NUMERIC_FWD_H",
						"s": "",
						"u": "_PSTL_NUMERIC_FWD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2683a01cd9f5f175a5a8dcd46c73506be9c1562"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> _Tp __brick_transform_reduce(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e309a0dc9aba57133ee141afc459de06276a47f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> _Tp __brick_transform_reduce(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5799d4a0a9e0e86e268ec078fc14d53b3d4d0eff"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "831b5d9742c013aff4fc58b1792db7dc94bd19ae"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ffe657f2b57beceba7521d511102c2a6195119f2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,std::true_type)",
						"r": "template <class _ForwardIterator, class _Tp, class _UnaryOperation, class _BinaryOperation> _Tp __brick_transform_reduce(_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c99fc607e88f0a3284d6013e877b36040b056b00"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,std::false_type)",
						"r": "template <class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation> _Tp __brick_transform_reduce(_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49cb4edb7aefcd001fa45d8efa9d57632d5f7021"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12379838ea64498be5239057c30bdc1d680f156f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "147e55e55ce43aa0545d43940297393ccc8e4a3e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "std::pair<_OutputIterator, _Tp> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> pair<_OutputIterator, _Tp> __brick_transform_scan(_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bc972bb636c20891091c71674909f325dd3106f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "std::pair<_OutputIterator, _Tp> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> pair<_OutputIterator, _Tp> __brick_transform_scan(_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4af621a9e597bffd08210f8f6b8aa80de4d4398e"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> _OutputIterator __pattern_transform_scan(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ee15722db3485d68e31ec1b47e4994fd7540154"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "typename std::enable_if<!std::is_floating_point<_Tp>::value, _OutputIterator>::type (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> typename std::enable_if<!std::is_floating_point<_Tp>::value, _OutputIterator>::type __pattern_transform_scan(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c59a6d094aaa8d1fe29286a7c86e179fcf73ad4a"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "typename std::enable_if<std::is_floating_point<_Tp>::value, _OutputIterator>::type (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> typename std::enable_if<std::is_floating_point<_Tp>::value, _OutputIterator>::type __pattern_transform_scan(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40bcdbb9b3c6b3ab6be30172613e6b5e1ab01dc4"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_difference",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_difference(_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _BinaryOperation> _OutputIterator __brick_adjacent_difference(_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cb45a2ea05be20b0c718694c47d2552e7467a6f"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_difference",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_difference(_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _BinaryOperation> _OutputIterator __brick_adjacent_difference(_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae7b9424af96e82af5e06d79b5edfc912a02ed0b"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_adjacent_difference(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _BinaryOperation, class _IsVector> _OutputIterator __pattern_adjacent_difference(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "178bead6c4ab2aa60bc5546687079c5b83ae24f2"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_adjacent_difference(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _BinaryOperation, class _IsVector> _OutputIterator __pattern_adjacent_difference(_ExecutionPolicy&&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea4fb44aa19f8f5c47f5cbf61e68bf713e0a87a4"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/glue_execution_defs.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_GLUE_EXECUTION_DEFS_H",
						"t": "",
						"i": "_PSTL_GLUE_EXECUTION_DEFS_H",
						"r": "_PSTL_GLUE_EXECUTION_DEFS_H",
						"s": "",
						"u": "_PSTL_GLUE_EXECUTION_DEFS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0c6975ffdda27dc95bf0cad1241660a87d7aee4"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/algorithm_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_ALGORITHM_IMPL_H",
						"t": "",
						"i": "_PSTL_ALGORITHM_IMPL_H",
						"r": "_PSTL_ALGORITHM_IMPL_H",
						"s": "",
						"u": "_PSTL_ALGORITHM_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "953029e9ac3f08211f36221dcfee509f430bb084"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_any_of",
						"t": "bool (const _ForwardIterator, const _ForwardIterator, _Pred, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_any_of(const _ForwardIterator,const _ForwardIterator,_Pred,std::false_type)",
						"r": "template <class _ForwardIterator, class _Pred> bool __brick_any_of(const _ForwardIterator __first, const _ForwardIterator __last, _Pred __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3cf38c92e34886d5d21cad528480979c81a08cd4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_any_of",
						"t": "bool (const _ForwardIterator, const _ForwardIterator, _Pred, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_any_of(const _ForwardIterator,const _ForwardIterator,_Pred,std::true_type)",
						"r": "template <class _ForwardIterator, class _Pred> bool __brick_any_of(const _ForwardIterator __first, const _ForwardIterator __last, _Pred __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab652bd6d164afe3295a518d9817740a61021771"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_any_of",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Pred,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Pred, class _IsVector> bool __pattern_any_of(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Pred __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "610c2a595f4ad39e692040f590f8600a08dd8968"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_any_of",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Pred, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_any_of(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Pred,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Pred, class _IsVector> bool __pattern_any_of(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Pred __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ANY_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3ac2f9868e88de186292577610b52958c2b303d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__for_each_n_it_serial",
						"t": "_ForwardIterator (_ForwardIterator, _Size, _Function)",
						"i": "__pstl::__internal::__for_each_n_it_serial(_ForwardIterator,_Size,_Function)",
						"r": "template <class _ForwardIterator, class _Size, class _Function> _ForwardIterator __for_each_n_it_serial(_ForwardIterator __first, _Size __n, _Function __f)",
						"s": "__pstl::__internal",
						"u": "__FOR_EACH_N_IT_SERIAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c8f5b4decade41a51a71f01319a7dbe565cd0cb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk1",
						"t": "void (_ForwardIterator, _ForwardIterator, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1(_ForwardIterator,_ForwardIterator,_Function,std::false_type)",
						"r": "template <class _ForwardIterator, class _Function> void __brick_walk1(_ForwardIterator __first, _ForwardIterator __last, _Function __f, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4fce2f0dd3e35271de0baad406f80539602b80df"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk1",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1(_RandomAccessIterator,_RandomAccessIterator,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Function> void __brick_walk1(_RandomAccessIterator __first, _RandomAccessIterator __last, _Function __f, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d3c49d3fa80a04b3875efa99c78d02ce3373d6f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk1(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function, class _IsVector> void __pattern_walk1(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Function __f, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "81c820ee1070d222fa36d15125eff091e7def2e4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk1(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Function, class _IsVector> void __pattern_walk1(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Function __f, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a94eea3451c509e59441008a0b2d2e7b68ee2aa"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk_brick(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Brick> void __pattern_walk_brick(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Brick __brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de95515c883a63f475d5fe1334399614f5267aac"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk_brick(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Brick> void __pattern_walk_brick(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Brick __brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c326ed89e2a65bb4bf1ab829116a266aa985f367"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk1_n",
						"t": "_ForwardIterator (_ForwardIterator, _Size, _Function, std::false_type)",
						"i": "__pstl::__internal::__brick_walk1_n(_ForwardIterator,_Size,_Function,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Function> _ForwardIterator __brick_walk1_n(_ForwardIterator __first, _Size __n, _Function __f, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c84ed4d0eb40b91799a9e0922254f57033eb2ae"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk1_n",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _DifferenceType, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk1_n(_RandomAccessIterator,_DifferenceType,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _DifferenceType, class _Function> _RandomAccessIterator __brick_walk1_n(_RandomAccessIterator __first, _DifferenceType __n, _Function __f, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c6a373ca22f504868586f72bc1f51ed5594d075"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _Size, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk1_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Function, class _IsVector> _ForwardIterator __pattern_walk1_n(_ExecutionPolicy&&, _ForwardIterator __first, _Size __n, _Function __f, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a72c201a4c7a62687de8c1bdde8f5b245727a23f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk1_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _Size, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk1_n(_ExecutionPolicy&&,_RandomAccessIterator,_Size,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Function, class _IsVector> _RandomAccessIterator __pattern_walk1_n(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _Size __n, _Function __f, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK1_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0f3332435f89babe49b1a7e64d1a89ca1427b5f3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _Size, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk_brick_n(_ExecutionPolicy&&,_ForwardIterator,_Size,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Brick> _ForwardIterator __pattern_walk_brick_n(_ExecutionPolicy&&, _ForwardIterator __first, _Size __n, _Brick __brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b5b7d075f88c5c23a6c9bfee14d6b4d0734da839"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk_brick_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _Size, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk_brick_n(_ExecutionPolicy&&,_RandomAccessIterator,_Size,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Brick> _RandomAccessIterator __pattern_walk_brick_n(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _Size __n, _Brick __brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0f288728956b3aa3c46ac8dcbc3c87f0fb45d11"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk2",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Function __f, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "53b435dc76051613a550f7c39c760796e9590a1c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk2",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Function __f, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "390f9116c733766896db4dad24d5f0bb20a9c596"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk2_n",
						"t": "_ForwardIterator2 (_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2_n(_ForwardIterator1,_Size,_ForwardIterator2,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2_n(_ForwardIterator1 __first1, _Size __n, _ForwardIterator2 __first2, _Function __f, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74e1a906b5b882b134e46a110b10163babc4bc53"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk2_n",
						"t": "_ForwardIterator2 (_ForwardIterator1, _Size, _ForwardIterator2, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk2_n(_ForwardIterator1,_Size,_ForwardIterator2,_Function,std::true_type)",
						"r": "template <class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function> _ForwardIterator2 __brick_walk2_n(_ForwardIterator1 __first1, _Size __n, _ForwardIterator2 __first2, _Function __f, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae20101e4019284a541ab45163d457d3d13fd4d5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Function __f, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "301930bbad6242c74985d31946a315b0de730403"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Function __f, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b385375003a9c9b0bb558e4e2c6aa0b15b08214"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_n",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Function, class _IsVector> _ForwardIterator2 __pattern_walk2_n(_ExecutionPolicy&&, _ForwardIterator1 __first1, _Size __n, _ForwardIterator2 __first2, _Function __f, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ebb8d28da6d2b4b4972c06a7e2d32bcf0355474f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_n",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_n(_ExecutionPolicy&&,_RandomAccessIterator1,_Size,_RandomAccessIterator2,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _Size, class _RandomAccessIterator2, class _Function, class _IsVector> _RandomAccessIterator2 __pattern_walk2_n(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _Size __n, _RandomAccessIterator2 __first2, _Function __f, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "778c0bccb1dbd80a7bf83bde4512688d6599225a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_brick(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Brick> _ForwardIterator2 __pattern_walk2_brick(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Brick __brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb632d9c61f1a5ee8bcc23ad6cd69272493839df"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_brick(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Brick> _RandomAccessIterator2 __pattern_walk2_brick(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _Brick __brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28eb9c937a033c58466e896f1f87f660d904cd4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick_n",
						"t": "_RandomAccessIterator2 (_ExecutionPolicy &&, _RandomAccessIterator1, _Size, _RandomAccessIterator2, _Brick, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk2_brick_n(_ExecutionPolicy&&,_RandomAccessIterator1,_Size,_RandomAccessIterator2,_Brick,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _Size, class _RandomAccessIterator2, class _Brick> _RandomAccessIterator2 __pattern_walk2_brick_n(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _Size __n, _RandomAccessIterator2 __first2, _Brick __brick, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c95e24f77071071cc6e42c215795fe903c457d7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk2_brick_n",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _Size, _ForwardIterator2, _Brick, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk2_brick_n(_ExecutionPolicy&&,_ForwardIterator1,_Size,_ForwardIterator2,_Brick,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _Size, class _ForwardIterator2, class _Brick> _ForwardIterator2 __pattern_walk2_brick_n(_ExecutionPolicy&&, _ForwardIterator1 __first1, _Size __n, _ForwardIterator2 __first2, _Brick __brick, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK2_BRICK_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "189eb3ed7fe2bb1040f13cb9b769b529c2bfd5ff"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk3",
						"t": "_ForwardIterator3 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_walk3(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator3,_Function,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator3, class _Function> _ForwardIterator3 __brick_walk3(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator3 __first3, _Function __f, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17ac3664b9a437486aa49e39b3fec9b522c94782"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_walk3",
						"t": "_RandomAccessIterator3 (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_walk3(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator3,_Function,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _RandomAccessIterator3, class _Function> _RandomAccessIterator3 __brick_walk3(_RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator3 __first3, _Function __f, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54c992eaa1ad2a892b43aa7c2e7e94c9c51de27d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk3",
						"t": "_ForwardIterator3 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator3, _Function, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_walk3(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator3,_Function,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _ForwardIterator3, class _Function, class _IsVector> _ForwardIterator3 __pattern_walk3(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator3 __first3, _Function __f, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8628ab11f1ce506d414230f21bf5b75af29972d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_walk3",
						"t": "_RandomAccessIterator3 (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Function, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_walk3(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator3,_Function,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _RandomAccessIterator3, class _Function, class _IsVector> _RandomAccessIterator3 __pattern_walk3(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator3 __first3, _Function __f, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_WALK3",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "970b5642cee565e07c6307c6f8c1c35e9335fa47"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> bool __brick_equal(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __p, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "843a9c76c2a8f3ef00f75b81510dbfebeb63e6e3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate> bool __brick_equal(_RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _BinaryPredicate __p, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6afbffbf1a47d7e38c81cbfb25f3a280a1c525aa"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __p, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc62939c986b453f3fbbadcc434b68a614176809"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _BinaryPredicate __p, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78ef8e4590eb321a63c2395d2e67e5820d1b78da"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> bool __brick_equal(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __p, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d86699793c9b9e168dac31bed20828e88f9232cf"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_equal",
						"t": "bool (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_equal(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate> bool __brick_equal(_RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _BinaryPredicate __p, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4405d18fd09efc62f6a744453c23f60f95865916"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _BinaryPredicate __p, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2a1513a664c0cfe0d874642effe795ba2523f1f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_equal",
						"t": "bool (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_equal(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate, class _IsVector> bool __pattern_equal(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _BinaryPredicate __p, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_EQUAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ef8e9e710796ea11f4eae8bd6d36cf4574d84a6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_if",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_if(_ForwardIterator,_ForwardIterator,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Predicate> _ForwardIterator __brick_find_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "857066bbdcffb496289ff4bc1f48f632536ee80a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_if",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_if(_RandomAccessIterator,_RandomAccessIterator,_Predicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Predicate> _RandomAccessIterator __brick_find_if(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1c941e5b2355fdb770656125f8aef5383309995"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> _ForwardIterator __pattern_find_if(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8176b86a49a48282a593681662899e3ec55dd9df"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_find_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> _ForwardIterator __pattern_find_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40bb8ac6991efd489d66a60023f92012368a2aa2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_subrange",
						"t": "_RandomAccessIterator1 (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _BinaryPredicate, bool, _IsVector) noexcept",
						"i": "__pstl::__internal::__find_subrange(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_BinaryPredicate,bool,_IsVector)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _BinaryPredicate, class _IsVector> _RandomAccessIterator1 __find_subrange(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _RandomAccessIterator1 __global_last, _RandomAccessIterator2 __s_first, _RandomAccessIterator2 __s_last, _BinaryPredicate __pred, bool __b_first, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__FIND_SUBRANGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a1696abfa48828fdb05ff2bbb074408dc41b38b2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__find_subrange",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Size, const _Tp &, _BinaryPredicate, _IsVector) noexcept",
						"i": "__pstl::__internal::__find_subrange(_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Size,const _Tp&,_BinaryPredicate,_IsVector)",
						"r": "template <class _RandomAccessIterator, class _Size, class _Tp, class _BinaryPredicate, class _IsVector> _RandomAccessIterator __find_subrange(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator __global_last, _Size __count, const _Tp& __value, _BinaryPredicate __pred, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__FIND_SUBRANGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba79314104ef9b2dbac4b87a5d3427ba0492dcde"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_end(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_end(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1326a986774fb7bd80a61f10d3ebbf1958d0389e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_end",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_end(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_end(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "417e9841a087e88120646c8c950ebefe00c07f6c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_end",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_end(_ExecutionPolicy&&, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b01d4b017b6ee4eaeef5c0e86066c3ba04e9cac"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_end",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_end(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_end(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_END",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77ead096d4922e87e64ce5e9673d043efeb90eb1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_find_first_of(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_first_of(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd730490ad5aa3edb28b662c92bd6180609200d2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_find_first_of(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_find_first_of(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ed66469c3a804ff58f7fb3322b1b614ff7102f9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_first_of",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_first_of(_ExecutionPolicy&&, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b66bcffb7a2a1488efbd63de3ad7a24d3d94c7a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_find_first_of",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_find_first_of(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_find_first_of(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FIND_FIRST_OF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03e101bbbfd877dde5a1b5acad23761dd32a2db6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_search(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_search(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5ca12d58b0d9e3b75b8b67eb5a93adb6a85ea1f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_search",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_search(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __brick_search(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9bc7a1a57f489a504b8e64bfd682cd9a242fcb9d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_search",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_search(_ExecutionPolicy&&, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e176e52e52f35079087048bb110b5281a045ed3c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_search",
						"t": "_ForwardIterator1 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_search(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate, class _IsVector> _ForwardIterator1 __pattern_search(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a91c778e3147b21cf5e5c34055750d400a9b67b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_search_n(_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> _ForwardIterator __brick_search_n(_ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12e1ea706c530db390eed907b7fc0c112abc56d6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_search_n",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_search_n(_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate> _ForwardIterator __brick_search_n(_ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "436a0c5e26e2205651362f83defb9d432f483d9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_search_n",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Size, const _Tp &, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_search_n(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Size,const _Tp&,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Size, class _Tp, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_search_n(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a3d3457b120ff160740ca2bd8354c0f651019f6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_search_n",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Size, const _Tp &, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_search_n(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Size,const _Tp&,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Size, class _Tp, class _BinaryPredicate, class _IsVector> _RandomAccessIterator __pattern_search_n(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Size __count, const _Tp& __value, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SEARCH_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "39cc84381175ee7ab0bc3e98562d0733c760780f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_n",
						"t": "_OutputIterator (_ForwardIterator, _Size, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_n(_ForwardIterator,_Size,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _Size, class _OutputIterator> _OutputIterator __brick_copy_n(_ForwardIterator __first, _Size __n, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35732df6815f459b58efd0afd1463899628c77c1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_n",
						"t": "_OutputIterator (_ForwardIterator, _Size, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_n(_ForwardIterator,_Size,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _Size, class _OutputIterator> _OutputIterator __brick_copy_n(_ForwardIterator __first, _Size __n, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6cd8d4bd83f9517a3a63f607e8326ae1c355ffa6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88f9999fc5cbd982a688bb56bfff66d342f44fa8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator> _OutputIterator __brick_copy(_RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "045bf7dc49ae7846265efe79f5456175ca5a8b52"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_move",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_move(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_move(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64df0b193a742cbd2915c130acf62c5eea470f07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_move",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_move(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator> _OutputIterator __brick_move(_RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b75a42f54b347ef5d0867a05fccdc205f2930eda"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_move_destroy",
						"t": "__pstl::__internal::__brick_move_destroy",
						"i": "__pstl::__internal::__brick_move_destroy",
						"r": "__brick_move_destroy",
						"s": "__pstl::__internal",
						"u": "__BRICK_MOVE_DESTROY",
						"q": "__pstl::__internal::__brick_move_destroy",
						"w": "__PSTL::__INTERNAL::__BRICK_MOVE_DESTROY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf1385880e9042028951429851c2175baac18a40"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_OutputIterator (_Iterator, _Iterator, _OutputIterator, std::true_type) const",
						"i": "__pstl::__internal::__brick_move_destroy::operator()(_Iterator,_Iterator,_OutputIterator,std::true_type)const",
						"r": "template <typename _Iterator, typename _OutputIterator> _OutputIterator operator()(_Iterator __first, _Iterator __last, _OutputIterator __result, std::true_type) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__brick_move_destroy",
						"w": "__PSTL::__INTERNAL::__BRICK_MOVE_DESTROY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45715aa92f4d510e0b0040aaa59a05a93c6ef3b9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_OutputIterator (_Iterator, _Iterator, _OutputIterator, std::false_type) const",
						"i": "__pstl::__internal::__brick_move_destroy::operator()(_Iterator,_Iterator,_OutputIterator,std::false_type)const",
						"r": "template <typename _Iterator, typename _OutputIterator> _OutputIterator operator()(_Iterator __first, _Iterator __last, _OutputIterator __result, std::false_type) const",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__brick_move_destroy",
						"w": "__PSTL::__INTERNAL::__BRICK_MOVE_DESTROY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a19d4f6372f61d65b5ca62949bbef661e29dfd6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_swap_ranges",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_swap_ranges(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_swap_ranges(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SWAP_RANGES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d220d0948871be2a086da6c7af5c5cece1c19e0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_swap_ranges",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_swap_ranges(_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_swap_ranges(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SWAP_RANGES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "789457b2b2d7acab3ee69270e42adbd59cae891c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_if",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_if(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryPredicate> _OutputIterator __brick_copy_if(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cf824c4ea46709a4efd22fcbe645bfd8fa92cef"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_if",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_if(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryPredicate> _OutputIterator __brick_copy_if(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09d090b5bd1a9c9b70f361d435680746ada2f28d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_1",
						"t": "std::pair<_DifferenceType, _DifferenceType> (_ForwardIterator, _ForwardIterator, bool *__restrict, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_1(_ForwardIterator,_ForwardIterator,bool*__restrict,_UnaryPredicate,std::false_type)",
						"r": "template <class _DifferenceType, class _ForwardIterator, class _UnaryPredicate> pair<_DifferenceType, _DifferenceType> __brick_calc_mask_1(_ForwardIterator __first, _ForwardIterator __last, bool *__restrict __mask, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6bbc2b306b762681c466f2b3d4e82303d1b058af"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_1",
						"t": "std::pair<_DifferenceType, _DifferenceType> (_RandomAccessIterator, _RandomAccessIterator, bool *, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_1(_RandomAccessIterator,_RandomAccessIterator,bool*,_UnaryPredicate,std::true_type)",
						"r": "template <class _DifferenceType, class _RandomAccessIterator, class _UnaryPredicate> pair<_DifferenceType, _DifferenceType> __brick_calc_mask_1(_RandomAccessIterator __first, _RandomAccessIterator __last, bool *__mask, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_1",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eab84a5e431364ae81c8618aa3474f0ef96ab2a5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator, bool *, _Assigner, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator,bool*,_Assigner,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _Assigner> void __brick_copy_by_mask(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, bool *__mask, _Assigner __assigner, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc56b7f09d2b53589d3d8ef37042e9ca6fbcae4f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_copy_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator, bool *__restrict, _Assigner, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_copy_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator,bool*__restrict,_Assigner,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _Assigner> void __brick_copy_by_mask(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, bool *__restrict __mask, _Assigner __assigner, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COPY_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7c796f275ad71d190db35179a8c7f913914237d5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition_by_mask",
						"t": "void (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, bool *, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_by_mask(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,bool*,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2> void __brick_partition_by_mask(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, bool *__mask, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd119049758c441f10c6b89d470aa4c170eafaac"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition_by_mask",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, bool *, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_by_mask(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator1,_OutputIterator2,bool*,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator1, class _OutputIterator2> void __brick_partition_by_mask(_RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, bool *__mask, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_BY_MASK",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "415f1b8a0f7531c0cd47d7c5561937e7c5510459"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_copy_if",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_copy_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _UnaryPredicate, class _IsVector> _OutputIterator __pattern_copy_if(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e501682ae8a2e24566b59812ecf48dad6fba390"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_copy_if",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_copy_if(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryPredicate, class _IsVector> _OutputIterator __pattern_copy_if(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COPY_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b00d674af4ccd5acbfdd84116f39727ea71e7f5f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ForwardIterator, _ForwardIterator, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_count(_ForwardIterator,_ForwardIterator,_Predicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _Predicate> typename std::iterator_traits<_ForwardIterator>::difference_type __brick_count(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "763dfc6af02a3118bafcf01f38d96b61c056fb76"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ForwardIterator, _ForwardIterator, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_count(_ForwardIterator,_ForwardIterator,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _Predicate> typename std::iterator_traits<_ForwardIterator>::difference_type __brick_count(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbfb944db007b8fe4d412ef122fd016ef2e4fa9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> typename std::iterator_traits<_ForwardIterator>::difference_type __pattern_count(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::false_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df62b85976339d7baa6731d9734920e3d2051c53"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_count",
						"t": "typename std::iterator_traits<_ForwardIterator>::difference_type (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Predicate, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_count(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Predicate,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Predicate, class _IsVector> typename std::iterator_traits<_ForwardIterator>::difference_type __pattern_count(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::true_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_COUNT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb33d57d8952585cfa2d7bfc7433a3b335bbe677"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_unique(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_unique(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9d03ea71254accd61cce5e9df6aacec2a8b0ebc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_unique",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_unique(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_unique(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35da78458af61d150b02bb6e25b1c875250200c9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_unique",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_unique(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "677ce555a46111dcc8ec471640c2d30c1a166f12"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__remove_elements",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _CalcMask, _IsVector)",
						"i": "__pstl::__internal::__remove_elements(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_CalcMask,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _CalcMask, class _IsVector> _ForwardIterator __remove_elements(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _CalcMask __calc_mask, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__REMOVE_ELEMENTS",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "29b7dff387ca8bf94345cd4ba480d5a90046708e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_unique",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_unique(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "53401a94e9a2c8a3a94f92e9d7c3114f2ab837f6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_unique_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_unique_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _BinaryPredicate> _OutputIterator __brick_unique_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e849cb806d53427af4ab12d7f91b0a2568b71d4e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_unique_copy",
						"t": "_OutputIterator (_RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_unique_copy(_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_BinaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _OutputIterator, class _BinaryPredicate> _OutputIterator __brick_unique_copy(_RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "79354fb968b6b931d4167ca3157112472bb5810d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_unique_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_unique_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _BinaryPredicate, class _IsVector> _OutputIterator __pattern_unique_copy(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _BinaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "155c4e89c38791c3330149e53804d02e1ebea62b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_2",
						"t": "_DifferenceType (_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_2(_RandomAccessIterator,_RandomAccessIterator,bool*__restrict,_BinaryPredicate,std::false_type)",
						"r": "template <class _DifferenceType, class _RandomAccessIterator, class _BinaryPredicate> _DifferenceType __brick_calc_mask_2(_RandomAccessIterator __first, _RandomAccessIterator __last, bool *__restrict __mask, _BinaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40e09bfb56b803049462b757c8f6f92fb2801b01"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_calc_mask_2",
						"t": "_DifferenceType (_RandomAccessIterator, _RandomAccessIterator, bool *__restrict, _BinaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_calc_mask_2(_RandomAccessIterator,_RandomAccessIterator,bool*__restrict,_BinaryPredicate,std::true_type)",
						"r": "template <class _DifferenceType, class _RandomAccessIterator, class _BinaryPredicate> _DifferenceType __brick_calc_mask_2(_RandomAccessIterator __first, _RandomAccessIterator __last, bool *__restrict __mask, _BinaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_CALC_MASK_2",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0accc838bbcec28d5e59913836959b20732154e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_unique_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _BinaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_unique_copy(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_BinaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _BinaryPredicate, class _IsVector> _OutputIterator __pattern_unique_copy(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, _BinaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_UNIQUE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8575545c274318679856bc16830bfb1acd198b64"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator __first, _BidirectionalIterator __last, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f794810dc59300f67e4a5c432d57867fabb870e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator __first, _BidirectionalIterator __last, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee95e4607fe932b2be4de8127d456d9363625a11"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator __first, _BidirectionalIterator __last, _BidirectionalIterator __d_last, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2aa24d9453516abb8e966069a4a5abcdfe18ad6"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator> void __brick_reverse(_BidirectionalIterator __first, _BidirectionalIterator __last, _BidirectionalIterator __d_last, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ddc280a51fce551e4d685bb242484b8a493884bc"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _IsVector> void __pattern_reverse(_ExecutionPolicy&&, _BidirectionalIterator __first, _BidirectionalIterator __last, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5452d9831feaf3b2cd90e7fab64840d813a2e63"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_reverse(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _IsVector> void __pattern_reverse(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a9c28e07684ae843dd4150521740cae03e02be9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse_copy",
						"t": "_OutputIterator (_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse_copy(_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _OutputIterator> _OutputIterator __brick_reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __d_first, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "285e22d181b460a231e679be744df42b205eeb29"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_reverse_copy",
						"t": "_OutputIterator (_BidirectionalIterator, _BidirectionalIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_reverse_copy(_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _OutputIterator> _OutputIterator __brick_reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __d_first, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3bf2ca9f6ac2c1cc2efab2f492e557f2a14e773f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_reverse_copy(_ExecutionPolicy&&, _BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __d_first, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ce410b26c3ae3085b942dfa61c2e3a35bfbb057"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_reverse_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _OutputIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_reverse_copy(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_OutputIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_reverse_copy(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __d_first, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REVERSE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "435acaac2838382814edcb3d7e0189a2f7fc2af9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_rotate",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate(_ForwardIterator,_ForwardIterator,_ForwardIterator,std::false_type)",
						"r": "template <class _ForwardIterator> _ForwardIterator __brick_rotate(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a0e89b5eb3d0d2524263837d03df5b724099bcb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_rotate",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate(_ForwardIterator,_ForwardIterator,_ForwardIterator,std::true_type)",
						"r": "template <class _ForwardIterator> _ForwardIterator __brick_rotate(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4deb44bcb57eed5c37f7464cf1017baff88e79c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _IsVector> _ForwardIterator __pattern_rotate(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "828fe4bf0db2927e58684ef983b365efaef901e3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_rotate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _IsVector> _ForwardIterator __pattern_rotate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "842db44bd002a98ea5188e58012e5b8d66429f2f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_rotate_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate_copy(_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_rotate_copy(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef612d324833761bd9b98c7006915609939d1865"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_rotate_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_rotate_copy(_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator> _OutputIterator __brick_rotate_copy(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bb1d79e60af809d8b1fbda89bb4f224914b5234"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_rotate_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_rotate_copy(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d1e24429bf5f163399b2a4db3eafc2e6cd409be"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_rotate_copy",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _ForwardIterator, _OutputIterator, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_rotate_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_ForwardIterator,_OutputIterator,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _IsVector> _OutputIterator __pattern_rotate_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ROTATE_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11cc8079413a515bcc0541ffcba15fd3b7ce8761"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_is_partitioned",
						"t": "bool (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_is_partitioned(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> bool __brick_is_partitioned(_ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "573e5c8a0d8a5839aac8f9aa70b2b0c8cc8bc11c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_is_partitioned",
						"t": "bool (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_is_partitioned(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> bool __brick_is_partitioned(_ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad767b7a4bf1fa9e7bc92d23fb5147b8bae76bed"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_is_partitioned",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> bool __pattern_is_partitioned(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93dc52f0e963c11a328c66897c98612faaa44488"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_is_partitioned",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_is_partitioned(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> bool __pattern_is_partitioned(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_PARTITIONED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e344858e51c408a2c2a2e8be6b6b1202ed273c0c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_partition(_ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0da3254744f8c7cafa7a629d7e99d4c8c9dc970"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_partition(_ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e74749a829c17a46c63718d9a37418ce17f1e80"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partition",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_partition(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51537d6a0f39a31f47eba72626ad1337f8a4497e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partition",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partition(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_partition(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0709897fb4f7a09c74e154b06150e53c0acc8034"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_stable_partition",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_stable_partition(_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _UnaryPredicate> _BidirectionalIterator __brick_stable_partition(_BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1e3c468dea1dcbe70b3c396fbe4feaa9343dd1c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_stable_partition",
						"t": "_BidirectionalIterator (_BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_stable_partition(_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _UnaryPredicate> _BidirectionalIterator __brick_stable_partition(_BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3a5800480ed2ef148f75aa1b9820c12f375bfce"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_partition",
						"t": "_BidirectionalIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate, class _IsVector> _BidirectionalIterator __pattern_stable_partition(_ExecutionPolicy&&, _BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ac04eed84f2ebedc3f83fc782f37fd20baf1552"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_partition",
						"t": "_BidirectionalIterator (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _UnaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_partition(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _UnaryPredicate, class _IsVector> _BidirectionalIterator __pattern_stable_partition(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_PARTITION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b3d9033b4462e3a440d83a98ccf105e9b05654d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_copy(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate> pair<_OutputIterator1, _OutputIterator2> __brick_partition_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74aac950d4bfb25b5d09dfa699e36dea75145f83"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_partition_copy(_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate> pair<_OutputIterator1, _OutputIterator2> __brick_partition_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d963b6e7ff35d9f00694746b39947ef69262fc8e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partition_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate, class _IsVector> pair<_OutputIterator1, _OutputIterator2> __pattern_partition_copy(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f28a4c05f3845dd9819fad7ff41c496465b4f71f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator1, _OutputIterator2, _UnaryPredicate, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partition_copy(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator1,_OutputIterator2,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate, class _IsVector> pair<_OutputIterator1, _OutputIterator2> __pattern_partition_copy(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTITION_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a7728e32c3f21575a5918968c0b7a5f396a7e65c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type, _IsMoveConstructible) noexcept",
						"i": "__pstl::__internal::__pattern_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type,_IsMoveConstructible)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector, class _IsMoveConstructible> void __pattern_sort(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::false_type, _IsMoveConstructible)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7c58df97a10589894c6ced6353008df9a416f8a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type, std::true_type)",
						"i": "__pstl::__internal::__pattern_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::true_type, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6b6bb758f292997259da1ca175ff7a9d43f73ea"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_stable_sort(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d5dcca8041d88216eab195920f490a3431771a8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_stable_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_stable_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_STABLE_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c322cf2ddb3e4b003b9726eb6ba33d83e22c77e7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_partial_sort(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b71f219190ffb92cf3a6494556a790a300de3e75"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partial_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_partial_sort(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d5b267b97de6b682dd3fd7dc23aaddf62a5902b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort_copy",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_partial_sort_copy(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last, _Compare __comp, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dcb436340573fb3d9c56718d53e7525e7ec55589"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_partial_sort_copy",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_partial_sort_copy(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_partial_sort_copy(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _RandomAccessIterator __d_first, _RandomAccessIterator __d_last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_PARTIAL_SORT_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3030393faa4cccf82c1afb753ee142a98f791b0d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::true_type, bool) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_find(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::true_type,bool)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_adjacent_find(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, std::true_type, bool __or_semantic)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df8c941b63e76c5e94cbc99a947f1838de0b897c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_find",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, bool) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_find(_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type,bool)",
						"r": "template <class _ForwardIterator, class _BinaryPredicate> _ForwardIterator __brick_adjacent_find(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, std::false_type, bool)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "098e8763f488d69790784e607bb02435f4d5e240"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_find",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _BinaryPredicate, std::false_type, _IsVector, bool) noexcept",
						"i": "__pstl::__internal::__pattern_adjacent_find(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_BinaryPredicate,std::false_type,_IsVector,bool)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _BinaryPredicate, class _IsVector> _ForwardIterator __pattern_adjacent_find(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __pred, std::false_type, _IsVector __is_vector, bool __or_semantic)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b5beba61259b31429557efab5ce5c2826b69097"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_find",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _BinaryPredicate, std::true_type, _IsVector, bool)",
						"i": "__pstl::__internal::__pattern_adjacent_find(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_BinaryPredicate,std::true_type,_IsVector,bool)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _BinaryPredicate, class _IsVector> _RandomAccessIterator __pattern_adjacent_find(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _BinaryPredicate __pred, std::true_type, _IsVector __is_vector, bool __or_semantic)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a80e91f5224a33be80792b3fabe4b1b804771b4d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_nth_element",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_nth_element(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_NTH_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ef709d14bc94ff15f596b32f384f1fe2a33db05"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_nth_element",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_nth_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> void __pattern_nth_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_NTH_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b692e3ca110231b4db9e5e614989b8571f8eed9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_fill(_ForwardIterator,_ForwardIterator,const _Tp&,std::true_type)",
						"r": "template <class _ForwardIterator, class _Tp> void __brick_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9206c2496e4cccef0f36d47da376a9f17d98418e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_fill",
						"t": "void (_ForwardIterator, _ForwardIterator, const _Tp &, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_fill(_ForwardIterator,_ForwardIterator,const _Tp&,std::false_type)",
						"r": "template <class _ForwardIterator, class _Tp> void __brick_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e9854ff884a5e55a2334338dad6290098e2c1b2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_fill",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _IsVector> void __pattern_fill(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, std::false_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4982760b19c2641df9565824201dd0278f512e89"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_fill",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, const _Tp &, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_fill(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,const _Tp&,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _IsVector> _ForwardIterator __pattern_fill(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value, std::true_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e85f190965fc922e415fca127c755d31f668a3d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_fill_n(_OutputIterator,_Size,const _Tp&,std::true_type)",
						"r": "template <class _OutputIterator, class _Size, class _Tp> _OutputIterator __brick_fill_n(_OutputIterator __first, _Size __count, const _Tp& __value, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bcf8e385e1a397644b0b557832b9bbff14b8f94"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_fill_n",
						"t": "_OutputIterator (_OutputIterator, _Size, const _Tp &, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_fill_n(_OutputIterator,_Size,const _Tp&,std::false_type)",
						"r": "template <class _OutputIterator, class _Size, class _Tp> _OutputIterator __brick_fill_n(_OutputIterator __first, _Size __count, const _Tp& __value, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6b7ddf8e00fe36166630c1e08a138834fdefb88"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_fill_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, const _Tp &, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_fill_n(_ExecutionPolicy&&,_OutputIterator,_Size,const _Tp&,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Tp, class _IsVector> _OutputIterator __pattern_fill_n(_ExecutionPolicy&&, _OutputIterator __first, _Size __count, const _Tp& __value, std::false_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a7624aaf5b5f6c2e9eb06be60fb049a108285ff"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_fill_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, const _Tp &, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_fill_n(_ExecutionPolicy&&,_OutputIterator,_Size,const _Tp&,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Tp, class _IsVector> _OutputIterator __pattern_fill_n(_ExecutionPolicy&& __exec, _OutputIterator __first, _Size __count, const _Tp& __value, std::true_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_FILL_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2ba3a4a145b162e68c0cf9a1c030bfb3e44337d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_generate",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator, _Generator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_generate(_RandomAccessIterator,_RandomAccessIterator,_Generator,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Generator> void __brick_generate(_RandomAccessIterator __first, _RandomAccessIterator __last, _Generator __g, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "483605f8251d9de071d20e9f5bb1a2d7fc80f0fd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_generate",
						"t": "void (_ForwardIterator, _ForwardIterator, _Generator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_generate(_ForwardIterator,_ForwardIterator,_Generator,std::false_type)",
						"r": "template <class _ForwardIterator, class _Generator> void __brick_generate(_ForwardIterator __first, _ForwardIterator __last, _Generator __g, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d3d39e8d238e9b5cd5509ab6ed5d3d0a08bed64"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_generate",
						"t": "void (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator, class _IsVector> void __pattern_generate(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Generator __g, std::false_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9fc05c65cffb53acac3f0607ff58dd9ca1abe785"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_generate",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Generator, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_generate(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Generator,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Generator, class _IsVector> _ForwardIterator __pattern_generate(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Generator __g, std::true_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5f6f2601e9f6754e73c541528c7bbfcc6dbaafd5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_generate_n(_OutputIterator,_Size,_Generator,std::true_type)",
						"r": "template <class _OutputIterator, class _Size, class _Generator> _OutputIterator __brick_generate_n(_OutputIterator __first, _Size __count, _Generator __g, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "356fcf8db205884487bcdfe6dfce687b41af53df"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_generate_n",
						"t": "_OutputIterator (_OutputIterator, _Size, _Generator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_generate_n(_OutputIterator,_Size,_Generator,std::false_type)",
						"r": "template <class _OutputIterator, class _Size, class _Generator> _OutputIterator __brick_generate_n(_OutputIterator __first, _Size __count, _Generator __g, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98834a4cc707c35d322126015a24804caee77b06"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_generate_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, _Generator, std::false_type, _IsVector) noexcept",
						"i": "__pstl::__internal::__pattern_generate_n(_ExecutionPolicy&&,_OutputIterator,_Size,_Generator,std::false_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Generator, class _IsVector> _OutputIterator __pattern_generate_n(_ExecutionPolicy&&, _OutputIterator __first, _Size __count, _Generator __g, std::false_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65ff62d6833d14bef960b7e889b5cc36cecd869c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_generate_n",
						"t": "_OutputIterator (_ExecutionPolicy &&, _OutputIterator, _Size, _Generator, std::true_type, _IsVector)",
						"i": "__pstl::__internal::__pattern_generate_n(_ExecutionPolicy&&,_OutputIterator,_Size,_Generator,std::true_type,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _OutputIterator, class _Size, class _Generator, class _IsVector> _OutputIterator __pattern_generate_n(_ExecutionPolicy&& __exec, _OutputIterator __first, _Size __count, _Generator __g, std::true_type, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_GENERATE_N",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36f205f8062a8986715de45e3290061ff576cfd5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_remove_if",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _UnaryPredicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_remove_if(_ForwardIterator,_ForwardIterator,_UnaryPredicate,std::false_type)",
						"r": "template <class _ForwardIterator, class _UnaryPredicate> _ForwardIterator __brick_remove_if(_ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84017a0db36d7e1b1e0fa89c489538eb2d7feb2a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_remove_if",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _UnaryPredicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_remove_if(_RandomAccessIterator,_RandomAccessIterator,_UnaryPredicate,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _UnaryPredicate> _RandomAccessIterator __brick_remove_if(_RandomAccessIterator __first, _RandomAccessIterator __last, _UnaryPredicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1eeabc18e94917a3f7a8762e19f6bc01b1ac1a9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_remove_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_remove_if(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "100cb3fa367ce3293a6c807ea6f91374f9410072"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_remove_if",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _UnaryPredicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_remove_if(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_UnaryPredicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _UnaryPredicate, class _IsVector> _ForwardIterator __pattern_remove_if(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _UnaryPredicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_REMOVE_IF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3113638b8dafee93b30be47792a36ee97aa2d46b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_merge",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_merge(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_merge(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __d_first, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "92532bc8626dad40963f42d6bddc430b524ac307"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_merge",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_merge(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_merge(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __d_first, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fc42481150a5e2de0318e81ca4c554b53443ecb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_merge",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_merge(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_merge(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __d_first, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b6f7fee8167264a0baeb000f285a631615a968a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_merge",
						"t": "_OutputIterator (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_merge(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_merge(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _OutputIterator __d_first, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "21739a1d59c97f9d930dd96a7302f773314f7e9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_inplace_merge(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,std::false_type)",
						"r": "template <class _BidirectionalIterator, class _Compare> void __brick_inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db02b5c6d786bec2e707fc634c8c0850c1bf7052"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_inplace_merge",
						"t": "void (_BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_inplace_merge(_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,std::true_type)",
						"r": "template <class _BidirectionalIterator, class _Compare> void __brick_inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e3713b9eb01df916e6729fa70ddd58e1c50a3b3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_inplace_merge",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare, class _IsVector> void __pattern_inplace_merge(_ExecutionPolicy&&, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc01e4f1de3cdd0764c1c9d467f7383eab4ab16c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_inplace_merge",
						"t": "void (_ExecutionPolicy &&, _BidirectionalIterator, _BidirectionalIterator, _BidirectionalIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_inplace_merge(_ExecutionPolicy&&,_BidirectionalIterator,_BidirectionalIterator,_BidirectionalIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _BidirectionalIterator, class _Compare, class _IsVector> void __pattern_inplace_merge(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INPLACE_MERGE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5cb525d8a3d58c1e87945e397cd76725d01786e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_includes",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_includes(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, _IsVector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INCLUDES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "93982c0c7631b8a600dd130894147ffdb09be5d1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_includes",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_includes(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_includes(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, _IsVector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_INCLUDES",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fb7960e384c090848cc4bd7e54e1df9b2d670acb"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_algo_cut_off",
						"t": "const int",
						"i": "__pstl::__internal::__set_algo_cut_off",
						"r": "constexpr auto __set_algo_cut_off",
						"s": "__pstl::__internal",
						"u": "__SET_ALGO_CUT_OFF",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f06c8dc5920584aa30137fdcd46309da2a3201f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_op",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _SizeFunction, _SetOP, _IsVector)",
						"i": "__pstl::__internal::__parallel_set_op(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_SizeFunction,_SetOP,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector, class _SizeFunction, class _SetOP> _OutputIterator __parallel_set_op(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _SizeFunction __size_func, _SetOP __set_op, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PARALLEL_SET_OP",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e566b7bed65559daf5a6e3d1b82a43ae70940ec1"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_set_union_op",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _SetUnionOp, _IsVector)",
						"i": "__pstl::__internal::__parallel_set_union_op(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_SetUnionOp,_IsVector)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _SetUnionOp, class _IsVector> _OutputIterator __parallel_set_union_op(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _SetUnionOp __set_union_op, _IsVector __is_vector)",
						"s": "__pstl::__internal",
						"u": "__PARALLEL_SET_UNION_OP",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90f290a07b931cc81073c2204bba48ffaf1a22ad"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_union",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_union(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_union(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7864c204dc6c76d2353ab0ed6e156e04eb65e1f1"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__BrickCopyConstruct",
						"t": "",
						"i": "__pstl::__internal::__BrickCopyConstruct",
						"r": "template <typename _IsVector> __BrickCopyConstruct",
						"s": "__pstl::__internal",
						"u": "__BRICKCOPYCONSTRUCT",
						"q": "__pstl::__internal::__BrickCopyConstruct",
						"w": "__PSTL::__INTERNAL::__BRICKCOPYCONSTRUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e230643ecc9678440c8037a344e7853c93421ed"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator)",
						"i": "__pstl::__internal::__BrickCopyConstruct::operator()(_ForwardIterator,_ForwardIterator,_OutputIterator)",
						"r": "template <typename _ForwardIterator, typename _OutputIterator> _OutputIterator operator()(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result)",
						"s": "__pstl::__internal",
						"u": "OPERATOR()",
						"q": "__pstl::__internal::__BrickCopyConstruct",
						"w": "__PSTL::__INTERNAL::__BRICKCOPYCONSTRUCT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f526c0fd07bcb93d9a3ff8c0c91e4bec476cc506"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_union",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_union(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_union(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7edb2b910defe5effa20d78236a626c4e46f2cae"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_union",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_union(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "661488cc48c7e2ca1c6154949703b017cdc662a0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_union",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_union(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_union(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_UNION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10eec3d38364ca671a588202e4c8c2bb1d28079a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_intersection",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_intersection(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_intersection(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e48bef394ea93d48bfbf9b5c56a12b8f1e02945b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_intersection",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_intersection(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_intersection(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82cf902219a757770207b27189476e0aae7b4043"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_intersection",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_intersection(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7072849f7e22101d7c425a3e997a2556a69ca469"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_intersection",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_intersection(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_intersection(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_INTERSECTION",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bb04cec183f1fc79b755ac78f0374cd64ad65f7e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_difference(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42e7ba4103f9f6dbad989181cdb3e09836dad6ef"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_difference(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c3eb1184045f73a516efc2b9f48f919979e574f8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_difference(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d6aa954e67bec8544096c0920fad866712a52798"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e2ff8f6bac42894d2cd50736acc4b5e745e18c0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_symmetric_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_set_symmetric_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_symmetric_difference(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee55e85248cbb7889930e3f1a140a95c37ea438b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_set_symmetric_difference",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_set_symmetric_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare> _OutputIterator __brick_set_symmetric_difference(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da9d912a86e977eeffc26ed187f065e1621d76de"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_symmetric_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_symmetric_difference(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ff2169ab3897fbddebc8dab935e7cd7343dc30e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_set_symmetric_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_set_symmetric_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _OutputIterator, class _Compare, class _IsVector> _OutputIterator __pattern_set_symmetric_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_SET_SYMMETRIC_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1dab79b0cfbc72ea637af6000724592473e50e31"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_is_heap_until(_RandomAccessIterator,_RandomAccessIterator,_Compare,std::false_type)",
						"r": "template <class _RandomAccessIterator, class _Compare> _RandomAccessIterator __brick_is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "834686dd501597099d3b9283542c681d65d8a11d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_is_heap_until",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _RandomAccessIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_is_heap_until(_RandomAccessIterator,_RandomAccessIterator,_Compare,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _Compare> _RandomAccessIterator __brick_is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f000c3725e6cd60f3e4608aa9e92414a1e76c6be"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_is_heap_until",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_is_heap_until(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75c16794e2de0a7ed4e6e02ec3ad3546a8825645"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_heap_until_local",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _DifferenceType, _DifferenceType, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__is_heap_until_local(_RandomAccessIterator,_DifferenceType,_DifferenceType,_Compare,std::false_type)",
						"r": "template <class _RandomAccessIterator, class _DifferenceType, class _Compare> _RandomAccessIterator __is_heap_until_local(_RandomAccessIterator __first, _DifferenceType __begin, _DifferenceType __end, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__IS_HEAP_UNTIL_LOCAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0f5f840ae7f4976b5cd3c1a5d3e153bf51a169f4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_heap_until_local",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _DifferenceType, _DifferenceType, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__is_heap_until_local(_RandomAccessIterator,_DifferenceType,_DifferenceType,_Compare,std::true_type)",
						"r": "template <class _RandomAccessIterator, class _DifferenceType, class _Compare> _RandomAccessIterator __is_heap_until_local(_RandomAccessIterator __first, _DifferenceType __begin, _DifferenceType __end, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__IS_HEAP_UNTIL_LOCAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f92474792d931d091c1774f8e9301451aaee7f71"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_is_heap_until",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_is_heap_until(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _Compare, class _IsVector> _RandomAccessIterator __pattern_is_heap_until(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_IS_HEAP_UNTIL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06cd2c518676037a9260ba9fce28130413d03194"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_min_element(_ForwardIterator,_ForwardIterator,_Compare,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> _ForwardIterator __brick_min_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ebacd7cf2c70a7c627081b5118152182e020124"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_min_element",
						"t": "_ForwardIterator (_ForwardIterator, _ForwardIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_min_element(_ForwardIterator,_ForwardIterator,_Compare,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> _ForwardIterator __brick_min_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe3d538399e09811dacfed06def1bd48cb25f29a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_min_element",
						"t": "_ForwardIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_min_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> _ForwardIterator __pattern_min_element(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a8ff1547c327dbc48877c93bb0ec5df59dfbf46"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_min_element",
						"t": "_RandomAccessIterator (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_min_element(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <typename _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare, typename _IsVector> _RandomAccessIterator __pattern_min_element(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MIN_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4b001085ec6cbe3ad86e2005e719ddfdaf00fa5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_minmax_element(_ForwardIterator,_ForwardIterator,_Compare,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> pair<_ForwardIterator, _ForwardIterator> __brick_minmax_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9ba76a2a70fdfba45424d3d9b461c944491272d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _ForwardIterator, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_minmax_element(_ForwardIterator,_ForwardIterator,_Compare,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _Compare> pair<_ForwardIterator, _ForwardIterator> __brick_minmax_element(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1858a780847b8bdf868301383d5852f4a220672"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::false_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> pair<_ForwardIterator, _ForwardIterator> __pattern_minmax_element(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a9c891c054829d81498d5020d5a408598ea0575"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Compare, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_minmax_element(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Compare,_IsVector,std::true_type)",
						"r": "template <typename _ExecutionPolicy, typename _ForwardIterator, typename _Compare, typename _IsVector> pair<_ForwardIterator, _ForwardIterator> __pattern_minmax_element(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MINMAX_ELEMENT",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "916a3bb46a25667e9359fd1964cbcf37ee5ea0ef"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__mismatch_serial",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate)",
						"i": "__pstl::__internal::__mismatch_serial(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> pair<_ForwardIterator1, _ForwardIterator2> __mismatch_serial(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred)",
						"s": "__pstl::__internal",
						"u": "__MISMATCH_SERIAL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6909992fe7bc1894b14f978504bcff7266b7b76"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_mismatch(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Predicate> pair<_ForwardIterator1, _ForwardIterator2> __brick_mismatch(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Predicate __pred, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "851afcabead6ec08e06fbbb9ab2a0460b298920c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_mismatch(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Predicate> pair<_ForwardIterator1, _ForwardIterator2> __brick_mismatch(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Predicate __pred, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e69760be0b5045c5bd55746111495c5d0b02122"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_mismatch",
						"t": "std::pair<_ForwardIterator1, _ForwardIterator2> (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Predicate, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_mismatch(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Predicate,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Predicate, class _IsVector> pair<_ForwardIterator1, _ForwardIterator2> __pattern_mismatch(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Predicate __pred, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9fb28af5a268bb5e67557eb647e2bf7811f0d3da"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_mismatch",
						"t": "std::pair<_RandomAccessIterator1, _RandomAccessIterator2> (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _Predicate, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_mismatch(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_Predicate,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Predicate, class _IsVector> pair<_RandomAccessIterator1, _RandomAccessIterator2> __pattern_mismatch(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _Predicate __pred, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_MISMATCH",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dde33b5b41faea3043b6d672a1f2d9c9bdb798f3"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_lexicographical_compare",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_lexicographical_compare(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Compare> bool __brick_lexicographical_compare(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4eb2e844f5701e07db954df8114d7f282601d35b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_lexicographical_compare",
						"t": "bool (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_lexicographical_compare(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Compare> bool __brick_lexicographical_compare(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "046da588dbdb258301bffc4e99c7440b2bc6adb4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_lexicographical_compare",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_lexicographical_compare(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d2b52370f02579d042aec7029a1a5d422a79457"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_lexicographical_compare",
						"t": "bool (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _Compare, _IsVector, std::true_type) noexcept",
						"i": "__pstl::__internal::__pattern_lexicographical_compare(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_Compare,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Compare, class _IsVector> bool __pattern_lexicographical_compare(_ExecutionPolicy&& __exec, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _Compare __comp, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_LEXICOGRAPHICAL_COMPARE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d8164e3bf3db856f2d72e99e8ba054e3a09aad6"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/execution_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_EXECUTION_IMPL_H",
						"t": "",
						"i": "_PSTL_EXECUTION_IMPL_H",
						"r": "_PSTL_EXECUTION_IMPL_H",
						"s": "",
						"u": "_PSTL_EXECUTION_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13c48b1052c5613fd4175bb6f7bcb6b91efcc324"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lazy_and",
						"t": "std::false_type (_Tp, std::false_type)",
						"i": "__pstl::__internal::__lazy_and(_Tp,std::false_type)",
						"r": "template <typename _Tp> std::false_type __lazy_and(_Tp, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__LAZY_AND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc86dae6190b12181aea7ba06e5f2e146191a286"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lazy_and",
						"t": "_Tp (_Tp, std::true_type)",
						"i": "__pstl::__internal::__lazy_and(_Tp,std::true_type)",
						"r": "template <typename _Tp> _Tp __lazy_and(_Tp __a, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__LAZY_AND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba01d0cfd65d4b22906b2284bce378cdc4089836"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lazy_or",
						"t": "std::true_type (_Tp, std::true_type)",
						"i": "__pstl::__internal::__lazy_or(_Tp,std::true_type)",
						"r": "template <typename _Tp> std::true_type __lazy_or(_Tp, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__LAZY_OR",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12e3db6f4cf38279915a5359bfc2f529a4f69f0f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lazy_or",
						"t": "_Tp (_Tp, std::false_type)",
						"i": "__pstl::__internal::__lazy_or(_Tp,std::false_type)",
						"r": "template <typename _Tp> _Tp __lazy_or(_Tp __a, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__LAZY_OR",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9069cf469b3fd71533362652f24cc3b1a6747068"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_random_access_iterator",
						"t": "",
						"i": "__pstl::__internal::__is_random_access_iterator",
						"r": "template <typename _IteratorType, typename ..._OtherIteratorTypes> __is_random_access_iterator",
						"s": "__pstl::__internal",
						"u": "__IS_RANDOM_ACCESS_ITERATOR",
						"q": "__pstl::__internal::__is_random_access_iterator",
						"w": "__PSTL::__INTERNAL::__IS_RANDOM_ACCESS_ITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e73b8ebe3e175cace2b951256ce36dbee01cfdb1"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "__pstl::__internal::__is_random_access_iterator::value",
						"r": "static constexpr bool value",
						"s": "__pstl::__internal",
						"u": "VALUE",
						"q": "__pstl::__internal::__is_random_access_iterator",
						"w": "__PSTL::__INTERNAL::__IS_RANDOM_ACCESS_ITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e48e9681762d8b5f47633a2639e6698faeb03cb"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "__pstl::__internal::__is_random_access_iterator::type",
						"i": "__pstl::__internal::__is_random_access_iterator::type",
						"r": "typedef integral_constant<bool, value> type",
						"s": "__pstl::__internal",
						"u": "TYPE",
						"q": "__pstl::__internal::__is_random_access_iterator",
						"w": "__PSTL::__INTERNAL::__IS_RANDOM_ACCESS_ITERATOR",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34679c1a94443ad1f215086cfd3f1daf186e719d"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_traits",
						"t": "",
						"i": "__pstl::__internal::__policy_traits",
						"r": "template <typename _Policy> __policy_traits",
						"s": "__pstl::__internal",
						"u": "__POLICY_TRAITS",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0cd05496411fb9069937776162c2a3f76b19d614"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_traits",
						"t": "__pstl::__internal::__policy_traits<sequenced_policy>",
						"i": "__pstl::__internal::__policy_traits",
						"r": "template<> __policy_traits<__pstl::execution::sequenced_policy>",
						"s": "__pstl::__internal",
						"u": "__POLICY_TRAITS",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "16cf39df923cd328e29888189b9d8a923fffad45"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_parallel",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::sequenced_policy>::allow_parallel",
						"i": "__pstl::__internal::__policy_traits::allow_parallel",
						"r": "typedef std::false_type allow_parallel",
						"s": "__pstl::__internal",
						"u": "ALLOW_PARALLEL",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "791300fdfb4037a91248382406013f252bf737b7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_unsequenced",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::sequenced_policy>::allow_unsequenced",
						"i": "__pstl::__internal::__policy_traits::allow_unsequenced",
						"r": "typedef std::false_type allow_unsequenced",
						"s": "__pstl::__internal",
						"u": "ALLOW_UNSEQUENCED",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28e7217261fd8d8395fddaa54a710c8cbb26ce22"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_vector",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::sequenced_policy>::allow_vector",
						"i": "__pstl::__internal::__policy_traits::allow_vector",
						"r": "typedef std::false_type allow_vector",
						"s": "__pstl::__internal",
						"u": "ALLOW_VECTOR",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4582215fd3d942deb07921859e6091c787ea73bb"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_traits",
						"t": "__pstl::__internal::__policy_traits<unsequenced_policy>",
						"i": "__pstl::__internal::__policy_traits",
						"r": "template<> __policy_traits<__pstl::execution::unsequenced_policy>",
						"s": "__pstl::__internal",
						"u": "__POLICY_TRAITS",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f33fbcb6b3da1df1aa748170cf4cecf395a4385f"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_parallel",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::unsequenced_policy>::allow_parallel",
						"i": "__pstl::__internal::__policy_traits::allow_parallel",
						"r": "typedef std::false_type allow_parallel",
						"s": "__pstl::__internal",
						"u": "ALLOW_PARALLEL",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "791300fdfb4037a91248382406013f252bf737b7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_unsequenced",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::unsequenced_policy>::allow_unsequenced",
						"i": "__pstl::__internal::__policy_traits::allow_unsequenced",
						"r": "typedef std::true_type allow_unsequenced",
						"s": "__pstl::__internal",
						"u": "ALLOW_UNSEQUENCED",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26a770cdc0173f369776c3162ee497f9a7287d19"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_vector",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::unsequenced_policy>::allow_vector",
						"i": "__pstl::__internal::__policy_traits::allow_vector",
						"r": "typedef std::true_type allow_vector",
						"s": "__pstl::__internal",
						"u": "ALLOW_VECTOR",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "952fb16c6ec9dd8bab96b61eefa68c0515b1ed5e"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_traits",
						"t": "__pstl::__internal::__policy_traits<parallel_policy>",
						"i": "__pstl::__internal::__policy_traits",
						"r": "template<> __policy_traits<__pstl::execution::parallel_policy>",
						"s": "__pstl::__internal",
						"u": "__POLICY_TRAITS",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4176ea0aa7e9717632fef73a7435136dbffb0e8b"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_parallel",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_policy>::allow_parallel",
						"i": "__pstl::__internal::__policy_traits::allow_parallel",
						"r": "typedef std::true_type allow_parallel",
						"s": "__pstl::__internal",
						"u": "ALLOW_PARALLEL",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "983bc50aef4372f866662e4e5b2f05ecafcabbc4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_unsequenced",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_policy>::allow_unsequenced",
						"i": "__pstl::__internal::__policy_traits::allow_unsequenced",
						"r": "typedef std::false_type allow_unsequenced",
						"s": "__pstl::__internal",
						"u": "ALLOW_UNSEQUENCED",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28e7217261fd8d8395fddaa54a710c8cbb26ce22"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_vector",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_policy>::allow_vector",
						"i": "__pstl::__internal::__policy_traits::allow_vector",
						"r": "typedef std::false_type allow_vector",
						"s": "__pstl::__internal",
						"u": "ALLOW_VECTOR",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::false_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4582215fd3d942deb07921859e6091c787ea73bb"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__policy_traits",
						"t": "__pstl::__internal::__policy_traits<parallel_unsequenced_policy>",
						"i": "__pstl::__internal::__policy_traits",
						"r": "template<> __policy_traits<__pstl::execution::parallel_unsequenced_policy>",
						"s": "__pstl::__internal",
						"u": "__POLICY_TRAITS",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fb3373da5de697e00a3d17e82466f365fcc47d67"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_parallel",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_unsequenced_policy>::allow_parallel",
						"i": "__pstl::__internal::__policy_traits::allow_parallel",
						"r": "typedef std::true_type allow_parallel",
						"s": "__pstl::__internal",
						"u": "ALLOW_PARALLEL",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "983bc50aef4372f866662e4e5b2f05ecafcabbc4"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_unsequenced",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_unsequenced_policy>::allow_unsequenced",
						"i": "__pstl::__internal::__policy_traits::allow_unsequenced",
						"r": "typedef std::true_type allow_unsequenced",
						"s": "__pstl::__internal",
						"u": "ALLOW_UNSEQUENCED",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26a770cdc0173f369776c3162ee497f9a7287d19"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "allow_vector",
						"t": "__pstl::__internal::__policy_traits<__pstl::execution::parallel_unsequenced_policy>::allow_vector",
						"i": "__pstl::__internal::__policy_traits::allow_vector",
						"r": "typedef std::true_type allow_vector",
						"s": "__pstl::__internal",
						"u": "ALLOW_VECTOR",
						"q": "__pstl::__internal::__policy_traits",
						"w": "__PSTL::__INTERNAL::__POLICY_TRAITS",
						"y": "std::true_type",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "952fb16c6ec9dd8bab96b61eefa68c0515b1ed5e"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__collector_t",
						"t": "__pstl::__internal::__collector_t",
						"i": "__pstl::__internal::__collector_t",
						"r": "using __collector_t",
						"s": "__pstl::__internal",
						"u": "__COLLECTOR_T",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "877c6685c610c033405330ef2b4a09370ca0cbd4"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__allow_vector",
						"t": "__pstl::__internal::__allow_vector",
						"i": "__pstl::__internal::__allow_vector",
						"r": "using __allow_vector",
						"s": "__pstl::__internal",
						"u": "__ALLOW_VECTOR",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea7c802a903c1c48cad2bdd33fd5a7e3746aa6ea"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__allow_unsequenced",
						"t": "__pstl::__internal::__allow_unsequenced",
						"i": "__pstl::__internal::__allow_unsequenced",
						"r": "using __allow_unsequenced",
						"s": "__pstl::__internal",
						"u": "__ALLOW_UNSEQUENCED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cab416719d7d9830ac0c8d2f809e1dcc05e385d1"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__allow_parallel",
						"t": "__pstl::__internal::__allow_parallel",
						"i": "__pstl::__internal::__allow_parallel",
						"r": "using __allow_parallel",
						"s": "__pstl::__internal",
						"u": "__ALLOW_PARALLEL",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9b7c7ee4a62911e14086cecfb0d5fad56fbfd56"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_vectorization_preferred",
						"t": "auto (_ExecutionPolicy &&) -> decltype(__internal::__lazy_and(__exec.__allow_vector(), typename __internal::__is_random_access_iterator<_IteratorTypes...>::type()))",
						"i": "__pstl::__internal::__is_vectorization_preferred(_ExecutionPolicy&&)",
						"r": "template <typename _ExecutionPolicy, typename ..._IteratorTypes> auto __is_vectorization_preferred(_ExecutionPolicy&& __exec)",
						"s": "__pstl::__internal",
						"u": "__IS_VECTORIZATION_PREFERRED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3c7ab245da75dda0284e80788545366cba4a0fb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__is_parallelization_preferred",
						"t": "auto (_ExecutionPolicy &&) -> decltype(__internal::__lazy_and(__exec.__allow_parallel(), typename __internal::__is_random_access_iterator<_IteratorTypes...>::type()))",
						"i": "__pstl::__internal::__is_parallelization_preferred(_ExecutionPolicy&&)",
						"r": "template <typename _ExecutionPolicy, typename ..._IteratorTypes> auto __is_parallelization_preferred(_ExecutionPolicy&& __exec)",
						"s": "__pstl::__internal",
						"u": "__IS_PARALLELIZATION_PREFERRED",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "66b04156215c7b2a4e35b42e0c938ad0c9e29185"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__prefer_unsequenced_tag",
						"t": "",
						"i": "__pstl::__internal::__prefer_unsequenced_tag",
						"r": "template <typename __policy, typename ..._IteratorTypes> __prefer_unsequenced_tag",
						"s": "__pstl::__internal",
						"u": "__PREFER_UNSEQUENCED_TAG",
						"q": "__pstl::__internal::__prefer_unsequenced_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_UNSEQUENCED_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e44474f23e22fde31d17c461da355ac25a5f5d1"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "__pstl::__internal::__prefer_unsequenced_tag::value",
						"r": "static constexpr bool value",
						"s": "__pstl::__internal",
						"u": "VALUE",
						"q": "__pstl::__internal::__prefer_unsequenced_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_UNSEQUENCED_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cd126f4999692247dada7e643088b7079b28ecc"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "__pstl::__internal::__prefer_unsequenced_tag::type",
						"i": "__pstl::__internal::__prefer_unsequenced_tag::type",
						"r": "typedef integral_constant<bool, value> type",
						"s": "__pstl::__internal",
						"u": "TYPE",
						"q": "__pstl::__internal::__prefer_unsequenced_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_UNSEQUENCED_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34679c1a94443ad1f215086cfd3f1daf186e719d"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__prefer_parallel_tag",
						"t": "",
						"i": "__pstl::__internal::__prefer_parallel_tag",
						"r": "template <typename __policy, typename ..._IteratorTypes> __prefer_parallel_tag",
						"s": "__pstl::__internal",
						"u": "__PREFER_PARALLEL_TAG",
						"q": "__pstl::__internal::__prefer_parallel_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a5ffc96ada5136239f7347d23a205077a3bd36b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "value",
						"t": "const bool",
						"i": "__pstl::__internal::__prefer_parallel_tag::value",
						"r": "static constexpr bool value",
						"s": "__pstl::__internal",
						"u": "VALUE",
						"q": "__pstl::__internal::__prefer_parallel_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3744290c4d7f8e90045d68280cf2a47d7d16378f"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "__pstl::__internal::__prefer_parallel_tag::type",
						"i": "__pstl::__internal::__prefer_parallel_tag::type",
						"r": "typedef integral_constant<bool, value> type",
						"s": "__pstl::__internal",
						"u": "TYPE",
						"q": "__pstl::__internal::__prefer_parallel_tag",
						"w": "__PSTL::__INTERNAL::__PREFER_PARALLEL_TAG",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34679c1a94443ad1f215086cfd3f1daf186e719d"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/memory_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_MEMORY_IMPL_H",
						"t": "",
						"i": "_PSTL_MEMORY_IMPL_H",
						"r": "_PSTL_MEMORY_IMPL_H",
						"s": "",
						"u": "_PSTL_MEMORY_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2e3fc22b8f72cb17736842f6cc4745b7d068fb40"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_uninitialized_move",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_uninitialized_move(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _OutputIterator> _OutputIterator __brick_uninitialized_move(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNINITIALIZED_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c98e46cd3e279a66f06c3587fc4de5bc0a882d04"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_uninitialized_move",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_uninitialized_move(_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _OutputIterator> _OutputIterator __brick_uninitialized_move(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNINITIALIZED_MOVE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ef201496b8008e19420e4439638bc7dc72adf10"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_destroy",
						"t": "void (_Iterator, _Iterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_destroy(_Iterator,_Iterator,std::false_type)",
						"r": "template <typename _Iterator> void __brick_destroy(_Iterator __first, _Iterator __last, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_DESTROY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d18cf3982f9b13d4d27cf47f63241f4f627d9cd2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_destroy",
						"t": "void (_Iterator, _Iterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_destroy(_Iterator,_Iterator,std::true_type)",
						"r": "template <typename _Iterator> void __brick_destroy(_Iterator __first, _Iterator __last, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_DESTROY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6f21750ff97e929ce2c26e455598cba845986c0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_uninitialized_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_uninitialized_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,std::false_type)",
						"r": "template <typename _ForwardIterator, typename _OutputIterator> _OutputIterator __brick_uninitialized_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNINITIALIZED_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d47f49407d1985b9016d0c36023c2be0a6ce7638"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_uninitialized_copy",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_uninitialized_copy(_ForwardIterator,_ForwardIterator,_OutputIterator,std::true_type)",
						"r": "template <typename _ForwardIterator, typename _OutputIterator> _OutputIterator __brick_uninitialized_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_UNINITIALIZED_COPY",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34c4c5bb8237917350441a48ad0020c9e75f021d"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/unseq_backend_simd.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_UNSEQ_BACKEND_SIMD_H",
						"t": "",
						"i": "_PSTL_UNSEQ_BACKEND_SIMD_H",
						"r": "_PSTL_UNSEQ_BACKEND_SIMD_H",
						"s": "",
						"u": "_PSTL_UNSEQ_BACKEND_SIMD_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75d91181cd61c2c0fb6bce0fe72913c50634ce2a"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__lane_size",
						"t": "const std::size_t",
						"i": "__pstl::__unseq_backend::__lane_size",
						"r": "const std::size_t __lane_size",
						"s": "__pstl::__unseq_backend",
						"u": "__LANE_SIZE",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6d4179c9aadc7329126cf507b7981fff5aa9f8f4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_walk_1",
						"t": "_Iterator (_Iterator, _DifferenceType, _Function) noexcept",
						"i": "__pstl::__unseq_backend::__simd_walk_1(_Iterator,_DifferenceType,_Function)",
						"r": "template <class _Iterator, class _DifferenceType, class _Function> _Iterator __simd_walk_1(_Iterator __first, _DifferenceType __n, _Function __f)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_WALK_1",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "53ded3b6aec05d10dd6719ba710102f0c0bf62b4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_walk_2",
						"t": "_Iterator2 (_Iterator1, _DifferenceType, _Iterator2, _Function) noexcept",
						"i": "__pstl::__unseq_backend::__simd_walk_2(_Iterator1,_DifferenceType,_Iterator2,_Function)",
						"r": "template <class _Iterator1, class _DifferenceType, class _Iterator2, class _Function> _Iterator2 __simd_walk_2(_Iterator1 __first1, _DifferenceType __n, _Iterator2 __first2, _Function __f)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_WALK_2",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c24604d348ed9d4a8305b6802196251c5337ba30"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_walk_3",
						"t": "_Iterator3 (_Iterator1, _DifferenceType, _Iterator2, _Iterator3, _Function) noexcept",
						"i": "__pstl::__unseq_backend::__simd_walk_3(_Iterator1,_DifferenceType,_Iterator2,_Iterator3,_Function)",
						"r": "template <class _Iterator1, class _DifferenceType, class _Iterator2, class _Iterator3, class _Function> _Iterator3 __simd_walk_3(_Iterator1 __first1, _DifferenceType __n, _Iterator2 __first2, _Iterator3 __first3, _Function __f)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_WALK_3",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "53439534e02654668c13a2cc5e8045d3b62c17a7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_or",
						"t": "bool (_Index, _DifferenceType, _Pred) noexcept",
						"i": "__pstl::__unseq_backend::__simd_or(_Index,_DifferenceType,_Pred)",
						"r": "template <class _Index, class _DifferenceType, class _Pred> bool __simd_or(_Index __first, _DifferenceType __n, _Pred __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_OR",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f80dc89364bb35d18cf98cbd445c2c9c56cf1afb"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_first",
						"t": "_Index (_Index, _DifferenceType, _DifferenceType, _Compare) noexcept",
						"i": "__pstl::__unseq_backend::__simd_first(_Index,_DifferenceType,_DifferenceType,_Compare)",
						"r": "template <class _Index, class _DifferenceType, class _Compare> _Index __simd_first(_Index __first, _DifferenceType __begin, _DifferenceType __end, _Compare __comp)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_FIRST",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "973bb0c19fbc9cd2a71be6f2c7479edda6ac2f7e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_first",
						"t": "std::pair<_Index1, _Index2> (_Index1, _DifferenceType, _Index2, _Pred) noexcept",
						"i": "__pstl::__unseq_backend::__simd_first(_Index1,_DifferenceType,_Index2,_Pred)",
						"r": "template <class _Index1, class _DifferenceType, class _Index2, class _Pred> pair<_Index1, _Index2> __simd_first(_Index1 __first1, _DifferenceType __n, _Index2 __first2, _Pred __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_FIRST",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a50298de9b75bfd2fcdb0b83e13eb53c2e7bb37"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_count",
						"t": "_DifferenceType (_Index, _DifferenceType, _Pred) noexcept",
						"i": "__pstl::__unseq_backend::__simd_count(_Index,_DifferenceType,_Pred)",
						"r": "template <class _Index, class _DifferenceType, class _Pred> _DifferenceType __simd_count(_Index __index, _DifferenceType __n, _Pred __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_COUNT",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7edff1d4191649c289204b62d2352dc09768cf3e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_unique_copy",
						"t": "_OutputIterator (_InputIterator, _DifferenceType, _OutputIterator, _BinaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_unique_copy(_InputIterator,_DifferenceType,_OutputIterator,_BinaryPredicate)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator, class _BinaryPredicate> _OutputIterator __simd_unique_copy(_InputIterator __first, _DifferenceType __n, _OutputIterator __result, _BinaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_UNIQUE_COPY",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0590c565335eca3b13bdc89114b9b44f61f1d5f0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_assign",
						"t": "_OutputIterator (_InputIterator, _DifferenceType, _OutputIterator, _Assigner) noexcept",
						"i": "__pstl::__unseq_backend::__simd_assign(_InputIterator,_DifferenceType,_OutputIterator,_Assigner)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator, class _Assigner> _OutputIterator __simd_assign(_InputIterator __first, _DifferenceType __n, _OutputIterator __result, _Assigner __assigner)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_ASSIGN",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d5f3c4c9f915ede6ee97510258584a92b19aa94f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_copy_if",
						"t": "_OutputIterator (_InputIterator, _DifferenceType, _OutputIterator, _UnaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_copy_if(_InputIterator,_DifferenceType,_OutputIterator,_UnaryPredicate)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator, class _UnaryPredicate> _OutputIterator __simd_copy_if(_InputIterator __first, _DifferenceType __n, _OutputIterator __result, _UnaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_COPY_IF",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2188fee3b237a9c77c4058b51142171773d2f51d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_calc_mask_2",
						"t": "_DifferenceType (_InputIterator, _DifferenceType, bool *, _BinaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_calc_mask_2(_InputIterator,_DifferenceType,bool*,_BinaryPredicate)",
						"r": "template <class _InputIterator, class _DifferenceType, class _BinaryPredicate> _DifferenceType __simd_calc_mask_2(_InputIterator __first, _DifferenceType __n, bool *__mask, _BinaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_CALC_MASK_2",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b6ea582c4bca56982f374f45ca41d7fea1613344"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_calc_mask_1",
						"t": "_DifferenceType (_InputIterator, _DifferenceType, bool *, _UnaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_calc_mask_1(_InputIterator,_DifferenceType,bool*,_UnaryPredicate)",
						"r": "template <class _InputIterator, class _DifferenceType, class _UnaryPredicate> _DifferenceType __simd_calc_mask_1(_InputIterator __first, _DifferenceType __n, bool *__mask, _UnaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_CALC_MASK_1",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72897df3ca0a9ba009b64a84b29cbfd2b0580de8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_copy_by_mask",
						"t": "void (_InputIterator, _DifferenceType, _OutputIterator, bool *, _Assigner) noexcept",
						"i": "__pstl::__unseq_backend::__simd_copy_by_mask(_InputIterator,_DifferenceType,_OutputIterator,bool*,_Assigner)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator, class _Assigner> void __simd_copy_by_mask(_InputIterator __first, _DifferenceType __n, _OutputIterator __result, bool *__mask, _Assigner __assigner)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_COPY_BY_MASK",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "35c394edb6225c226a1498d39936faa94b5b5856"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_partition_by_mask",
						"t": "void (_InputIterator, _DifferenceType, _OutputIterator1, _OutputIterator2, bool *) noexcept",
						"i": "__pstl::__unseq_backend::__simd_partition_by_mask(_InputIterator,_DifferenceType,_OutputIterator1,_OutputIterator2,bool*)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator1, class _OutputIterator2> void __simd_partition_by_mask(_InputIterator __first, _DifferenceType __n, _OutputIterator1 __out_true, _OutputIterator2 __out_false, bool *__mask)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_PARTITION_BY_MASK",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c4b8f556136a89b7b632454c74beaacd36db1a43"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_fill_n",
						"t": "_Index (_Index, _DifferenceType, const _Tp &) noexcept",
						"i": "__pstl::__unseq_backend::__simd_fill_n(_Index,_DifferenceType,const _Tp&)",
						"r": "template <class _Index, class _DifferenceType, class _Tp> _Index __simd_fill_n(_Index __first, _DifferenceType __n, const _Tp& __value)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_FILL_N",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d872ce65f825150e7a931dbe6e6ac253e872df80"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_generate_n",
						"t": "_Index (_Index, _DifferenceType, _Generator) noexcept",
						"i": "__pstl::__unseq_backend::__simd_generate_n(_Index,_DifferenceType,_Generator)",
						"r": "template <class _Index, class _DifferenceType, class _Generator> _Index __simd_generate_n(_Index __first, _DifferenceType __size, _Generator __g)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_GENERATE_N",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e726391f34f58bcd3910d4b0ccf45c15e040f1a2"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_adjacent_find",
						"t": "_Index (_Index, _Index, _BinaryPredicate, bool) noexcept",
						"i": "__pstl::__unseq_backend::__simd_adjacent_find(_Index,_Index,_BinaryPredicate,bool)",
						"r": "template <class _Index, class _BinaryPredicate> _Index __simd_adjacent_find(_Index __first, _Index __last, _BinaryPredicate __pred, bool __or_semantic)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_ADJACENT_FIND",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af55e909a588279f8e53735db81933e82549fee1"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_arithmetic_plus",
						"t": "__pstl::__unseq_backend::is_arithmetic_plus",
						"i": "__pstl::__unseq_backend::is_arithmetic_plus",
						"r": "using is_arithmetic_plus",
						"s": "__pstl::__unseq_backend",
						"u": "IS_ARITHMETIC_PLUS",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a831f4849bb694a97c43d6ff06e10bcc894754d7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_transform_reduce",
						"t": "typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, _Tp>::type (_DifferenceType, _Tp, _BinaryOperation, _UnaryOperation) noexcept",
						"i": "__pstl::__unseq_backend::__simd_transform_reduce(_DifferenceType,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <typename _DifferenceType, typename _Tp, typename _BinaryOperation, typename _UnaryOperation> typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, _Tp>::type __simd_transform_reduce(_DifferenceType __n, _Tp __init, _BinaryOperation, _UnaryOperation __f)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_TRANSFORM_REDUCE",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f6e056f24bfffca7f68ff4828263ab97eda7081"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_transform_reduce",
						"t": "typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, _Tp>::type (_Size, _Tp, _BinaryOperation, _UnaryOperation) noexcept",
						"i": "__pstl::__unseq_backend::__simd_transform_reduce(_Size,_Tp,_BinaryOperation,_UnaryOperation)",
						"r": "template <typename _Size, typename _Tp, typename _BinaryOperation, typename _UnaryOperation> typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, _Tp>::type __simd_transform_reduce(_Size __n, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __f)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_TRANSFORM_REDUCE",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1df03fc59fcdf9f970775e70b05cf19020023d06"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_scan",
						"t": "typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_InputIterator, _Size, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type)",
						"i": "__pstl::__unseq_backend::__simd_scan(_InputIterator,_Size,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::false_type)",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation, std::false_type)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_SCAN",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2feed904ab2c14f06b726b014c276e600d0dab4f"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Combiner",
						"t": "",
						"i": "__pstl::__unseq_backend::_Combiner",
						"r": "template <typename _Tp, typename _BinaryOp> _Combiner",
						"s": "__pstl::__unseq_backend",
						"u": "_COMBINER",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "974c131bdacf813d0e56a741635bf98dc487a948"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__value",
						"t": "_Tp",
						"i": "__pstl::__unseq_backend::_Combiner::__value",
						"r": "_Tp __value",
						"s": "__pstl::__unseq_backend",
						"u": "__VALUE",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20e3f135629004aecc20f6c5b90d621e2556f113"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__bin_op",
						"t": "_BinaryOp *",
						"i": "__pstl::__unseq_backend::_Combiner::__bin_op",
						"r": "_BinaryOp *__bin_op",
						"s": "__pstl::__unseq_backend",
						"u": "__BIN_OP",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "496c5b7fa8a949923d890a6cee4cb6f23d43221b"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Combiner<_Tp, _BinaryOp>",
						"t": "void ()",
						"i": "__pstl::__unseq_backend::_Combiner::_Combiner()",
						"r": "_Combiner<_Tp, _BinaryOp>()",
						"s": "__pstl::__unseq_backend",
						"u": "_COMBINER<_TP, _BINARYOP>",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ddc89fa9a8548894b221f88e57acbf430eb63eae"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Combiner<_Tp, _BinaryOp>",
						"t": "void (const _Tp &, const _BinaryOp *)",
						"i": "__pstl::__unseq_backend::_Combiner::_Combiner(const _Tp&,const _BinaryOp*)",
						"r": "_Combiner<_Tp, _BinaryOp>(const _Tp& value, const _BinaryOp *__bin_op)",
						"s": "__pstl::__unseq_backend",
						"u": "_COMBINER<_TP, _BINARYOP>",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9caf640b65b2e4ab42d964b21cee92e8e8584fe7"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_Combiner<_Tp, _BinaryOp>",
						"t": "void (const _Combiner<_Tp, _BinaryOp> &)",
						"i": "__pstl::__unseq_backend::_Combiner::_Combiner(const _Combiner&)",
						"r": "_Combiner<_Tp, _BinaryOp>(const _Combiner<_Tp, _BinaryOp>& __obj)",
						"s": "__pstl::__unseq_backend",
						"u": "_COMBINER<_TP, _BINARYOP>",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "963a07417941b488b546187867770c93b1a0fd25"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (const _Combiner<_Tp, _BinaryOp> &)",
						"i": "__pstl::__unseq_backend::_Combiner::operator()(const _Combiner&)",
						"r": "void operator()(const _Combiner<_Tp, _BinaryOp>& __obj)",
						"s": "__pstl::__unseq_backend",
						"u": "OPERATOR()",
						"q": "__pstl::__unseq_backend::_Combiner",
						"w": "__PSTL::__UNSEQ_BACKEND::_COMBINER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b7ab235f39b6220e895e34669082e2590b6c9e16"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_scan",
						"t": "typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_InputIterator, _Size, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type)",
						"i": "__pstl::__unseq_backend::__simd_scan(_InputIterator,_Size,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::false_type)",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, std::false_type)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_SCAN",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d43b125f62d52d131748ad7ac38921a5146075d"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_scan",
						"t": "typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_InputIterator, _Size, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type)",
						"i": "__pstl::__unseq_backend::__simd_scan(_InputIterator,_Size,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::true_type)",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> typename std::enable_if<is_arithmetic_plus<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation, std::true_type)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_SCAN",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78ea435242cb2216086151589397ec3d053c50d4"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_scan",
						"t": "typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_InputIterator, _Size, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type)",
						"i": "__pstl::__unseq_backend::__simd_scan(_InputIterator,_Size,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::true_type)",
						"r": "template <class _InputIterator, class _Size, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> typename std::enable_if<!is_arithmetic_plus<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, std::true_type)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_SCAN",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e72e2026f0a934661c3575d3af7dcc2fc146c4e9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_min_element",
						"t": "_ForwardIterator (_ForwardIterator, _Size, _Compare) noexcept",
						"i": "__pstl::__unseq_backend::__simd_min_element(_ForwardIterator,_Size,_Compare)",
						"r": "template <typename _ForwardIterator, typename _Size, typename _Compare> _ForwardIterator __simd_min_element(_ForwardIterator __first, _Size __n, _Compare __comp)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_MIN_ELEMENT",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0efecc1d9e4d4714a617110516c5647dc3430b5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_minmax_element",
						"t": "std::pair<_ForwardIterator, _ForwardIterator> (_ForwardIterator, _Size, _Compare) noexcept",
						"i": "__pstl::__unseq_backend::__simd_minmax_element(_ForwardIterator,_Size,_Compare)",
						"r": "template <typename _ForwardIterator, typename _Size, typename _Compare> pair<_ForwardIterator, _ForwardIterator> __simd_minmax_element(_ForwardIterator __first, _Size __n, _Compare __comp)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_MINMAX_ELEMENT",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4472feb27977bd942f60db1079cdce9431b0f51"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_partition_copy",
						"t": "std::pair<_OutputIterator1, _OutputIterator2> (_InputIterator, _DifferenceType, _OutputIterator1, _OutputIterator2, _UnaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_partition_copy(_InputIterator,_DifferenceType,_OutputIterator1,_OutputIterator2,_UnaryPredicate)",
						"r": "template <class _InputIterator, class _DifferenceType, class _OutputIterator1, class _OutputIterator2, class _UnaryPredicate> pair<_OutputIterator1, _OutputIterator2> __simd_partition_copy(_InputIterator __first, _DifferenceType __n, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _UnaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_PARTITION_COPY",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bac8157a50b029049139785cacddbec3f8724e5a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_find_first_of",
						"t": "_ForwardIterator1 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _BinaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_find_first_of(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_BinaryPredicate)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate> _ForwardIterator1 __simd_find_first_of(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __s_first, _ForwardIterator2 __s_last, _BinaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_FIND_FIRST_OF",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "68dede1e5cb2a5d3e5343f041bdfa86bfa0a97ed"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__simd_remove_if",
						"t": "_RandomAccessIterator (_RandomAccessIterator, _DifferenceType, _UnaryPredicate) noexcept",
						"i": "__pstl::__unseq_backend::__simd_remove_if(_RandomAccessIterator,_DifferenceType,_UnaryPredicate)",
						"r": "template <class _RandomAccessIterator, class _DifferenceType, class _UnaryPredicate> _RandomAccessIterator __simd_remove_if(_RandomAccessIterator __first, _DifferenceType __n, _UnaryPredicate __pred)",
						"s": "__pstl::__unseq_backend",
						"u": "__SIMD_REMOVE_IF",
						"q": "__pstl::__unseq_backend",
						"w": "__PSTL::__UNSEQ_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d82e868fa79035163a160f3026f6cf30047ee775"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/parallel_backend_utils.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PARALLEL_BACKEND_UTILS_H",
						"t": "",
						"i": "_PSTL_PARALLEL_BACKEND_UTILS_H",
						"r": "_PSTL_PARALLEL_BACKEND_UTILS_H",
						"s": "",
						"u": "_PSTL_PARALLEL_BACKEND_UTILS_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4649acbc2102863a4d6fb68b6905c93e0233b2c3"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__serial_destroy",
						"t": "__pstl::__utils::__serial_destroy",
						"i": "__pstl::__utils::__serial_destroy",
						"r": "__serial_destroy",
						"s": "__pstl::__utils",
						"u": "__SERIAL_DESTROY",
						"q": "__pstl::__utils::__serial_destroy",
						"w": "__PSTL::__UTILS::__SERIAL_DESTROY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aaa9b19ea322040a170e7c7511f40eba392a46d0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (_RandomAccessIterator, _RandomAccessIterator)",
						"i": "__pstl::__utils::__serial_destroy::operator()(_RandomAccessIterator,_RandomAccessIterator)",
						"r": "template <typename _RandomAccessIterator> void operator()(_RandomAccessIterator __zs, _RandomAccessIterator __ze)",
						"s": "__pstl::__utils",
						"u": "OPERATOR()",
						"q": "__pstl::__utils::__serial_destroy",
						"w": "__PSTL::__UTILS::__SERIAL_DESTROY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b632b68eac0eb5ba7c4716c607d1d1d095dc955c"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__serial_move_merge",
						"t": "__pstl::__utils::__serial_move_merge",
						"i": "__pstl::__utils::__serial_move_merge",
						"r": "__serial_move_merge",
						"s": "__pstl::__utils",
						"u": "__SERIAL_MOVE_MERGE",
						"q": "__pstl::__utils::__serial_move_merge",
						"w": "__PSTL::__UTILS::__SERIAL_MOVE_MERGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2cf88a3e350b69cb45943fb5d801eb6cea252e54"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "_M_nmerge",
						"t": "const std::size_t",
						"i": "__pstl::__utils::__serial_move_merge::_M_nmerge",
						"r": "const std::size_t _M_nmerge",
						"s": "__pstl::__utils",
						"u": "_M_NMERGE",
						"q": "__pstl::__utils::__serial_move_merge",
						"w": "__PSTL::__UTILS::__SERIAL_MOVE_MERGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6f9f4961e14176ac30c93d1fac9ead6b8cac9b09"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__serial_move_merge",
						"t": "void (std::size_t)",
						"i": "__pstl::__utils::__serial_move_merge::__serial_move_merge(std::size_t)",
						"r": "explicit __serial_move_merge(std::size_t __nmerge)",
						"s": "__pstl::__utils",
						"u": "__SERIAL_MOVE_MERGE",
						"q": "__pstl::__utils::__serial_move_merge",
						"w": "__PSTL::__UTILS::__SERIAL_MOVE_MERGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b38ef0dbc424be4c8dd4fd93579fbb954877ef9f"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "void (_RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _MoveValueX, _MoveValueY, _MoveSequenceX, _MoveSequenceY)",
						"i": "__pstl::__utils::__serial_move_merge::operator()(_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_RandomAccessIterator3,_Compare,_MoveValueX,_MoveValueY,_MoveSequenceX,_MoveSequenceY)",
						"r": "template <class _RandomAccessIterator1, class _RandomAccessIterator2, class _RandomAccessIterator3, class _Compare, class _MoveValueX, class _MoveValueY, class _MoveSequenceX, class _MoveSequenceY> void operator()(_RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _MoveValueX __move_value_x, _MoveValueY __move_value_y, _MoveSequenceX __move_sequence_x, _MoveSequenceY __move_sequence_y)",
						"s": "__pstl::__utils",
						"u": "OPERATOR()",
						"q": "__pstl::__utils::__serial_move_merge",
						"w": "__PSTL::__UTILS::__SERIAL_MOVE_MERGE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b63fa57b5db389a923156439156b790507eec463"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_union_construct",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _CopyConstructRange)",
						"i": "__pstl::__utils::__set_union_construct(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_CopyConstructRange)",
						"r": "template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare, typename _CopyConstructRange> _OutputIterator __set_union_construct(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _CopyConstructRange __cc_range)",
						"s": "__pstl::__utils",
						"u": "__SET_UNION_CONSTRUCT",
						"q": "__pstl::__utils",
						"w": "__PSTL::__UTILS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1f042643beae7bdbbe9ec49c2338c818a60aea9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_intersection_construct",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare)",
						"i": "__pstl::__utils::__set_intersection_construct(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare)",
						"r": "template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare> _OutputIterator __set_intersection_construct(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp)",
						"s": "__pstl::__utils",
						"u": "__SET_INTERSECTION_CONSTRUCT",
						"q": "__pstl::__utils",
						"w": "__PSTL::__UTILS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e43b121687d1a3eb86b2eed958c34ca61c39da68"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_difference_construct",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _CopyConstructRange)",
						"i": "__pstl::__utils::__set_difference_construct(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_CopyConstructRange)",
						"r": "template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare, typename _CopyConstructRange> _OutputIterator __set_difference_construct(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _CopyConstructRange __cc_range)",
						"s": "__pstl::__utils",
						"u": "__SET_DIFFERENCE_CONSTRUCT",
						"q": "__pstl::__utils",
						"w": "__PSTL::__UTILS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11eada636c387438ae9d33df90081d08205b1958"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__set_symmetric_difference_construct",
						"t": "_OutputIterator (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2, _OutputIterator, _Compare, _CopyConstructRange)",
						"i": "__pstl::__utils::__set_symmetric_difference_construct(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_ForwardIterator2,_OutputIterator,_Compare,_CopyConstructRange)",
						"r": "template <typename _ForwardIterator1, typename _ForwardIterator2, typename _OutputIterator, typename _Compare, typename _CopyConstructRange> _OutputIterator __set_symmetric_difference_construct(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _OutputIterator __result, _Compare __comp, _CopyConstructRange __cc_range)",
						"s": "__pstl::__utils",
						"u": "__SET_SYMMETRIC_DIFFERENCE_CONSTRUCT",
						"q": "__pstl::__utils",
						"w": "__PSTL::__UTILS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d1f5aa2c7bd87939cfd8931b05a5dfb988b6def"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/parallel_backend.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PARALLEL_BACKEND_H",
						"t": "",
						"i": "_PSTL_PARALLEL_BACKEND_H",
						"r": "_PSTL_PARALLEL_BACKEND_H",
						"s": "",
						"u": "_PSTL_PARALLEL_BACKEND_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ae90b65dbae6d60d82652968b27f9a914beb13d"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/parallel_backend_serial.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PARALLEL_BACKEND_SERIAL_H",
						"t": "",
						"i": "_PSTL_PARALLEL_BACKEND_SERIAL_H",
						"r": "_PSTL_PARALLEL_BACKEND_SERIAL_H",
						"s": "",
						"u": "_PSTL_PARALLEL_BACKEND_SERIAL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f152f66049bad553498dfcdda34c2335bddf8271"
							}
						]
					},
					{
						"k": 31,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__buffer",
						"t": "",
						"i": "__pstl::__serial_backend::__buffer",
						"r": "template <typename _Tp> __buffer",
						"s": "__pstl::__serial_backend",
						"u": "__BUFFER",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3a75e8fbed6f8ffe32081f4b4762d92f0d8263c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__allocator_",
						"t": "std::allocator<_Tp>",
						"i": "__pstl::__serial_backend::__buffer::__allocator_",
						"r": "allocator<_Tp> __allocator_",
						"s": "__pstl::__serial_backend",
						"u": "__ALLOCATOR_",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e787192dfb0d333face8083418142e475f049904"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__ptr_",
						"t": "_Tp *",
						"i": "__pstl::__serial_backend::__buffer::__ptr_",
						"r": "_Tp *__ptr_",
						"s": "__pstl::__serial_backend",
						"u": "__PTR_",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f06de314212414fb1acf715cd4adc225bf4a7bce"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__buf_size_",
						"t": "const std::size_t",
						"i": "__pstl::__serial_backend::__buffer::__buf_size_",
						"r": "const std::size_t __buf_size_",
						"s": "__pstl::__serial_backend",
						"u": "__BUF_SIZE_",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e56bd7d062c00fe3772213dc9d9de81888cd131e"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "__buffer<_Tp>",
						"t": "void (const __buffer<_Tp> &)",
						"i": "__pstl::__serial_backend::__buffer::__buffer(const __buffer&)=delete",
						"r": "__buffer<_Tp>(const __buffer<_Tp>&)",
						"s": "__pstl::__serial_backend",
						"u": "__BUFFER<_TP>",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc334da84c7fd0e2f466f875ac22bd505a7a3a31"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "void (const __buffer<_Tp> &)",
						"i": "__pstl::__serial_backend::__buffer::operator=(const __buffer&)=delete",
						"r": "void operator",
						"s": "__pstl::__serial_backend",
						"u": "OPERATOR=",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "97c71a45516b67e4d08c4de6262a4e125a123e91"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__buffer<_Tp>",
						"t": "void (std::size_t)",
						"i": "__pstl::__serial_backend::__buffer::__buffer(std::size_t)",
						"r": "__buffer<_Tp>(std::size_t __n)",
						"s": "__pstl::__serial_backend",
						"u": "__BUFFER<_TP>",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c0b613bc07b7c309ff244671cc25c98da659b68"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator bool",
						"t": "bool () const",
						"i": "__pstl::__serial_backend::__buffer::operator bool()const",
						"r": "operator bool() const",
						"s": "__pstl::__serial_backend",
						"u": "OPERATOR BOOL",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "579aaa38a8cb06b5e8dfb36dfee26b80cde11a8a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get",
						"t": "_Tp *() const",
						"i": "__pstl::__serial_backend::__buffer::get()const",
						"r": "_Tp *get() const",
						"s": "__pstl::__serial_backend",
						"u": "GET",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a482e4bc0dfe0b3062a3e772a57e732dca4177e"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~__buffer<_Tp>",
						"t": "void ()",
						"i": "__pstl::__serial_backend::__buffer::~__buffer()",
						"r": "~__buffer<_Tp>()",
						"s": "__pstl::__serial_backend",
						"u": "~__BUFFER<_TP>",
						"q": "__pstl::__serial_backend::__buffer",
						"w": "__PSTL::__SERIAL_BACKEND::__BUFFER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e80bc8697e531b749778299ff48e1616e46cfa6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__cancel_execution",
						"t": "void ()",
						"i": "__pstl::__serial_backend::__cancel_execution()",
						"r": "void __cancel_execution()",
						"s": "__pstl::__serial_backend",
						"u": "__CANCEL_EXECUTION",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5aea8dc3a4e7aebc169cadd34884f5a4bd8b81af"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_for",
						"t": "void (_ExecutionPolicy &&, _Index, _Index, _Fp)",
						"i": "__pstl::__serial_backend::__parallel_for(_ExecutionPolicy&&,_Index,_Index,_Fp)",
						"r": "template <class _ExecutionPolicy, class _Index, class _Fp> void __parallel_for(_ExecutionPolicy&&, _Index __first, _Index __last, _Fp __f)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_FOR",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25b2a38971300065bcc5d68470e3df3a7d1fd31a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_reduce",
						"t": "_Value (_ExecutionPolicy &&, _Index, _Index, const _Value &, const _RealBody &, const _Reduction &)",
						"i": "__pstl::__serial_backend::__parallel_reduce(_ExecutionPolicy&&,_Index,_Index,const _Value&,const _RealBody&,const _Reduction&)",
						"r": "template <class _ExecutionPolicy, class _Value, class _Index, typename _RealBody, typename _Reduction> _Value __parallel_reduce(_ExecutionPolicy&&, _Index __first, _Index __last, const _Value& __identity, const _RealBody& __real_body, const _Reduction&)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_REDUCE",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74ed4c2a26a3f1a17c0e6e53656651a3c9b2cb5c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _Index, _Index, _UnaryOp, _Tp, _BinaryOp, _Reduce)",
						"i": "__pstl::__serial_backend::__parallel_transform_reduce(_ExecutionPolicy&&,_Index,_Index,_UnaryOp,_Tp,_BinaryOp,_Reduce)",
						"r": "template <class _ExecutionPolicy, class _Index, class _UnaryOp, class _Tp, class _BinaryOp, class _Reduce> _Tp __parallel_transform_reduce(_ExecutionPolicy&&, _Index __first, _Index __last, _UnaryOp, _Tp __init, _BinaryOp, _Reduce __reduce)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_TRANSFORM_REDUCE",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9a9f6cb4532eb348d5e48b2214d811e6d097950"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_strict_scan",
						"t": "void (_ExecutionPolicy &&, _Index, _Tp, _Rp, _Cp, _Sp, _Ap)",
						"i": "__pstl::__serial_backend::__parallel_strict_scan(_ExecutionPolicy&&,_Index,_Tp,_Rp,_Cp,_Sp,_Ap)",
						"r": "template <class _ExecutionPolicy, typename _Index, typename _Tp, typename _Rp, typename _Cp, typename _Sp, typename _Ap> void __parallel_strict_scan(_ExecutionPolicy&&, _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_STRICT_SCAN",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "346aeb4c72a6485ef1ddb0f07c724401822021d0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_transform_scan",
						"t": "_Tp (_ExecutionPolicy &&, _Index, _UnaryOp, _Tp, _BinaryOp, _Reduce, _Scan)",
						"i": "__pstl::__serial_backend::__parallel_transform_scan(_ExecutionPolicy&&,_Index,_UnaryOp,_Tp,_BinaryOp,_Reduce,_Scan)",
						"r": "template <class _ExecutionPolicy, class _Index, class _UnaryOp, class _Tp, class _BinaryOp, class _Reduce, class _Scan> _Tp __parallel_transform_scan(_ExecutionPolicy&&, _Index __n, _UnaryOp, _Tp __init, _BinaryOp, _Reduce, _Scan __scan)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_TRANSFORM_SCAN",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7e00dc22ed7d064f166516f543910acbc3181f0"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_stable_sort",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _Compare, _LeafSort, std::size_t)",
						"i": "__pstl::__serial_backend::__parallel_stable_sort(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_Compare,_LeafSort,std::size_t)",
						"r": "template <class _ExecutionPolicy, typename _RandomAccessIterator, typename _Compare, typename _LeafSort> void __parallel_stable_sort(_ExecutionPolicy&&, _RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp, _LeafSort __leaf_sort, std::size_t = 0)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_STABLE_SORT",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ea0680c74192fc08038a419ee39f7a6976e33d7"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_merge",
						"t": "void (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge)",
						"i": "__pstl::__serial_backend::__parallel_merge(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_RandomAccessIterator2,_RandomAccessIterator3,_Compare,_LeafMerge)",
						"r": "template <class _ExecutionPolicy, typename _RandomAccessIterator1, typename _RandomAccessIterator2, typename _RandomAccessIterator3, typename _Compare, typename _LeafMerge> void __parallel_merge(_ExecutionPolicy&&, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _RandomAccessIterator2 __last2, _RandomAccessIterator3 __outit, _Compare __comp, _LeafMerge __leaf_merge)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_MERGE",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "555a17d4583ffcc8099787d61247ecb885f528a5"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_invoke",
						"t": "void (_ExecutionPolicy &&, _F1 &&, _F2 &&)",
						"i": "__pstl::__serial_backend::__parallel_invoke(_ExecutionPolicy&&,_F1&&,_F2&&)",
						"r": "template <class _ExecutionPolicy, typename _F1, typename _F2> void __parallel_invoke(_ExecutionPolicy&&, _F1&& __f1, _F2&& __f2)",
						"s": "__pstl::__serial_backend",
						"u": "__PARALLEL_INVOKE",
						"q": "__pstl::__serial_backend",
						"w": "__PSTL::__SERIAL_BACKEND",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de2fcac222195a4d307ba04e091a30492d4001c5"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/parallel_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_PARALLEL_IMPL_H",
						"t": "",
						"i": "_PSTL_PARALLEL_IMPL_H",
						"r": "_PSTL_PARALLEL_IMPL_H",
						"s": "",
						"u": "_PSTL_PARALLEL_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1b978f81c0e0c6456450b8a138f276fefbe634e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_find",
						"t": "_Index (_ExecutionPolicy &&, _Index, _Index, _Brick, _Compare, bool)",
						"i": "__pstl::__internal::__parallel_find(_ExecutionPolicy&&,_Index,_Index,_Brick,_Compare,bool)",
						"r": "template <class _ExecutionPolicy, class _Index, class _Brick, class _Compare> _Index __parallel_find(_ExecutionPolicy&& __exec, _Index __first, _Index __last, _Brick __f, _Compare __comp, bool __b_first)",
						"s": "__pstl::__internal",
						"u": "__PARALLEL_FIND",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e5e8cc60c76ec2074ab34f9c393615e4317cb1c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__parallel_or",
						"t": "bool (_ExecutionPolicy &&, _Index, _Index, _Brick)",
						"i": "__pstl::__internal::__parallel_or(_ExecutionPolicy&&,_Index,_Index,_Brick)",
						"r": "template <class _ExecutionPolicy, class _Index, class _Brick> bool __parallel_or(_ExecutionPolicy&& __exec, _Index __first, _Index __last, _Brick __f)",
						"s": "__pstl::__internal",
						"u": "__PARALLEL_OR",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88740cb2820344842d26cc1063e6d2b0c5d68d94"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/numeric_impl.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_PSTL_NUMERIC_IMPL_H",
						"t": "",
						"i": "_PSTL_NUMERIC_IMPL_H",
						"r": "_PSTL_NUMERIC_IMPL_H",
						"s": "",
						"u": "_PSTL_NUMERIC_IMPL_H",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15998ed13e39cd3c9b2ac90280dc14886b18f446"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,std::false_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> _Tp __brick_transform_reduce(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "70fead5f05287ee7c0eb1d0a590fd86f9190b7c8"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2> _Tp __brick_transform_reduce(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4259df58d01d870129fafd201226143349fcd84b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9facd06699e6c9a2aa516c0f138d4519d4cbc11"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_RandomAccessIterator1,_RandomAccessIterator1,_RandomAccessIterator2,_Tp,_BinaryOperation1,_BinaryOperation2,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator1, class _RandomAccessIterator2, class _Tp, class _BinaryOperation1, class _BinaryOperation2, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&& __exec, _RandomAccessIterator1 __first1, _RandomAccessIterator1 __last1, _RandomAccessIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bef985bfbb8d9edb106342ce1d8bf6d998fceb9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,std::false_type)",
						"r": "template <class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation> _Tp __brick_transform_reduce(_ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bc514c9f5c84f2b9b5db922dd17e8e46d0af61a"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_reduce",
						"t": "_Tp (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_reduce(_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,std::true_type)",
						"r": "template <class _ForwardIterator, class _Tp, class _UnaryOperation, class _BinaryOperation> _Tp __brick_transform_reduce(_ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77eb65ec3ecb17b47e923342d0968a6901e6e613"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f56206c58d9e0a758d8e93f510ef139cd3c66a9e"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_reduce",
						"t": "_Tp (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_reduce(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_Tp,_BinaryOperation,_UnaryOperation,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _Tp, class _BinaryOperation, class _UnaryOperation, class _IsVector> _Tp __pattern_transform_reduce(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, _Tp __init, _BinaryOperation __binary_op, _UnaryOperation __unary_op, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_REDUCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1dcaafaa6d277bb39b90b54c79c2b2b2c087d22"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "std::pair<_OutputIterator, _Tp> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::false_type,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> pair<_OutputIterator, _Tp> __brick_transform_scan(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, std::false_type, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "26f2d304ef29fd2b6d04c6c0e10c65cf3cfd958c"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "std::pair<_OutputIterator, _Tp> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,std::true_type,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation> pair<_OutputIterator, _Tp> __brick_transform_scan(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, std::true_type, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "913152a85b0fc9c8f48f8ef51eefa98744742566"
							}
						]
					},
					{
						"k": 36,
						"d": true,
						"iv": false,
						"is": false,
						"n": "is_arithmetic_udop",
						"t": "__pstl::__internal::is_arithmetic_udop",
						"i": "__pstl::__internal::is_arithmetic_udop",
						"r": "using is_arithmetic_udop",
						"s": "__pstl::__internal",
						"u": "IS_ARITHMETIC_UDOP",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "886fe3a30c2baf4f9597239c86300f1d8ac4d567"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "typename std::enable_if<!is_arithmetic_udop<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive> typename std::enable_if<!is_arithmetic_udop<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __brick_transform_scan(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, _Inclusive, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d37e515944e4112a60998ebfe45b705bff8cb4b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_transform_scan",
						"t": "typename std::enable_if<is_arithmetic_udop<_Tp, _BinaryOperation>::value, std::pair<_OutputIterator, _Tp>>::type (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_transform_scan(_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,std::true_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive> typename std::enable_if<is_arithmetic_udop<_Tp, _BinaryOperation>::value, pair<_OutputIterator, _Tp>>::type __brick_transform_scan(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, _Inclusive, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00e62dd7898b2acd007873c4667e67b938a9d911"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> _OutputIterator __pattern_transform_scan(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, _Inclusive, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7f0d2d77dcd9ab7045cd7b0a553f5f62cbc5c72"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "typename std::enable_if<!std::is_floating_point<_Tp>::value, _OutputIterator>::type (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> typename std::enable_if<!std::is_floating_point<_Tp>::value, _OutputIterator>::type __pattern_transform_scan(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, _Inclusive, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d26c2788bcc1691a11c4eb11e94515a553b7dea"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_transform_scan",
						"t": "typename std::enable_if<std::is_floating_point<_Tp>::value, _OutputIterator>::type (_ExecutionPolicy &&, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_transform_scan(_ExecutionPolicy&&,_RandomAccessIterator,_RandomAccessIterator,_OutputIterator,_UnaryOperation,_Tp,_BinaryOperation,_Inclusive,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _RandomAccessIterator, class _OutputIterator, class _UnaryOperation, class _Tp, class _BinaryOperation, class _Inclusive, class _IsVector> typename std::enable_if<std::is_floating_point<_Tp>::value, _OutputIterator>::type __pattern_transform_scan(_ExecutionPolicy&& __exec, _RandomAccessIterator __first, _RandomAccessIterator __last, _OutputIterator __result, _UnaryOperation __unary_op, _Tp __init, _BinaryOperation __binary_op, _Inclusive, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_TRANSFORM_SCAN",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cdb656f3638126f31adeca8d5b74bfc84b1e5e07"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_difference",
						"t": "_OutputIterator (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::false_type) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_difference(_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,std::false_type)",
						"r": "template <class _ForwardIterator, class _OutputIterator, class _BinaryOperation> _OutputIterator __brick_adjacent_difference(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __d_first, _BinaryOperation __op, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c426029590a50b782fc1f80f8f1cab628349a5cd"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__brick_adjacent_difference",
						"t": "_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, std::true_type) noexcept",
						"i": "__pstl::__internal::__brick_adjacent_difference(_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,std::true_type)",
						"r": "template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation> _ForwardIterator2 __brick_adjacent_difference(_ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first, _BinaryOperation __op, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__BRICK_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23b7e35068e503baf767df544ee738427df6cc6b"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_difference",
						"t": "_OutputIterator (_ExecutionPolicy &&, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::false_type) noexcept",
						"i": "__pstl::__internal::__pattern_adjacent_difference(_ExecutionPolicy&&,_ForwardIterator,_ForwardIterator,_OutputIterator,_BinaryOperation,_IsVector,std::false_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator, class _OutputIterator, class _BinaryOperation, class _IsVector> _OutputIterator __pattern_adjacent_difference(_ExecutionPolicy&&, _ForwardIterator __first, _ForwardIterator __last, _OutputIterator __d_first, _BinaryOperation __op, _IsVector __is_vector, std::false_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "392423c3bccb7b93a4a6e0ecd25425b3848067d9"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "__pattern_adjacent_difference",
						"t": "_ForwardIterator2 (_ExecutionPolicy &&, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _BinaryOperation, _IsVector, std::true_type)",
						"i": "__pstl::__internal::__pattern_adjacent_difference(_ExecutionPolicy&&,_ForwardIterator1,_ForwardIterator1,_ForwardIterator2,_BinaryOperation,_IsVector,std::true_type)",
						"r": "template <class _ExecutionPolicy, class _ForwardIterator1, class _ForwardIterator2, class _BinaryOperation, class _IsVector> _ForwardIterator2 __pattern_adjacent_difference(_ExecutionPolicy&& __exec, _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 __d_first, _BinaryOperation __op, _IsVector __is_vector, std::true_type)",
						"s": "__pstl::__internal",
						"u": "__PATTERN_ADJACENT_DIFFERENCE",
						"q": "__pstl::__internal",
						"w": "__PSTL::__INTERNAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af466b72bb147ccbcde5465ca68d1ab3ac36f5a2"
							}
						]
					}
				]
			}
		},
		{
			"key": "pstl/parallel_backend_tbb.h",
			"value": {
				"items": [

				]
			}
		}
	]
}